{
  "version": 3,
  "sources": ["src/app/components/config-header/config-header.component.ts"],
  "sourcesContent": ["import { Component, Input, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-config-header',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <header class=\"bg-white shadow-sm border-b border-gray-200\">\n      <div class=\"max-w-full mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center h-16\">\n          <div class=\"flex items-center space-x-4\">\n            <button \n              (click)=\"goToDashboard()\"\n              class=\"text-gray-500 hover:text-gray-700 p-2 rounded-lg hover:bg-gray-100 transition-colors\">\n              <i class=\"fas fa-arrow-left\"></i>\n            </button>\n            \n            <h1 class=\"text-xl font-semibold text-gray-900\">\n              {{ title }}\n            </h1>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <ng-content></ng-content>\n          </div>\n        </div>\n      </div>\n    </header>\n  `,\n  styles: [`\n    header {\n      position: sticky;\n      top: 0;\n      z-index: 10;\n    }\n  `]\n})\nexport class ConfigHeaderComponent {\n  @Input() title: string = '';\n  \n  private router = inject(Router);\n  private subdomainService = inject(SubdomainService);\n\n  get companyName(): string {\n    return this.subdomainService.getCurrentCompany()?.name || 'Sistema Kanban';\n  }\n\n  get companyLogo(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Sempre priorizar logo da empresa configurado\n    if (company?.logoUrl && company.logoUrl.trim() !== '') {\n      return company.logoUrl;\n    }\n    \n    // Fallback para brandingConfig logo\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return company.brandingConfig.logo;\n    }\n    \n    return '';\n  }\n\n  goToDashboard() {\n    this.router.navigate(['/dashboard']);\n  }\n\n  hasCustomLogo(): boolean {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Verificar se tem logo da empresa configurado\n    if (company?.logoUrl && company.logoUrl.trim() !== '') {\n      return true;\n    }\n    \n    // Fallback para brandingConfig logo\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return true;\n    }\n    \n    return false;\n  }\n\n  get primaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n\n  getCompanyInitials(): string {\n    const name = this.companyName;\n    if (!name || name === 'Sistema Kanban') return 'SK';\n    \n    const words = name.split(' ').filter(word => word.length > 0);\n    if (words.length === 1) {\n      return words[0].charAt(0).toUpperCase();\n    } else if (words.length >= 2) {\n      return words[0].charAt(0).toUpperCase() + words[1].charAt(0).toUpperCase();\n    }\n    \n    return 'SK';\n  }\n}"],
  "mappings": "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",
  "names": []
}
