{
  "version": 3,
  "sources": ["src/app/components/toast/toast.service.ts", "src/app/components/global-header/global-header.component.ts", "src/app/components/global-footer/global-footer.component.ts", "src/app/components/toast/toast-container.component.ts", "src/app/components/main-layout/main-layout.component.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface ToastMessage {\n  id: string;\n  text: string;\n  type: 'success' | 'error' | 'info' | 'warning';\n  timeoutMs?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  private messagesSubject = new BehaviorSubject<ToastMessage[]>([]);\n  messages$ = this.messagesSubject.asObservable();\n\n  show(text: string, type: ToastMessage['type'] = 'info', timeoutMs: number = 3000) {\n    const id = Math.random().toString(36).slice(2);\n    const msg: ToastMessage = { id, text, type, timeoutMs };\n    const list = this.messagesSubject.value.slice();\n    list.push(msg);\n    this.messagesSubject.next(list);\n    if (timeoutMs > 0) {\n      setTimeout(() => this.dismiss(id), timeoutMs);\n    }\n  }\n\n  success(text: string, timeoutMs: number = 3000) { this.show(text, 'success', timeoutMs); }\n  error(text: string, timeoutMs: number = 4000) { this.show(text, 'error', timeoutMs); }\n  info(text: string, timeoutMs: number = 3000) { this.show(text, 'info', timeoutMs); }\n  warning(text: string, timeoutMs: number = 3000) { this.show(text, 'warning', timeoutMs); }\n\n  dismiss(id: string) {\n    this.messagesSubject.next(this.messagesSubject.value.filter(m => m.id !== id));\n  }\n}\n\n\n", "import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { SubdomainService } from '../../services/subdomain.service';\n\n@Component({\n  selector: 'app-global-header',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <header class=\"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-50\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center h-16\">\n          <!-- Task Board Logo/Brand -->\n          <div class=\"flex items-center space-x-3\">\n            <div class=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n              <i class=\"fas fa-tasks text-white text-lg\"></i>\n            </div>\n            <div>\n              <h1 class=\"text-xl font-bold text-gray-900\">Task Board</h1>\n              <p class=\"text-xs text-gray-500\">Sistema de Gestão Kanban</p>\n            </div>\n          </div>\n\n          <!-- Navigation Menu -->\n          <nav class=\"hidden md:flex items-center space-x-6\">\n            <a href=\"/dashboard\" \n               class=\"flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors\"\n               [class.text-blue-600]=\"isCurrentRoute('/dashboard')\"\n               [class.bg-blue-50]=\"isCurrentRoute('/dashboard')\">\n              <i class=\"fas fa-th-large mr-2\"></i>\n              Quadros\n            </a>\n            \n            <a href=\"/usuarios\" \n               class=\"flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors\"\n               [class.text-blue-600]=\"isCurrentRoute('/usuarios')\"\n               [class.bg-blue-50]=\"isCurrentRoute('/usuarios')\">\n              <i class=\"fas fa-users mr-2\"></i>\n              Usuários\n            </a>\n            \n            <!-- Configurações Dropdown -->\n            <div class=\"relative\" (click)=\"toggleConfigMenu()\" (clickOutside)=\"configMenuOpen = false\">\n              <button class=\"flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors\"\n                      [class.text-blue-600]=\"configMenuOpen || isConfigRoute()\"\n                      [class.bg-blue-50]=\"configMenuOpen || isConfigRoute()\">\n                <i class=\"fas fa-cog mr-2\"></i>\n                Configurações\n                <i class=\"fas fa-chevron-down ml-1 text-xs\" [class.rotate-180]=\"configMenuOpen\"></i>\n              </button>\n              \n              @if (configMenuOpen) {\n                <div class=\"absolute right-0 mt-2 w-56 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5\">\n                  <div class=\"py-1\">\n                    <a href=\"/empresa/branding\" class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                      <i class=\"fas fa-building mr-3\"></i>\n                      Minha Empresa\n                    </a>\n                    <a href=\"/empresa/smtp\" class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                      <i class=\"fas fa-envelope mr-3\"></i>\n                      Configuração SMTP\n                    </a>\n                  </div>\n                </div>\n              }\n            </div>\n          </nav>\n\n          <!-- User Actions -->\n          <div class=\"flex items-center space-x-4\">\n            <div class=\"flex items-center space-x-2 text-sm text-gray-600\">\n              @if (currentCompany()) {\n                <i class=\"fas fa-building text-xs\"></i>\n                <span class=\"font-medium\">{{ currentCompany()?.name }}</span>\n              }\n            </div>\n            \n            <div class=\"relative\" (click)=\"toggleUserMenu()\" (clickOutside)=\"userMenuOpen = false\">\n              <button class=\"flex items-center p-2 text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors\">\n                @if (currentUser()?.photoURL) {\n                  <img [src]=\"currentUser()?.photoURL\" alt=\"Avatar\" class=\"w-8 h-8 rounded-full\">\n                } @else {\n                  <div class=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                    <i class=\"fas fa-user text-gray-600 text-sm\"></i>\n                  </div>\n                }\n              </button>\n              \n              @if (userMenuOpen) {\n                <div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5\">\n                  <div class=\"py-1\">\n                    <div class=\"px-4 py-2 border-b border-gray-100 max-w-[16rem]\">\n                      <p class=\"text-sm font-medium text-gray-900\">{{ currentUser()?.displayName || 'Usuário' }}</p>\n                      <p class=\"text-xs text-gray-500 truncate\" title=\"{{ currentUser()?.email }}\">{{ currentUser()?.email }}</p>\n                    </div>\n                    <button (click)=\"logout()\" class=\"w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-red-50\">\n                      <i class=\"fas fa-sign-out-alt mr-2\"></i>\n                      Sair\n                    </button>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Mobile Menu -->\n      <div class=\"md:hidden border-t border-gray-200\" *ngIf=\"mobileMenuOpen\">\n        <div class=\"px-2 pt-2 pb-3 space-y-1\">\n          <a href=\"/dashboard\" class=\"flex items-center px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md\">\n            <i class=\"fas fa-th-large mr-3\"></i>\n            Quadros\n          </a>\n          <a href=\"/usuarios\" class=\"flex items-center px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md\">\n            <i class=\"fas fa-users mr-3\"></i>\n            Usuários\n          </a>\n          <a href=\"/empresa/branding\" class=\"flex items-center px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md\">\n            <i class=\"fas fa-building mr-3\"></i>\n            Minha Empresa\n          </a>\n          <a href=\"/empresa/smtp\" class=\"flex items-center px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 rounded-md\">\n            <i class=\"fas fa-envelope mr-3\"></i>\n            SMTP\n          </a>\n        </div>\n      </div>\n    </header>\n  `,\n  styles: [`\n    .rotate-180 {\n      transform: rotate(180deg);\n    }\n    \n    @media (max-width: 768px) {\n      .mobile-menu-button {\n        display: block;\n      }\n    }\n  `]\n})\nexport class GlobalHeaderComponent {\n  private router = inject(Router);\n  private authService = inject(AuthService);\n  private subdomainService = inject(SubdomainService);\n\n  configMenuOpen = false;\n  userMenuOpen = false;\n  mobileMenuOpen = false;\n\n  currentUser = () => this.authService.getCurrentUser();\n  \n  currentCompany() {\n    return this.subdomainService.getCurrentCompany();\n  }\n\n  isCurrentRoute(route: string): boolean {\n    return this.router.url === route || this.router.url.startsWith(route + '/');\n  }\n\n  isConfigRoute(): boolean {\n    return this.router.url.includes('/empresa/');\n  }\n\n  toggleConfigMenu() {\n    this.configMenuOpen = !this.configMenuOpen;\n    this.userMenuOpen = false;\n  }\n\n  toggleUserMenu() {\n    this.userMenuOpen = !this.userMenuOpen;\n    this.configMenuOpen = false;\n  }\n\n  toggleMobileMenu() {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n  }\n\n  async logout() {\n    try {\n      const result = await this.authService.logout();\n      if (result.success) {\n        this.subdomainService.clearCurrentCompany();\n        window.location.href = '/login';\n      }\n    } catch (error) {\n      // Silently handle error\n    }\n  }\n}", "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-global-footer',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <footer class=\"bg-gray-50 border-t border-gray-200 mt-auto\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <div class=\"flex items-center justify-center\">\n          <div class=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <span>Powered by</span>\n            <div class=\"flex items-center space-x-1\">\n              <div class=\"w-5 h-5 bg-gradient-to-br from-blue-500 to-blue-600 rounded flex items-center justify-center\">\n                <i class=\"fas fa-tasks text-white text-xs\"></i>\n              </div>\n              <span class=\"font-semibold text-gray-700\">Task Board</span>\n            </div>\n            <span>•</span>\n            <span>Sistema de Gestão Kanban</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  `,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class GlobalFooterComponent {\n}", "import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from './toast.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-toast-container',\n  imports: [CommonModule],\n  template: `\n    <div class=\"fixed top-4 right-4 z-50 space-y-2 w-80\">\n      <div *ngFor=\"let m of (toast.messages$ | async)\" \n           class=\"shadow rounded px-4 py-3 text-white\"\n           [ngClass]=\"{\n             'bg-green-600': m.type === 'success',\n             'bg-red-600': m.type === 'error',\n             'bg-blue-600': m.type === 'info',\n             'bg-yellow-600': m.type === 'warning'\n           }\">\n        <div class=\"flex items-start justify-between\">\n          <div class=\"pr-3 text-sm\">{{ m.text }}</div>\n          <button class=\"text-white/80 hover:text-white ml-2\" (click)=\"toast.dismiss(m.id)\">✕</button>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class ToastContainerComponent {\n  toast = inject(ToastService);\n}\n\n\n", "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GlobalHeaderComponent } from '../global-header/global-header.component';\nimport { GlobalFooterComponent } from '../global-footer/global-footer.component';\nimport { ToastContainerComponent } from '../toast/toast-container.component';\n\n@Component({\n  selector: 'app-main-layout',\n  standalone: true,\n  imports: [CommonModule, GlobalHeaderComponent, GlobalFooterComponent, ToastContainerComponent],\n  template: `\n    <div class=\"min-h-screen flex flex-col\">\n      <!-- Global Header -->\n      <app-global-header></app-global-header>\n      \n      <!-- Main Content -->\n      <main class=\"flex-1\">\n        <ng-content></ng-content>\n      </main>\n      \n      <!-- Global Footer -->\n      <app-global-footer></app-global-footer>\n\n      <!-- Toast Container -->\n      <app-toast-container></app-toast-container>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: block;\n      min-height: 100vh;\n    }\n  `]\n})\nexport class MainLayoutComponent {\n}"],
  "mappings": "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",
  "names": ["_c0"]
}
