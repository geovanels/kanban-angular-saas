{
  "version": 3,
  "sources": ["src/app/components/api-links-config/api-links-config.component.ts"],
  "sourcesContent": ["import { Component, inject, signal, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CompanyService } from '../../services/company.service';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { ApiService } from '../../services/api.service';\nimport { Company } from '../../models/company.model';\nimport { ConfigHeaderComponent } from '../config-header/config-header.component';\nimport { MainLayoutComponent } from '../main-layout/main-layout.component';\n\ninterface CompanyLink {\n  name: string;\n  url: string;\n  description: string;\n  icon: string;\n  category: 'app' | 'api' | 'form' | 'webhook';\n  copyable: boolean;\n}\n\n@Component({\n  selector: 'app-api-links-config',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ConfigHeaderComponent, MainLayoutComponent],\n  template: `\n    <app-main-layout>\n      <app-config-header title=\"API e Integrações\">\n        <button \n          class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\n          (click)=\"saveApiConfig()\"\n          [disabled]=\"isSaving()\">\n          @if (isSaving()) {\n            <i class=\"fas fa-spinner fa-spin mr-1\"></i>\n            Salvando...\n          } @else {\n            <i class=\"fas fa-save mr-1\"></i>\n            Salvar Configurações\n          }\n        </button>\n      </app-config-header>\n\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <!-- Success/Error Messages -->\n        @if (successMessage()) {\n          <div class=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg text-green-800\">\n            <i class=\"fas fa-check-circle mr-2\"></i>\n            {{ successMessage() }}\n          </div>\n        }\n        \n        @if (errorMessage()) {\n          <div class=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-800\">\n            <i class=\"fas fa-exclamation-circle mr-2\"></i>\n            {{ errorMessage() }}\n          </div>\n        }\n\n        <!-- API Configuration -->\n        <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 mb-8\">\n          <div class=\"p-6 border-b border-gray-200\">\n            <h3 class=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <i class=\"fas fa-plug text-blue-500 mr-2\"></i>\n              Configuração da API\n            </h3>\n            <p class=\"text-sm text-gray-600 mt-1\">Configure e gerencie sua API para receber leads externos</p>\n          </div>\n          \n          <div class=\"p-6\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <!-- API Status and Endpoint -->\n              <div class=\"space-y-4\">\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Status da API</label>\n                  <div class=\"flex items-center space-x-3\">\n                    <span [class]=\"apiEnabled() ? 'inline-flex px-3 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800' : 'inline-flex px-3 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800'\">\n                      {{ apiEnabled() ? 'Ativa' : 'Inativa' }}\n                    </span>\n                    <label class=\"relative inline-flex items-center cursor-pointer\">\n                      <input type=\"checkbox\" \n                             [checked]=\"apiEnabled()\" \n                             (change)=\"toggleApiStatus($any($event.target).checked)\"\n                             class=\"sr-only peer\">\n                      <div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n                </div>\n\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Endpoint da API</label>\n                  <div class=\"flex space-x-2\">\n                    <input\n                      type=\"text\"\n                      class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-600\"\n                      [value]=\"getLeadIntakeUrl()\"\n                      readonly>\n                    <button\n                      class=\"bg-gray-500 hover:bg-gray-600 text-white px-3 py-2 rounded-md text-sm transition-colors\"\n                      (click)=\"copyToClipboard(getLeadIntakeUrl())\">\n                      <i class=\"fas fa-copy\"></i>\n                    </button>\n                  </div>\n                  <p class=\"text-xs text-gray-500 mt-1\" *ngIf=\"getCurrentBoardId()\">URL para envio de leads neste quadro ({{ getCurrentBoardId() }})</p>\n                  <p class=\"text-xs text-gray-500 mt-1\" *ngIf=\"!getCurrentBoardId()\">URL base para envio de leads. Adicione /{{ '{' }}boardId{{ '}' }} ao final para especificar o quadro</p>\n                </div>\n              </div>\n\n              <!-- API Token -->\n              <div class=\"space-y-4\">\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Token de API</label>\n                  <div class=\"flex space-x-2\">\n                    <input\n                      type=\"text\"\n                      class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md font-mono text-sm\"\n                      [value]=\"showApiToken() ? apiToken() : '••••••••••••••••••••••••••••••••'\"\n                      readonly>\n                    <button\n                      class=\"bg-gray-500 hover:bg-gray-600 text-white px-3 py-2 rounded-md text-sm transition-colors\"\n                      (click)=\"toggleTokenVisibility()\">\n                      <i [class]=\"showApiToken() ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\n                    </button>\n                    <button\n                      class=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-md text-sm transition-colors\"\n                      (click)=\"copyToClipboard(apiToken())\">\n                      <i class=\"fas fa-copy\"></i>\n                    </button>\n                  </div>\n                  <p class=\"text-xs text-gray-500 mt-1\">Token para autenticação nas requisições API</p>\n                </div>\n\n                <div>\n                  <button\n                    class=\"w-full bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n                    (click)=\"regenerateApiToken()\">\n                    <i class=\"fas fa-sync-alt mr-1\"></i>\n                    Regenerar Token\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Webhook Configuration -->\n            <div class=\"mt-6 pt-6 border-t border-gray-200\">\n              <h4 class=\"text-md font-medium text-gray-900 mb-4\">Webhook (Opcional)</h4>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">URL do Webhook</label>\n                <input\n                  type=\"url\"\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  [(ngModel)]=\"webhookUrl\"\n                  (input)=\"webhookUrl.set($any($event.target).value)\"\n                  placeholder=\"https://exemplo.com/webhook\">\n                <p class=\"text-xs text-gray-500 mt-1\">URL que receberá notificações quando um novo lead for criado via API</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </app-main-layout>\n  `,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class ApiLinksConfigComponent implements OnInit {\n  private companyService = inject(CompanyService);\n  private subdomainService = inject(SubdomainService);\n  private apiService = inject(ApiService);\n\n  currentCompany = signal<Company | null>(null);\n  apiEnabled = signal(false);\n  apiToken = signal<string>('');\n  webhookUrl = signal<string>('');\n  showApiToken = signal(false);\n  isSaving = signal(false);\n  successMessage = signal<string | null>(null);\n  errorMessage = signal<string | null>(null);\n\n  ngOnInit() {\n    this.loadApiConfiguration();\n    this.generateCompanyLinks();\n  }\n\n  loadApiConfiguration() {\n    const company = this.subdomainService.getCurrentCompany();\n    if (company) {\n      this.currentCompany.set(company);\n      this.apiEnabled.set(company.apiConfig?.enabled || false);\n      this.apiToken.set(company.apiConfig?.token || this.generateApiToken());\n      this.webhookUrl.set(company.apiConfig?.webhookUrl || '');\n    }\n  }\n\n  async saveApiConfig() {\n    const company = this.currentCompany();\n    if (!company) {\n      this.showError('Empresa não encontrada');\n      return;\n    }\n\n    this.isSaving.set(true);\n    this.clearMessages();\n\n    try {\n      const updatedCompany: Partial<Company> = {\n        apiConfig: {\n          enabled: this.apiEnabled(),\n          token: this.apiToken(),\n          endpoint: this.getLeadIntakeUrl(),\n          webhookUrl: this.webhookUrl()\n        }\n      };\n\n      await this.companyService.updateCompany(company.id!, updatedCompany);\n      \n      // Update current company\n      const refreshedCompany = { ...company, ...updatedCompany };\n      this.subdomainService.setCurrentCompany(refreshedCompany);\n      this.currentCompany.set(refreshedCompany);\n      \n      this.showSuccess('Configurações de API salvas com sucesso!');\n    } catch (error) {\n      console.error('Erro ao salvar configurações de API:', error);\n      this.showError('Erro ao salvar configurações. Tente novamente.');\n    } finally {\n      this.isSaving.set(false);\n    }\n  }\n\n  toggleApiStatus(enabled: boolean) {\n    this.apiEnabled.set(enabled);\n  }\n\n  toggleTokenVisibility() {\n    this.showApiToken.set(!this.showApiToken());\n  }\n\n  regenerateApiToken() {\n    if (confirm('Tem certeza que deseja regenerar o token da API? Isso invalidará o token atual.')) {\n      const newToken = this.generateApiToken();\n      this.apiToken.set(newToken);\n      this.showSuccess('Novo token gerado! Lembre-se de atualizar suas integrações.');\n    }\n  }\n\n  getLeadIntakeUrl(): string {\n    try {\n      const boardId = this.getCurrentBoardId();\n      // Usar ApiService que já tem toda a lógica de detecção de porta\n      const companyId = this.currentCompany()?.id || '{COMPANY_ID}';\n      return this.apiService.getLeadIntakeUrl(companyId, boardId);\n    } catch (error) {\n      return 'Erro: empresa não configurada';\n    }\n  }\n\n  getCurrentBoardId(): string | undefined {\n    // 1. Buscar o boardId da URL atual\n    const url = window.location.pathname;\n    \n    // Padrão: /kanban/BOARD_ID ou /board/BOARD_ID\n    const boardMatch = url.match(/\\/(?:kanban|board)\\/([^\\/\\?]+)/);\n    if (boardMatch) {\n      return boardMatch[1];\n    }\n    \n    // 2. Buscar nos parâmetros da URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const boardIdParam = urlParams.get('boardId');\n    if (boardIdParam) {\n      return boardIdParam;\n    }\n    \n    // 3. Buscar no localStorage (último quadro acessado)\n    const lastBoardId = localStorage.getItem('lastBoardId');\n    if (lastBoardId) {\n      return lastBoardId;\n    }\n    \n    // 4. Se não encontrar, retornar undefined (usará configuração padrão)\n    return undefined;\n  }\n\n  companyLinks = signal<CompanyLink[]>([]);\n\n  generateCompanyLinks() {\n    // Links section removed - external form link should now be in leads section\n  }\n\n  getLinkIconClass(category: string): string {\n    const baseClass = 'w-10 h-10 rounded-lg flex items-center justify-center text-white text-sm';\n    switch (category) {\n      case 'app': return baseClass + ' bg-blue-500';\n      case 'form': return baseClass + ' bg-green-500';\n      case 'api': return baseClass + ' bg-purple-500';\n      case 'webhook': return baseClass + ' bg-orange-500';\n      default: return baseClass + ' bg-gray-500';\n    }\n  }\n\n  getStatusText(): string {\n    const company = this.currentCompany();\n    return company?.status === 'active' ? 'Ativo' : 'Inativo';\n  }\n\n  openLink(url: string) {\n    if (url && url !== 'Não configurado') {\n      window.open(url, '_blank');\n    }\n  }\n\n  copyToClipboard(text: string) {\n    if (text && text !== 'Não configurado') {\n      navigator.clipboard.writeText(text).then(() => {\n        this.showSuccess('Copiado para a área de transferência!');\n      }).catch(() => {\n        this.showError('Erro ao copiar para a área de transferência.');\n      });\n    }\n  }\n\n  private generateApiToken(): string {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < 32; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return result;\n  }\n\n  private showSuccess(message: string) {\n    this.successMessage.set(message);\n    this.errorMessage.set(null);\n    setTimeout(() => this.successMessage.set(null), 5000);\n  }\n\n  private showError(message: string) {\n    this.errorMessage.set(message);\n    this.successMessage.set(null);\n    setTimeout(() => this.errorMessage.set(null), 5000);\n  }\n\n  private clearMessages() {\n    this.successMessage.set(null);\n    this.errorMessage.set(null);\n  }\n}"],
  "mappings": "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",
  "names": []
}
