{
  "version": 3,
  "sources": ["src/app/components/create-board-modal/create-board-modal.component.ts", "src/app/components/create-board-modal/create-board-modal.component.html", "src/app/components/company-breadcrumb/company-breadcrumb.component.ts", "src/app/components/dashboard/dashboard.component.ts", "src/app/components/dashboard/dashboard.component.html"],
  "sourcesContent": ["import { Component, inject, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService } from '../../services/firestore.service';\nimport { SubdomainService } from '../../services/subdomain.service';\n\n@Component({\n  selector: 'app-create-board-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './create-board-modal.component.html',\n  styleUrls: ['./create-board-modal.component.scss']\n})\nexport class CreateBoardModalComponent {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private subdomainService = inject(SubdomainService);\n\n  @Output() boardCreated = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n\n  boardName = '';\n  boardDescription = '';\n  isLoading = false;\n  errorMessage = '';\n  isVisible = false;\n\n  show() {\n    this.isVisible = true;\n    this.resetForm();\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.closeModal.emit();\n  }\n\n  resetForm() {\n    this.boardName = '';\n    this.boardDescription = '';\n    this.errorMessage = '';\n    this.isLoading = false;\n  }\n\n  async createBoard() {\n    if (!this.boardName.trim()) {\n      this.errorMessage = 'Nome do quadro é obrigatório';\n      return;\n    }\n\n    const currentUser = this.authService.getCurrentUser();\n    if (!currentUser) {\n      this.errorMessage = 'Usuário não autenticado';\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    try {\n      // Criar o quadro\n      const boardData = {\n        name: this.boardName.trim(),\n        description: this.boardDescription.trim(),\n        companyId: '', // Será preenchido pelo FirestoreService\n        createdAt: null // será preenchido pelo serverTimestamp\n      };\n\n      const boardRef = await this.firestoreService.createBoard(currentUser.uid, boardData);\n      \n      // Atualizar com email do usuário após criação\n      await this.firestoreService.updateBoard(currentUser.uid, boardRef.id, {\n        ownerEmail: currentUser.email || ''\n      });\n\n      // Emitir evento de sucesso\n      this.boardCreated.emit();\n      this.hide();\n      \n    } catch (error: any) {\n      console.error('Erro ao criar quadro:', error);\n      this.errorMessage = 'Erro ao criar quadro. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    if (event.target === event.currentTarget) {\n      this.hide();\n    }\n  }\n\n  getPrimaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.primaryColor || company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n}", "<div *ngIf=\"isVisible\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md p-6\">\n    <div class=\"flex justify-between items-center mb-6\">\n      <h2 class=\"text-2xl font-bold text-gray-900\">Novo Quadro Kanban</h2>\n      <button \n        (click)=\"hide()\" \n        class=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n        [disabled]=\"isLoading\">\n        &times;\n      </button>\n    </div>\n\n    <form (ngSubmit)=\"createBoard()\" class=\"space-y-4\">\n      <div>\n        <label for=\"boardName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n          Nome do Quadro *\n        </label>\n        <input \n          type=\"text\" \n          id=\"boardName\"\n          [(ngModel)]=\"boardName\"\n          name=\"boardName\"\n          class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n          placeholder=\"Ex: Vendas 2024\"\n          maxlength=\"100\"\n          required\n          [disabled]=\"isLoading\">\n      </div>\n\n      <div>\n        <label for=\"boardDescription\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n          Descrição (Opcional)\n        </label>\n        <textarea \n          id=\"boardDescription\"\n          [(ngModel)]=\"boardDescription\"\n          name=\"boardDescription\"\n          rows=\"3\"\n          class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none\"\n          placeholder=\"Descreva o propósito deste quadro...\"\n          maxlength=\"500\"\n          [disabled]=\"isLoading\"></textarea>\n      </div>\n\n      <div *ngIf=\"errorMessage\" class=\"text-red-500 text-sm\">\n        {{ errorMessage }}\n      </div>\n\n      <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n        <div class=\"flex items-start\">\n          <i class=\"fas fa-info-circle text-blue-500 mt-0.5 mr-2\"></i>\n          <div class=\"text-sm text-blue-700\">\n            <strong>Após criar o quadro:</strong>\n            <ul class=\"mt-1 ml-2 list-disc\">\n              <li>Configure as fases do seu processo</li>\n              <li>Defina os campos do formulário conforme sua necessidade</li>\n              <li>Personalize para qualquer tipo de processo (vendas, compras, viagens, etc.)</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end gap-3 pt-4\">\n        <button \n          type=\"button\" \n          (click)=\"hide()\"\n          class=\"px-4 py-2 text-gray-700 bg-gray-200 hover:bg-gray-300 rounded-lg font-medium transition-colors\"\n          [disabled]=\"isLoading\">\n          Cancelar\n        </button>\n        \n        <button \n          type=\"submit\" \n          [disabled]=\"isLoading || !boardName.trim()\"\n          class=\"px-6 py-2 text-white rounded-lg font-medium transition-colors flex items-center\"\n          [style.background-color]=\"getPrimaryColor()\"\n          [style.opacity]=\"isLoading || !boardName.trim() ? '0.6' : '1'\">\n          <div *ngIf=\"isLoading\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n          {{ isLoading ? 'Criando...' : 'Criar Quadro' }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>", "import { Component, Input, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SubdomainService } from '../../services/subdomain.service';\n\n@Component({\n  selector: 'app-company-breadcrumb',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"bg-gray-50 border-b border-gray-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <div class=\"flex items-center space-x-4\">\n          <!-- Company Logo -->\n          <div class=\"flex items-center space-x-3\">\n            <!-- Back Button -->\n            <button \n              (click)=\"goBack()\"\n              class=\"text-gray-500 hover:text-gray-700 p-1 rounded hover:bg-gray-100 transition-colors\">\n              <i class=\"fas fa-arrow-left\"></i>\n            </button>\n            \n            @if (hasCustomLogo()) {\n              <img [src]=\"companyLogo\" \n                   [alt]=\"'Logo ' + companyName\" \n                   class=\"h-10 w-auto rounded\">\n            } @else {\n              <div class=\"h-10 w-10 rounded-lg flex items-center justify-center text-white font-bold\"\n                   [style.background-color]=\"primaryColor\">\n                {{ getCompanyInitials() }}\n              </div>\n            }\n            \n            <div>\n              <h2 class=\"text-lg font-semibold text-gray-900\">\n                {{ title }}\n              </h2>\n              @if (subtitle) {\n                <p class=\"text-sm text-gray-600\">{{ subtitle }}</p>\n              }\n            </div>\n          </div>\n          \n          <!-- Actions Slot -->\n          <div class=\"flex-1 flex justify-end\">\n            <ng-content></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class CompanyBreadcrumbComponent {\n  @Input() title: string = 'Meus quadros Kanban';\n  @Input() subtitle?: string;\n  \n  private subdomainService = inject(SubdomainService);\n  private router = inject(Router);\n  \n  get companyName(): string {\n    return this.subdomainService.getCurrentCompany()?.name || 'Task Board';\n  }\n\n  get companyLogo(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Se tem logo customizado, usar ele\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return company.brandingConfig.logo;\n    }\n    \n    // Se é a Gobuyer, usar logo padrão da Gobuyer\n    if (company?.subdomain === 'gobuyer') {\n      return 'https://apps.gobuyer.com.br/sso/assets/images/logos/logo-gobuyer.png';\n    }\n    \n    return '';\n  }\n\n  hasCustomLogo(): boolean {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Se tem logo customizado\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return true;\n    }\n    \n    // Se é a Gobuyer, sempre tem logo\n    if (company?.subdomain === 'gobuyer') {\n      return true;\n    }\n    \n    return false;\n  }\n\n  get primaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n\n  getCompanyInitials(): string {\n    const name = this.companyName;\n    if (!name || name === 'Task Board') return 'TB';\n    \n    const words = name.split(' ').filter(word => word.length > 0);\n    if (words.length === 1) {\n      return words[0].charAt(0).toUpperCase();\n    } else if (words.length >= 2) {\n      return words[0].charAt(0).toUpperCase() + words[1].charAt(0).toUpperCase();\n    }\n    \n    return 'TB';\n  }\n\n  goBack() {\n    // Para páginas de configuração, voltar para dashboard\n    const currentUrl = this.router.url;\n    if (currentUrl.includes('/empresa/') || currentUrl.includes('/usuarios')) {\n      this.router.navigate(['/dashboard']);\n    } else {\n      // Para outras páginas, usar navegação padrão do browser\n      window.history.back();\n    }\n  }\n}", "import { Component, inject, OnInit, OnDestroy, ViewChild, HostListener, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService, Board } from '../../services/firestore.service';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { CreateBoardModalComponent } from '../create-board-modal/create-board-modal.component';\nimport { MainLayoutComponent } from '../main-layout/main-layout.component';\nimport { CompanyBreadcrumbComponent } from '../company-breadcrumb/company-breadcrumb.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, CreateBoardModalComponent, MainLayoutComponent, CompanyBreadcrumbComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, OnDestroy, AfterViewInit {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private subdomainService = inject(SubdomainService);\n  private router = inject(Router);\n\n  @ViewChild(CreateBoardModalComponent) createBoardModal!: CreateBoardModalComponent;\n\n  boards: Board[] = [];\n  isLoading = false;\n  currentUser: any = null;\n  showConfigMenu = false;\n  showCreateModal = false;\n  activeBoardMenu: string | null = null;\n  private subscription?: Subscription;\n  \n  // Estatísticas dos boards\n  boardStats: { [boardId: string]: { columnCount: number; leadCount: number } } = {};\n\n  async ngOnInit() {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (this.currentUser) {\n      await this.loadBoards();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit() {\n    // ViewChild will be available after view initialization\n  }\n\n  async loadBoards() {\n    if (!this.currentUser) {\n      return;\n    }\n\n    this.isLoading = true;\n    try {\n      this.boards = await this.firestoreService.getBoards(this.currentUser.uid);\n      \n      // Carregar estatísticas para cada board\n      await this.loadBoardStatistics();\n    } catch (error) {\n      // Handle error silently or show user-friendly message\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  \n  private async loadBoardStatistics() {\n    for (const board of this.boards) {\n      if (board.id) {\n        try {\n          // Carregar colunas do board\n          const columns = await this.firestoreService.getColumns(this.currentUser.uid, board.id);\n          \n          // Carregar leads do board\n          const leads = await this.firestoreService.getLeads(this.currentUser.uid, board.id);\n          \n          // Armazenar estatísticas\n          this.boardStats[board.id] = {\n            columnCount: columns.length,\n            leadCount: leads.length\n          };\n        } catch (error) {\n          // Em caso de erro, usar valores padrão\n          this.boardStats[board.id!] = {\n            columnCount: 0,\n            leadCount: 0\n          };\n        }\n      }\n    }\n  }\n\n  async logout() {\n    const result = await this.authService.logout();\n    if (result.success) {\n      window.location.href = '/login';\n    }\n  }\n\n  openBoard(boardId: string) {\n    // Encontrar o board para passar o ownerId também\n    const board = this.boards.find(b => b.id === boardId);\n    if (board && board.owner) {\n      this.router.navigate(['/kanban', boardId], { \n        queryParams: { ownerId: board.owner }\n      });\n    } else {\n      // Fallback: tentar com o usuário atual\n      this.router.navigate(['/kanban', boardId], { \n        queryParams: { ownerId: this.currentUser.uid }\n      });\n    }\n  }\n\n  formatDate(timestamp: any): string {\n    if (!timestamp) return '';\n    if (timestamp.seconds) {\n      return new Date(timestamp.seconds * 1000).toLocaleDateString('pt-BR');\n    }\n    return new Date(timestamp).toLocaleDateString('pt-BR');\n  }\n\n  showCreateBoardModal() {\n    this.showCreateModal = true;\n    // Wait for Angular to render the modal, then show it\n    setTimeout(() => {\n      if (this.createBoardModal) {\n        this.createBoardModal.show();\n      }\n    }, 0);\n  }\n\n  onBoardCreated(event?: any) {\n    // Recarregar a lista de quadros\n    this.loadBoards();\n    this.showCreateModal = false;\n  }\n\n  toggleBoardMenu(boardId: string) {\n    this.activeBoardMenu = this.activeBoardMenu === boardId ? null : boardId;\n  }\n\n  editBoard(board: Board) {\n    // TODO: Implementar edição de quadro\n    this.activeBoardMenu = null;\n  }\n\n  duplicateBoard(board: Board) {\n    // TODO: Implementar duplicação de quadro\n    this.activeBoardMenu = null;\n  }\n\n  async deleteBoard(boardId: string) {\n    const board = this.boards.find(b => b.id === boardId);\n    const boardName = board?.name || 'Quadro';\n    \n    const confirmMessage = `⚠️ ATENÇÃO: Esta ação não pode ser desfeita!\\n\\n` +\n      `Deseja excluir o quadro \"${boardName}\"?\\n\\n` +\n      `Isso irá remover PERMANENTEMENTE:\\n` +\n      `• Todas as colunas/fases\\n` +\n      `• Todos os leads/registros\\n` +\n      `• Todos os templates de email\\n` +\n      `• Todas as automações\\n` +\n      `• Todo o histórico e configurações\\n\\n` +\n      `Digite \"EXCLUIR\" para confirmar:`;\n    \n    const confirmation = prompt(confirmMessage);\n    \n    if (confirmation === 'EXCLUIR') {\n      try {\n        await this.firestoreService.deleteBoard(this.currentUser.uid, boardId);\n        await this.loadBoards();\n        \n        // Mostrar feedback visual\n        alert(`✅ Quadro \"${boardName}\" foi excluído com sucesso!`);\n      } catch (error) {\n        alert('❌ Erro ao excluir o quadro. Tente novamente.');\n      }\n    }\n    \n    this.activeBoardMenu = null;\n  }\n\n  getBoardColumnCount(boardId: string): number {\n    return this.boardStats[boardId]?.columnCount || 0;\n  }\n\n  getBoardTaskCount(boardId: string): number {\n    return this.boardStats[boardId]?.leadCount || 0;\n  }\n\n  toggleConfigMenu() {\n    this.showConfigMenu = !this.showConfigMenu;\n  }\n\n  // Método adicional para fechar menu ao clicar fora\n  closeConfigMenu() {\n    this.showConfigMenu = false;\n  }\n\n  // Fechar menu do board ao clicar fora\n  @HostListener('document:click', ['$event'])\n  closeBoardMenu(event: Event) {\n    const target = event.target as HTMLElement;\n    if (!target.closest('.board-menu-container')) {\n      this.activeBoardMenu = null;\n    }\n  }\n\n  \n}", "<app-main-layout>\n  <!-- Company Breadcrumb -->\n  <app-company-breadcrumb title=\"Meus quadros Kanban\">\n    <div class=\"flex space-x-2\">\n      <button \n        (click)=\"showCreateBoardModal()\"\n        class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center\">\n        <i class=\"fas fa-plus mr-2\"></i>\n        Novo Quadro\n      </button>\n    </div>\n  </app-company-breadcrumb>\n\n  <!-- Main Content -->\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    @if (isLoading) {\n      <!-- Loading State -->\n      <div class=\"flex items-center justify-center py-12\">\n        <div class=\"text-center\">\n          <i class=\"fas fa-spinner fa-spin text-4xl text-gray-400 mb-4\"></i>\n          <p class=\"text-gray-600\">Carregando seus quadros...</p>\n        </div>\n      </div>\n    } @else if (boards.length === 0) {\n      <!-- Empty State -->\n      <div class=\"text-center py-12\">\n        <div class=\"w-24 h-24 mx-auto bg-gray-100 rounded-full flex items-center justify-center mb-4\">\n          <i class=\"fas fa-th-large text-3xl text-gray-400\"></i>\n        </div>\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">Nenhum quadro encontrado</h3>\n        <p class=\"text-gray-600 mb-6\">Crie seu primeiro quadro Kanban para começar a organizar suas tarefas.</p>\n        <button \n          (click)=\"showCreateBoardModal()\"\n          class=\"bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-colors\">\n          <i class=\"fas fa-plus mr-2\"></i>\n          Criar Primeiro Quadro\n        </button>\n      </div>\n    } @else {\n      <!-- Boards Grid -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        @for (board of boards; track board.id) {\n          <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-shadow cursor-pointer group\"\n               (click)=\"openBoard(board.id!)\">\n            <!-- Board Header -->\n            <div class=\"p-6 border-b border-gray-100\">\n              <div class=\"flex items-start justify-between\">\n                <div class=\"flex-1\">\n                  <h3 class=\"font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                    {{ board.name }}\n                  </h3>\n                  @if (board.description) {\n                    <p class=\"text-sm text-gray-600 mt-1 line-clamp-2\">\n                      {{ board.description }}\n                    </p>\n                  }\n                </div>\n                \n                <!-- Board Actions -->\n                <div class=\"relative ml-4 board-menu-container\">\n                  <button \n                    (click)=\"$event.stopPropagation(); toggleBoardMenu(board.id!)\"\n                    class=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-md transition-all\"\n                    style=\"display: flex; align-items: center; justify-content: center; min-width: 32px; min-height: 32px;\">\n                    <i class=\"fas fa-ellipsis-v\"></i>\n                  </button>\n                  \n                  @if (activeBoardMenu === board.id) {\n                    <div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg border border-gray-200 z-50\" \n                         style=\"box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\">\n                      <div class=\"py-1\">\n                        <button \n                          (click)=\"$event.stopPropagation(); editBoard(board)\"\n                          class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                          <i class=\"fas fa-edit mr-2\"></i>\n                          Editar\n                        </button>\n                        <button \n                          (click)=\"$event.stopPropagation(); duplicateBoard(board)\"\n                          class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                          <i class=\"fas fa-copy mr-2\"></i>\n                          Duplicar\n                        </button>\n                        <hr class=\"my-1\">\n                        <button \n                          (click)=\"$event.stopPropagation(); deleteBoard(board.id!)\"\n                          class=\"w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-red-50\">\n                          <i class=\"fas fa-trash mr-2\"></i>\n                          Excluir\n                        </button>\n                      </div>\n                    </div>\n                  }\n                </div>\n              </div>\n            </div>\n\n            <!-- Board Stats -->\n            <div class=\"p-4 bg-gray-50\">\n              <div class=\"flex items-center justify-between text-sm\">\n                <div class=\"flex items-center space-x-4\">\n                  <span class=\"text-gray-600\">\n                    <i class=\"fas fa-columns mr-1\"></i>\n                    {{ getBoardColumnCount(board.id!) }} colunas\n                  </span>\n                  <span class=\"text-gray-600\">\n                    <i class=\"fas fa-tasks mr-1\"></i>\n                    {{ getBoardTaskCount(board.id!) }} leads\n                  </span>\n                </div>\n                <div class=\"text-xs text-gray-500\">\n                  {{ formatDate(board.createdAt) }}\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    }\n  </div>\n\n  <!-- Create Board Modal -->\n  @if (showCreateModal) {\n    <app-create-board-modal \n      #createBoardModal\n      (boardCreated)=\"onBoardCreated($event)\"\n      (closeModal)=\"showCreateModal = false\">\n    </app-create-board-modal>\n  }\n</app-main-layout>"],
  "mappings": "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",
  "names": []
}
