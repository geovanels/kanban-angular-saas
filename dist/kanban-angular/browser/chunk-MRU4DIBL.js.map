{"version":3,"sources":["src/app/services/automation.service.ts","node_modules/@angular/cdk/fesm2022/shadow-dom.mjs","node_modules/@angular/cdk/fesm2022/fake-event-detection.mjs","node_modules/@angular/cdk/fesm2022/element.mjs","node_modules/@angular/cdk/fesm2022/style-loader.mjs","node_modules/@angular/cdk/fesm2022/platform2.mjs","node_modules/@angular/cdk/fesm2022/directionality.mjs","node_modules/@angular/cdk/fesm2022/scrolling2.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/cdk/fesm2022/data-source.mjs","node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/id-generator.mjs","node_modules/@angular/cdk/fesm2022/array.mjs","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","src/app/services/storage.service.ts","src/app/services/mask.service.ts","src/app/components/lead-modal/lead-modal.component.ts","src/app/components/lead-modal/lead-modal.component.html","src/app/components/column-modal/column-modal.component.ts","src/app/components/column-modal/column-modal.component.html","src/app/components/visual-form-builder/visual-form-builder.ts","src/app/components/visual-form-builder/visual-form-builder.html","src/app/components/phase-form-modal/phase-form-modal.component.ts","src/app/components/lead-detail-modal/lead-detail-modal.component.ts","src/app/components/lead-detail-modal/lead-detail-modal.component.html","node_modules/@tinymce/tinymce-angular/fesm2022/tinymce-tinymce-angular.mjs","src/app/components/template-modal/template-modal.component.ts","src/app/components/template-modal/template-modal.component.html","src/app/components/automation-modal/automation-modal.ts","src/app/components/automation-modal/automation-modal.html","src/app/components/automation-history-modal/automation-history-modal.ts","src/app/components/automation-history-modal/automation-history-modal.html","src/app/components/kanban/kanban.component.ts","src/app/components/kanban/kanban.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { FirestoreService, Lead, Column } from './firestore.service';\nimport { SmtpService } from './smtp.service';\nimport { SubdomainService } from './subdomain.service';\nimport { CompanyService } from './company.service';\nimport { Observable, from } from 'rxjs';\n\nexport interface AutomationTrigger {\n  type: 'new-lead-created' | 'card-enters-phase' | 'card-in-phase-for-time' | 'form-not-answered' | 'sla-overdue';\n  phaseId?: string;\n  days?: number;\n}\n\nexport interface AutomationAction {\n  type: 'send-email' | 'move-to-phase' | 'assign-user' | 'add-note';\n  templateId?: string;\n  phaseId?: string;\n  userId?: string;\n  note?: string;\n}\n\nexport interface Automation {\n  id: string;\n  name: string;\n  active: boolean;\n  triggerType: string;\n  triggerPhase?: string;\n  triggerDays?: number;\n  actions: AutomationAction[];\n  boardId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutomationService {\n  private firestoreService = inject(FirestoreService);\n  private smtpService = inject(SmtpService);\n  private subdomainService = inject(SubdomainService);\n  private companyService = inject(CompanyService);\n  \n  // Lock para evitar execu√ß√£o simult√¢nea de automa√ß√µes de tempo\n  private timeAutomationLocks = new Map<string, boolean>();\n\n  // Processar automa√ß√µes quando um novo lead √© criado\n  async processNewLeadAutomations(lead: Lead, boardId: string, ownerId: string): Promise<void> {\n    try {\n      // Buscar automa√ß√µes ativas do quadro\n      const automations = await this.firestoreService.getAutomations(ownerId, boardId);\n      const newLeadAutomations = (automations as Automation[]).filter(automation => {\n        if (!automation || !automation.active) return false;\n        // Aceitar dois formatos de trigger: tipo plano ou objeto\n        const type = (automation as any).triggerType || (automation as any).trigger?.type;\n        // Se automa√ß√£o exigir fase (alguns setups), s√≥ dispare se lead entrou na fase inicial\n        const triggerPhase = (automation as any).triggerPhase || (automation as any).trigger?.phase;\n        if (triggerPhase) {\n          // Se h√° triggerPhase, s√≥ execute se o lead estiver nessa fase E for a fase inicial\n          return type === 'new-lead-created' && lead.columnId === triggerPhase;\n        }\n        return type === 'new-lead-created';\n      });\n\n      // Executar cada automa√ß√£o\n      for (const automation of newLeadAutomations) {\n        await this.executeAutomation(automation, lead, boardId, ownerId);\n      }\n    } catch (error) {\n      console.error('Erro ao processar automa√ß√µes de novo lead:', error);\n    }\n  }\n\n  // Processar automa√ß√µes quando um lead muda de fase\n  async processPhaseChangeAutomations(lead: Lead, newColumnId: string, oldColumnId: string, boardId: string, ownerId: string): Promise<void> {\n    try {\n      // Buscar automa√ß√µes ativas do quadro\n      const automations = await this.firestoreService.getAutomations(ownerId, boardId);\n\n      const phaseChangeAutomations = (automations as Automation[]).filter(automation => {\n        const isActive = automation.active;\n        const isCardEntersPhase = automation.triggerType === 'card-enters-phase';\n        const matchesPhase = automation.triggerPhase === newColumnId;\n        return isActive && isCardEntersPhase && matchesPhase;\n      });\n\n      // Executar cada automa√ß√£o\n      for (const automation of phaseChangeAutomations) {\n        await this.executeAutomation(automation, lead, boardId, ownerId);\n      }\n    } catch (error) {\n      console.error('Erro ao processar automa√ß√µes de mudan√ßa de fase:', error);\n    }\n  }\n\n  // Executar uma automa√ß√£o espec√≠fica\n  private async executeAutomation(automation: Automation, lead: Lead, boardId: string, ownerId: string): Promise<void> {\n    try {\n      // Executar cada a√ß√£o da automa√ß√£o\n      for (const action of automation.actions) {\n        await this.executeAction(action, lead, boardId, ownerId, automation);\n      }\n\n      // Registrar no hist√≥rico\n      await this.addAutomationHistory(automation, lead, boardId, ownerId, 'success');\n    } catch (error) {\n      console.error(`Erro ao executar automa√ß√£o ${automation.name}:`, error);\n      \n      // Registrar erro no hist√≥rico\n      await this.addAutomationHistory(automation, lead, boardId, ownerId, 'error', (error as Error).message);\n    }\n  }\n\n  // Executar uma a√ß√£o espec√≠fica\n  private async executeAction(action: AutomationAction, lead: Lead, boardId: string, ownerId: string, automation: Automation): Promise<void> {\n    switch (action.type) {\n      case 'send-email':\n        await this.executeSendEmailAction(action, lead, boardId, ownerId);\n        break;\n      \n      case 'move-to-phase':\n        await this.executeMoveToPhaseAction(action, lead, boardId, ownerId);\n        break;\n      \n      case 'assign-user':\n        await this.executeAssignUserAction(action, lead, boardId, ownerId);\n        break;\n      \n      case 'add-note':\n        await this.executeAddNoteAction(action, lead, boardId, ownerId);\n        break;\n      \n      default:\n        console.warn(`Tipo de a√ß√£o n√£o reconhecido: ${action.type}`);\n    }\n  }\n\n  // Executar a√ß√£o de envio de email\n  private async executeSendEmailAction(action: AutomationAction, lead: Lead, boardId: string, ownerId: string, automation?: Automation): Promise<void> {\n    if (!action.templateId) {\n      throw new Error('Template de email n√£o especificado');\n    }\n\n    // Chave √∫nica para lock de envio de email\n    const emailLockKey = `email_${ownerId}_${boardId}_${lead.id}_${action.templateId}_${automation?.id || 'manual'}`;\n    \n    // Verificar se j√° est√° sendo enviado o mesmo email\n    if (this.timeAutomationLocks.get(emailLockKey)) {\n      console.log('üîí Email j√° est√° sendo enviado (lock ativo), pulando:', {\n        leadId: lead.id,\n        templateId: action.templateId,\n        automationId: automation?.id,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Definir lock tempor√°rio\n    this.timeAutomationLocks.set(emailLockKey, true);\n\n    try {\n      // Buscar template\n      const templates = await this.firestoreService.getEmailTemplates(ownerId, boardId);\n      const template = (templates as any[]).find(t => t.id === action.templateId);\n      if (!template) throw new Error(`Template de email n√£o encontrado: ${action.templateId}`);\n\n      // Destinat√°rios: preferir os definidos no template (podem conter vari√°veis),\n      // sen√£o cair para a√ß√£o (toEmail) e, por fim, e-mail do lead\n      const recipientFromTemplateRaw = (template as any).recipients || '';\n      const recipientFromTemplate = this.processEmailTemplate(recipientFromTemplateRaw, lead) || '';\n      const parseEmails = (input: string): string[] => {\n        if (!input) return [];\n        return input\n          .split(/[;,]/)\n          .map(s => s.trim())\n          .filter(s => /.+@.+\\..+/.test(s));\n      };\n      const templateEmails = parseEmails(recipientFromTemplate);\n      const fallbackEmails = parseEmails((action as any).toEmail || '')\n        .concat(parseEmails((lead.fields as any).contactEmail || ''))\n        .concat(parseEmails((lead.fields as any).email || ''))\n        .concat(parseEmails((lead.fields as any).emailLead || ''))\n        .concat(parseEmails((lead.fields as any).contatoEmail || ''));\n      const allRecipients = (templateEmails.length ? templateEmails : fallbackEmails);\n      const toValue = allRecipients.join(',');\n      if (!toValue) {\n        throw new Error('Destinat√°rio n√£o definido (template/a√ß√£o/lead)');\n      }\n\n      // Conte√∫do/assunto a partir do template salvo (usar body como fonte principal)\n      const body = (template as any).body || (template as any).content || '';\n      const processedContent = this.processEmailTemplate(body, lead, boardId, ownerId);\n      const processedSubject = this.processEmailTemplate((template as any).subject || (template as any).name || 'Mensagem', lead, boardId, ownerId);\n\n      // Criar registro na caixa de sa√≠da (estado inicial pendente)\n      let outboxId: string | null = null;\n      try {\n        // Verifica√ß√£o tripla de deduplica√ß√£o\n        \n        // 1. Verificar por automa√ß√£o + lead + assunto (30 min)\n        const existing = await this.firestoreService.findRecentOutboxEmail(ownerId, boardId, {\n          automationId: automation?.id || undefined,\n          leadId: lead.id,\n          subject: processedSubject,\n          withinMs: 30 * 60 * 1000\n        });\n        if (existing) {\n          console.log('üìß Email duplicado detectado (automa√ß√£o + assunto, 30min), pulando envio:', {\n            leadId: lead.id,\n            automationId: automation?.id,\n            subject: processedSubject,\n            existingEmailId: existing,\n            timestamp: new Date().toISOString()\n          });\n          return;\n        }\n\n        // 2. Verificar por template + lead (60 min)\n        const recentTemplate = await this.firestoreService.findRecentOutboxEmail(ownerId, boardId, {\n          templateId: action.templateId,\n          leadId: lead.id,\n          withinMs: 60 * 60 * 1000\n        });\n        if (recentTemplate) {\n          console.log('üìß Template duplicado detectado (template + lead, 60min), pulando envio:', {\n            leadId: lead.id,\n            templateId: action.templateId,\n            subject: processedSubject,\n            existingEmailId: recentTemplate,\n            timestamp: new Date().toISOString()\n          });\n          return;\n        }\n\n        // 3. Verificar por lead + assunto + destinat√°rio (15 min) - mais restritivo\n        const recentRecipient = await this.firestoreService.findRecentOutboxEmail(ownerId, boardId, {\n          leadId: lead.id,\n          subject: processedSubject,\n          withinMs: 15 * 60 * 1000\n        });\n        if (recentRecipient) {\n          console.log('üìß Email duplicado detectado (lead + assunto, 15min), pulando envio:', {\n            leadId: lead.id,\n            subject: processedSubject,\n            to: toValue,\n            existingEmailId: recentRecipient,\n            timestamp: new Date().toISOString()\n          });\n          return;\n        }\n\n        const ref: any = outboxId ? { id: outboxId } : await this.firestoreService.createOutboxEmail(ownerId, boardId, {\n          to: toValue,\n          subject: processedSubject,\n          html: processedContent,\n          leadId: lead.id,\n          automationId: automation?.id || null,\n          templateId: action.templateId || null,\n          delivery: { state: 'PENDING' }\n        } as any);\n        outboxId = ref?.id || null;\n      } catch (e) {\n        // Continua mesmo se n√£o conseguir registrar a sa√≠da\n        console.warn('‚ö†Ô∏è N√£o foi poss√≠vel registrar o email na caixa de sa√≠da antes do envio.', e);\n      }\n\n      // Enviar email\n      await new Promise<void>((resolve, reject) => {\n        this.smtpService.sendEmail({ to: toValue, subject: processedSubject, html: processedContent }).subscribe({\n          next: async (response: any) => {\n            // Atualizar status no outbox\n            try {\n              if (outboxId) {\n                await this.firestoreService.updateOutboxEmail(ownerId, boardId, outboxId, {\n                  delivery: { state: 'SUCCESS', messageId: (response as any)?.messageId || 'sent' }\n                });\n              }\n            } catch {}\n            resolve();\n          },\n          error: async (error: any) => {\n            try {\n              if (outboxId) {\n                await this.firestoreService.updateOutboxEmail(ownerId, boardId, outboxId, {\n                  delivery: { state: 'ERROR', error: (error as any)?.error || (error as any)?.message || 'Erro' }\n                });\n              }\n            } catch {}\n            reject(error);\n          }\n        });\n      });\n\n      console.log('‚úÖ Email enviado com sucesso:', {\n        leadId: lead.id,\n        templateId: action.templateId,\n        automationId: automation?.id,\n        subject: processedSubject,\n        to: toValue,\n        timestamp: new Date().toISOString()\n      });\n\n    } catch (error) {\n      console.error('‚ùå Erro ao enviar email:', {\n        leadId: lead.id,\n        templateId: action.templateId,\n        automationId: automation?.id,\n        error: (error as any)?.message || error,\n        timestamp: new Date().toISOString()\n      });\n      throw error;\n    } finally {\n      // Liberar lock\n      this.timeAutomationLocks.delete(emailLockKey);\n      console.log('üîì Lock de email liberado:', emailLockKey);\n    }\n  }\n\n  // Executar a√ß√£o de mover para fase\n  private async executeMoveToPhaseAction(action: AutomationAction, lead: Lead, boardId: string, ownerId: string): Promise<void> {\n    if (!action.phaseId) {\n      throw new Error('Fase de destino n√£o especificada');\n    }\n\n    try {\n      // Atualizar lead para nova fase e phaseHistory\n      const now = new Date();\n      const phaseHistory: any = { ...((lead as any).phaseHistory || {}) };\n      const oldColumnId = lead.columnId;\n\n      // Finalizar fase anterior\n      if (oldColumnId && phaseHistory[oldColumnId]) {\n        const enteredAt = (phaseHistory[oldColumnId].enteredAt?.toDate && phaseHistory[oldColumnId].enteredAt.toDate()) || new Date(phaseHistory[oldColumnId].enteredAt || now);\n        phaseHistory[oldColumnId].exitedAt = now;\n        phaseHistory[oldColumnId].duration = now.getTime() - enteredAt.getTime();\n      }\n      \n      // Iniciar nova fase\n      phaseHistory[action.phaseId] = {\n        phaseId: action.phaseId,\n        enteredAt: now\n      };\n\n      await this.firestoreService.updateLead(ownerId, boardId, lead.id!, {\n        columnId: action.phaseId,\n        movedToCurrentColumnAt: now,\n        phaseHistory\n      });\n\n      // Registrar no hist√≥rico do lead\n      try {\n        await this.firestoreService.addLeadHistory(ownerId, boardId, lead.id!, {\n          type: 'move',\n          text: `Moveu automaticamente para outra fase`,\n          user: 'Automa√ß√£o'\n        });\n      } catch (historyError) {\n        console.warn('Erro ao registrar hist√≥rico de movimenta√ß√£o:', historyError);\n      }\n      \n    } catch (error) {\n      console.error('Erro ao executar a√ß√£o de mover para fase:', error);\n      throw error;\n    }\n  }\n\n  // Executar a√ß√£o de atribuir usu√°rio\n  private async executeAssignUserAction(action: AutomationAction, lead: Lead, boardId: string, ownerId: string): Promise<void> {\n    if (!action.userId) {\n      throw new Error('Usu√°rio n√£o especificado');\n    }\n\n    // Buscar dados do usu√°rio para preencher nome e email\n    const companyId = this.subdomainService.getCurrentCompany()?.id;\n    let userName = '';\n    let userEmail = '';\n    \n    if (companyId && action.userId) {\n      try {\n        // Primeiro tentar buscar por email (assumindo que userId pode ser email)\n        const user = await this.companyService.getCompanyUser(companyId, action.userId);\n        if (user) {\n          userName = user.displayName || '';\n          userEmail = user.email || action.userId;\n        } else {\n          // Fallback: tentar buscar na lista de usu√°rios da empresa por uid\n          const users = await this.companyService.getCompanyUsers(companyId);\n          const foundUser = users.find(u => u.uid === action.userId || u.email === action.userId);\n          if (foundUser) {\n            userName = foundUser.displayName || '';\n            userEmail = foundUser.email || '';\n          }\n        }\n      } catch (error) {\n        console.warn('Erro ao buscar dados do usu√°rio:', error);\n      }\n    }\n\n    // Atualizar lead com usu√°rio atribu√≠do e seus dados\n    await this.firestoreService.updateLead(ownerId, boardId, lead.id!, {\n      responsibleUserId: action.userId,\n      responsibleUserName: userName,\n      responsibleUserEmail: userEmail\n    });\n  }\n\n  // Executar a√ß√£o de adicionar nota\n  private async executeAddNoteAction(action: AutomationAction, lead: Lead, boardId: string, ownerId: string): Promise<void> {\n    if (!action.note) {\n      throw new Error('Nota n√£o especificada');\n    }\n\n    // Processar nota com dados do lead\n    const processedNote = this.processEmailTemplate(action.note, lead, boardId, ownerId);\n\n    // Adicionar nota ao lead (implementar se necess√°rio)\n    const currentNotes = lead.fields['notes'] || '';\n    const newNotes = currentNotes + '\\n\\n[AUTOMA√á√ÉO] ' + new Date().toLocaleString('pt-BR') + ':\\n' + processedNote;\n\n    await this.firestoreService.updateLead(ownerId, boardId, lead.id!, {\n      fields: {\n        ...lead.fields,\n        notes: newNotes\n      }\n    });\n  }\n\n  // Processar template com dados do lead\n  private processEmailTemplate(template: string, lead: Lead, boardId?: string, ownerId?: string): string {\n    if (!template) return '';\n\n    let processed = template;\n    \n    // Substituir vari√°veis do lead\n    const variables: Record<string, string> = {\n      '{{contactName}}': (lead.fields as any).contactName || '',\n      '{{companyName}}': (lead.fields as any).companyName || '',\n      '{{contactEmail}}': (lead.fields as any).contactEmail || '',\n      '{{contactPhone}}': (lead.fields as any).contactPhone || '',\n      '{{cnpj}}': (lead.fields as any).cnpj || ''\n    };\n\n    // Vari√°veis de respons√°vel (aceitar PT-BR e can√¥nicas)\n    const respName = (lead as any).responsibleUserName || (lead.fields as any).responsibleUserName || '';\n    const respEmail = (lead as any).responsibleUserEmail || (lead.fields as any).responsibleUserEmail || '';\n    // Link p√∫blico do formul√°rio da fase\n    const leadLink = this.buildLeadPublicLink(lead, boardId, ownerId);\n\n    Object.assign(variables, {\n      '{{responsibleUserName}}': respName,\n      '{{responsibleUserEmail}}': respEmail,\n      '{{nomeResponsavel}}': respName,\n      '{{emailResponsavel}}': respEmail,\n      '{{responsavel}}': respName,\n      '{{leadLink}}': leadLink\n    });\n\n    // Substituir todas as vari√°veis\n    Object.entries(variables).forEach(([placeholder, value]) => {\n      processed = processed.replace(new RegExp(placeholder, 'g'), value);\n    });\n\n    // Substituir outros campos personalizados\n    Object.entries(lead.fields).forEach(([key, value]) => {\n      if (typeof value === 'string') {\n        processed = processed.replace(new RegExp(`{{${key}}}`, 'g'), value);\n      }\n    });\n\n    // Substituir tamb√©m campos diretos do lead (fora de fields)\n    const rootReplacements: Array<[string, any]> = [\n      ['id', (lead as any).id],\n      ['responsibleUserId', (lead as any).responsibleUserId],\n      ['responsibleUserName', (lead as any).responsibleUserName],\n      ['responsibleUserEmail', (lead as any).responsibleUserEmail]\n    ];\n    rootReplacements.forEach(([k, v]) => {\n      if (typeof v === 'string') {\n        processed = processed.replace(new RegExp(`{{${k}}}`, 'g'), v);\n      }\n    });\n\n    return processed;\n  }\n\n  private buildLeadPublicLink(lead: Lead, boardId?: string, ownerId?: string): string {\n    try {\n      const company = this.subdomainService.getCurrentCompany();\n      if (!company || !boardId || !ownerId || !lead?.id || !lead?.columnId) return '';\n      const params = new URLSearchParams({\n        companyId: company.id as any,\n        userId: ownerId,\n        boardId: boardId,\n        leadId: lead.id!,\n        columnId: lead.columnId\n      });\n      if (this.subdomainService.isDevelopment()) {\n        const base = this.subdomainService.getBaseUrl();\n        params.set('subdomain', company.subdomain);\n        return `${base}/form?${params.toString()}`;\n      }\n      return `https://${company.subdomain}.taskboard.com.br/form?${params.toString()}`;\n    } catch {\n      return '';\n    }\n  }\n\n  // Adicionar item ao hist√≥rico de automa√ß√£o\n  private async addAutomationHistory(automation: Automation, lead: Lead, boardId: string, ownerId: string, status: 'success' | 'error', errorMessage?: string): Promise<void> {\n    const historyItem = {\n      automationId: automation.id,\n      automationName: automation.name,\n      leadId: lead.id,\n      leadName: lead.fields.contactName || lead.fields.companyName || 'Lead sem nome',\n      status: status,\n      executedAt: new Date(),\n      actions: automation.actions.map(action => ({\n        type: action.type,\n        details: this.getActionDetails(action)\n      })),\n      ...(errorMessage && { errorMessage })\n    };\n\n    try {\n      await this.firestoreService.addAutomationHistoryItem(ownerId, boardId, historyItem);\n    } catch (error) {\n      console.error('Erro ao adicionar ao hist√≥rico de automa√ß√£o:', error);\n    }\n  }\n\n  // Obter detalhes da a√ß√£o para hist√≥rico\n  private getActionDetails(action: AutomationAction): string {\n    switch (action.type) {\n      case 'send-email':\n        return `Template: ${action.templateId}`;\n      case 'move-to-phase':\n        return `Fase: ${action.phaseId}`;\n      case 'assign-user':\n        return `Usu√°rio: ${action.userId}`;\n      case 'add-note':\n        return `Nota: ${action.note?.substring(0, 50)}...`;\n      default:\n        return '';\n    }\n  }\n\n  // M√©todo para processar automa√ß√µes de tempo (SLA, tempo em fase)\n  async processTimeBasedAutomations(leads: Lead[], columns: Column[], boardId: string, ownerId: string): Promise<void> {\n    const lockKey = `${ownerId}-${boardId}`;\n    \n    // Verificar se j√° est√° executando para este board\n    if (this.timeAutomationLocks.get(lockKey)) {\n      console.log('‚è≥ Automa√ß√µes de tempo j√° em execu√ß√£o para este board, pulando...');\n      return;\n    }\n    \n    // Definir lock\n    this.timeAutomationLocks.set(lockKey, true);\n    \n    try {\n      if (!leads || leads.length === 0) {\n        return;\n      }\n      \n      console.log('üîÑ Iniciando processamento de automa√ß√µes de tempo:', {\n        leadsCount: leads.length,\n        boardId,\n        timestamp: new Date().toISOString()\n      });\n      \n      const automations = await this.firestoreService.getAutomations(ownerId, boardId);\n      const list = (automations as Automation[]).filter(a => a && a.active);\n      \n      if (list.length === 0) {\n        console.log('‚ÑπÔ∏è Nenhuma automa√ß√£o ativa encontrada');\n        return;\n      }\n      \n      console.log(`üìã Processando ${list.length} automa√ß√µes ativas`);\n      \n\n      // Cache de config de formul√°rio por fase para verificar \"form-not-answered\"\n      const formConfigCache: Record<string, any | null> = {};\n      const getFormFieldsForPhase = async (phaseId: string): Promise<any[]> => {\n        if (formConfigCache.hasOwnProperty(phaseId)) return (formConfigCache[phaseId]?.fields || []);\n        const cfg = await this.firestoreService.getPhaseFormConfig(ownerId, boardId, phaseId);\n        formConfigCache[phaseId] = cfg as any;\n        return ((cfg as any)?.fields || []);\n      };\n\n      const DAY = 24 * 60 * 60 * 1000;\n      const now = Date.now();\n\n      for (const automation of list) {\n        const type = (automation as any).triggerType || (automation as any).trigger?.type;\n        const phaseId = (automation as any).triggerPhase || (automation as any).trigger?.phase || '';\n        const days = (automation as any).triggerDays || (automation as any).trigger?.days || 0;\n\n        if (!type) continue;\n\n        // Avaliar cada lead\n        for (const lead of leads) {\n          // Filtrar por fase se definido\n          if (phaseId && lead.columnId !== phaseId) continue;\n          \n          const movedTs = (lead.movedToCurrentColumnAt as any);\n          const moved = movedTs?.toDate ? movedTs.toDate().getTime() : (movedTs?.seconds ? movedTs.seconds * 1000 : (new Date(movedTs)).getTime());\n          const daysPassed = moved ? Math.floor((now - moved) / DAY) : 'N/A';\n\n          try {\n            if (type === 'card-in-phase-for-time') {\n              if (!days || days <= 0) continue;\n              const movedTs = (lead.movedToCurrentColumnAt as any);\n              const moved = movedTs?.toDate ? movedTs.toDate().getTime() : (movedTs?.seconds ? movedTs.seconds * 1000 : (new Date(movedTs)).getTime());\n              if (!moved) continue;\n              const elapsed = now - moved;\n              if (elapsed >= days * DAY && !this.hasRecentlyExecutedForDays(lead, automation.id, days, DAY)) {\n                await this.executeAutomation(automation, lead, boardId, ownerId);\n                await this.markExecutedForDays(ownerId, boardId, lead, automation.id, days);\n              }\n            } else if (type === 'sla-overdue') {\n              const column = columns.find(c => c.id === lead.columnId);\n              const slaDays = column?.slaDays || 0;\n              if (!slaDays || slaDays <= 0) continue;\n              const movedTs = (lead.movedToCurrentColumnAt as any);\n              const moved = movedTs?.toDate ? movedTs.toDate().getTime() : (movedTs?.seconds ? movedTs.seconds * 1000 : (new Date(movedTs)).getTime());\n              if (!moved) continue;\n              if (now - moved > slaDays * DAY && !this.hasRecentlyExecuted(lead, automation.id, DAY)) {\n                await this.executeAutomation(automation, lead, boardId, ownerId);\n                await this.markExecuted(ownerId, boardId, lead, automation.id);\n              }\n            } else if (type === 'form-not-answered') {\n              // Verificar se a automa√ß√£o √© para a fase atual ou uma fase espec√≠fica\n              const targetPhase = phaseId || lead.columnId;\n              if (phaseId && lead.columnId !== phaseId) {\n                continue;\n              }\n\n              const fields = await getFormFieldsForPhase(targetPhase);\n              \n              if (!fields || fields.length === 0) {\n                continue; // sem formul√°rio, n√£o dispara\n              }\n\n              // Disparar apenas ap√≥s \"days\" dias sem resposta (default 1)\n              const waitDays = days && days > 0 ? days : 1;\n              const movedTs = (lead.movedToCurrentColumnAt as any);\n              let moved = null;\n              \n              if (movedTs?.toDate) {\n                moved = movedTs.toDate().getTime();\n              } else if (movedTs?.seconds) {\n                moved = movedTs.seconds * 1000;\n              } else if (movedTs) {\n                try {\n                  moved = new Date(movedTs).getTime();\n                } catch {\n                  moved = null;\n                }\n              }\n\n              // Fallback: usar createdAt se movedToCurrentColumnAt n√£o existir\n              if (!moved) {\n                const createdTs = (lead.createdAt as any);\n                if (createdTs?.toDate) {\n                  moved = createdTs.toDate().getTime();\n                } else if (createdTs?.seconds) {\n                  moved = createdTs.seconds * 1000;\n                } else if (createdTs) {\n                  try {\n                    moved = new Date(createdTs).getTime();\n                  } catch {\n                    moved = Date.now(); // √∫ltimo recurso\n                  }\n                }\n              }\n              \n              const daysPassed = moved ? Math.floor((now - moved) / DAY) : 0;\n\n              if (!moved || now - moved < waitDays * DAY) {\n                continue;\n              }\n\n              // Considerar n√£o respondido se todos os campos do form est√£o vazios\n              const fieldValues: any = {};\n              const fieldAnalysis: any[] = [];\n              \n              const allEmpty = fields.every((f: any) => {\n                const key = f.apiFieldName || f.name;\n                const val = (lead as any).fields?.[key];\n                fieldValues[key] = val;\n                \n                let isEmpty = true;\n                if (val !== undefined && val !== null && val !== '') {\n                  const strVal = `${val}`.trim();\n                  isEmpty = strVal === '' || strVal === 'undefined' || strVal === 'null';\n                }\n                \n                fieldAnalysis.push({\n                  fieldName: f.name,\n                  apiFieldName: f.apiFieldName,\n                  value: val,\n                  isEmpty: isEmpty,\n                  type: typeof val\n                });\n                \n                return isEmpty;\n              });\n\n              if (allEmpty && !this.hasRecentlyExecuted(lead, automation.id, DAY)) {\n                try {\n                  await this.executeAutomation(automation, lead, boardId, ownerId);\n                  await this.markExecuted(ownerId, boardId, lead, automation.id);\n                } catch (executeError) {\n                  console.error(`Erro ao executar automa√ß√£o form-not-answered para lead ${lead.id}:`, executeError);\n                }\n              }\n            }\n          } catch (e) {\n            console.warn('Falha ao avaliar automa√ß√£o baseada em tempo para lead:', lead.id, e);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('‚ùå Erro ao processar automa√ß√µes baseadas em tempo:', error);\n    } finally {\n      // Liberar lock\n      this.timeAutomationLocks.delete(lockKey);\n      console.log('üîì Lock de automa√ß√µes de tempo liberado');\n    }\n  }\n\n  private hasRecentlyExecuted(lead: Lead, automationId: string, withinMs: number): boolean {\n    try {\n      const executedAutomations = (lead as any).executedAutomations || {};\n      const record = executedAutomations[automationId];\n      \n      if (!record) {\n        return false;\n      }\n\n      let timestamp = null;\n      const lastExecutedAt = record.lastExecutedAt;\n      \n      if (lastExecutedAt?.toDate) {\n        timestamp = lastExecutedAt.toDate().getTime();\n      } else if (lastExecutedAt?.seconds) {\n        timestamp = lastExecutedAt.seconds * 1000;\n      } else if (lastExecutedAt) {\n        try {\n          timestamp = new Date(lastExecutedAt).getTime();\n        } catch {\n          timestamp = null;\n        }\n      }\n\n      if (!timestamp) {\n        return false;\n      }\n\n      const elapsed = Date.now() - timestamp;\n      const isRecent = elapsed < withinMs;\n      \n      return isRecent;\n    } catch (error) {\n      console.error(`Erro ao verificar execu√ß√£o recente para automa√ß√£o ${automationId}:`, error);\n      return false;\n    }\n  }\n\n  private hasRecentlyExecutedForDays(lead: Lead, automationId: string, days: number, withinMs: number): boolean {\n    try {\n      const executedAutomations = (lead as any).executedAutomations || {};\n      const key = `${automationId}_${days}days`;\n      const record = executedAutomations[key];\n      \n      if (!record) {\n        return false;\n      }\n\n      let timestamp = null;\n      const lastExecutedAt = record.lastExecutedAt;\n      \n      if (lastExecutedAt?.toDate) {\n        timestamp = lastExecutedAt.toDate().getTime();\n      } else if (lastExecutedAt?.seconds) {\n        timestamp = lastExecutedAt.seconds * 1000;\n      } else if (lastExecutedAt) {\n        try {\n          timestamp = new Date(lastExecutedAt).getTime();\n        } catch {\n          timestamp = null;\n        }\n      }\n\n      if (!timestamp) {\n        return false;\n      }\n\n      const elapsed = Date.now() - timestamp;\n      const isRecent = elapsed < withinMs;\n      \n      console.log(`üîç Verificando execu√ß√£o para ${key}: timestamp=${new Date(timestamp).toISOString()}, elapsed=${Math.round(elapsed/1000/60)}min, isRecent=${isRecent}`);\n      \n      return isRecent;\n    } catch (error) {\n      console.error(`Erro ao verificar execu√ß√£o recente para automa√ß√£o ${automationId} (${days} dias):`, error);\n      return false;\n    }\n  }\n\n  private async markExecuted(ownerId: string, boardId: string, lead: Lead, automationId: string) {\n    try {\n      const exec = { ...((lead as any).executedAutomations || {}) };\n      const now = new Date();\n      exec[automationId] = { lastExecutedAt: now };\n\n      await this.firestoreService.updateLead(ownerId, boardId, lead.id!, { executedAutomations: exec } as any);\n    } catch (error) {\n      console.error(`Erro ao marcar automa√ß√£o ${automationId} como executada para lead ${lead.id}:`, error);\n    }\n  }\n\n  private async markExecutedForDays(ownerId: string, boardId: string, lead: Lead, automationId: string, days: number) {\n    try {\n      const exec = { ...((lead as any).executedAutomations || {}) };\n      const now = new Date();\n      const key = `${automationId}_${days}days`;\n      exec[key] = { lastExecutedAt: now, automationId, days };\n\n      console.log(`‚úÖ Marcando execu√ß√£o para ${key}: ${now.toISOString()}`);\n\n      await this.firestoreService.updateLead(ownerId, boardId, lead.id!, { executedAutomations: exec } as any);\n    } catch (error) {\n      console.error(`Erro ao marcar automa√ß√£o ${automationId} (${days} dias) como executada para lead ${lead.id}:`, error);\n    }\n  }\n}","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\nexport { _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _supportsShadowDom };\n\n","/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\nexport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n\n","import { ElementRef } from '@angular/core';\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    if (_isNumberValue(value)) {\n        return Number(value);\n    }\n    return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\nexport { _isNumberValue, coerceElement, coerceNumberProperty };\n\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nclass _CdkPrivateStyleLoader {\n  _appRef;\n  _injector = inject(Injector);\n  _environmentInjector = inject(EnvironmentInjector);\n  /**\n   * Loads a set of styles.\n   * @param loader Component which will be instantiated to load the styles.\n   */\n  load(loader) {\n    // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n    const appRef = this._appRef = this._appRef || this._injector.get(ApplicationRef);\n    let data = appsWithLoaders.get(appRef);\n    // If we haven't loaded for this app before, we have to initialize it.\n    if (!data) {\n      data = {\n        loaders: new Set(),\n        refs: []\n      };\n      appsWithLoaders.set(appRef, data);\n      // When the app is destroyed, we need to clean up all the related loaders.\n      appRef.onDestroy(() => {\n        appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n        appsWithLoaders.delete(appRef);\n      });\n    }\n    // If the loader hasn't been loaded before, we need to instatiate it.\n    if (!data.loaders.has(loader)) {\n      data.loaders.add(loader);\n      data.refs.push(createComponent(loader, {\n        environmentInjector: this._environmentInjector\n      }));\n    }\n  }\n  static …µfac = function _CdkPrivateStyleLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _CdkPrivateStyleLoader)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: _CdkPrivateStyleLoader,\n    factory: _CdkPrivateStyleLoader.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(_CdkPrivateStyleLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nexport { _CdkPrivateStyleLoader };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n  _platformId = inject(PLATFORM_ID);\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n  /** Whether the current platform is Apple iOS. */\n  IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n  constructor() {}\n  static …µfac = function Platform_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Platform)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: Platform,\n    factory: Platform.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { Platform };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n  /** The current 'ltr' or 'rtl' value. */\n  get value() {\n    return this.valueSignal();\n  }\n  /**\n   * The current 'ltr' or 'rtl' value.\n   */\n  valueSignal = signal('ltr', ...(ngDevMode ? [{\n    debugName: \"valueSignal\"\n  }] : []));\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  change = new EventEmitter();\n  constructor() {\n    const _document = inject(DIR_DOCUMENT, {\n      optional: true\n    });\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n    }\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static …µfac = function Directionality_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Directionality)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: Directionality,\n    factory: Directionality.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { DIR_DOCUMENT, Directionality, _resolveDirectionality };\n","/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nexport { RtlScrollAxisType, getRtlScrollAxisType, supportsScrollBehavior };\n\n","import { _resolveDirectionality, Directionality } from './directionality.mjs';\nexport { DIR_DOCUMENT } from './directionality.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n  /** Whether the `value` has been set to its initial value. */\n  _isInitialized = false;\n  /** Direction as passed in by the consumer. */\n  _rawDir;\n  /** Event emitted when the direction changes. */\n  change = new EventEmitter();\n  /** @docs-private */\n  get dir() {\n    return this.valueSignal();\n  }\n  set dir(value) {\n    const previousValue = this.valueSignal();\n    // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n    // whereas the browser does it based on the content of the element. Since doing so based\n    // on the content can be expensive, for now we're doing the simpler matching.\n    this.valueSignal.set(_resolveDirectionality(value));\n    this._rawDir = value;\n    if (previousValue !== this.valueSignal() && this._isInitialized) {\n      this.change.emit(this.valueSignal());\n    }\n  }\n  /** Current layout direction of the element. */\n  get value() {\n    return this.dir;\n  }\n  valueSignal = signal('ltr', ...(ngDevMode ? [{\n    debugName: \"valueSignal\"\n  }] : []));\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static …µfac = function Dir_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Dir)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: Dir,\n    selectors: [[\"\", \"dir\", \"\"]],\n    hostVars: 1,\n    hostBindings: function Dir_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.…µ…µattribute(\"dir\", ctx._rawDir);\n      }\n    },\n    inputs: {\n      dir: \"dir\"\n    },\n    outputs: {\n      change: \"dirChange\"\n    },\n    exportAs: [\"dir\"],\n    features: [i0.…µ…µProvidersFeature([{\n      provide: Directionality,\n      useExisting: Dir\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }], null, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\nclass BidiModule {\n  static …µfac = function BidiModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BidiModule)();\n  };\n  static …µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n    type: BidiModule,\n    imports: [Dir],\n    exports: [Dir]\n  });\n  static …µinj = /* @__PURE__ */i0.…µ…µdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Dir],\n      exports: [Dir]\n    }]\n  }], null, null);\n})();\nexport { BidiModule, Dir, Directionality };\n","import { ConnectableObservable } from 'rxjs';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\nexport { DataSource, isDataSource };\n\n","import { isObservable, of } from 'rxjs';\nimport { DataSource } from './data-source.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    _data;\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a `_ViewRepeater`. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for `_ViewRepeater`. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    _viewCache = [];\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\nexport { ArrayDataSource, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, DOCUMENT, ChangeDetectorRef, signal, Injector, effect, ApplicationRef, DestroyRef, untracked, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceElement } from './element.mjs';\nimport { Platform } from './platform2.mjs';\nimport { Directionality } from './directionality.mjs';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior } from './scrolling2.mjs';\nimport { BidiModule } from './bidi.mjs';\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nexport { Dir as …µ…µDir } from './bidi.mjs';\nimport { _VIEW_REPEATER_STRATEGY, ArrayDataSource, _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy.mjs';\nimport { isDataSource } from './data-source.mjs';\nimport '@angular/common';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  _scrolledIndexChange = new Subject();\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n  /** The attached viewport. */\n  _viewport = null;\n  /** The size of the items in the virtually scrolling list. */\n  _itemSize;\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  _minBufferPx;\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  _maxBufferPx;\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n  /** The size of the items in the list (in pixels). */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(value) {\n    this._itemSize = coerceNumberProperty(value);\n  }\n  _itemSize = 20;\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  get minBufferPx() {\n    return this._minBufferPx;\n  }\n  set minBufferPx(value) {\n    this._minBufferPx = coerceNumberProperty(value);\n  }\n  _minBufferPx = 100;\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  get maxBufferPx() {\n    return this._maxBufferPx;\n  }\n  set maxBufferPx(value) {\n    this._maxBufferPx = coerceNumberProperty(value);\n  }\n  _maxBufferPx = 200;\n  /** The scroll strategy used by this directive. */\n  _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n  static …µfac = function CdkFixedSizeVirtualScroll_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFixedSizeVirtualScroll)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkFixedSizeVirtualScroll,\n    selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n    inputs: {\n      itemSize: \"itemSize\",\n      minBufferPx: \"minBufferPx\",\n      maxBufferPx: \"maxBufferPx\"\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: _fixedSizeVirtualScrollStrategyFactory,\n      deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n    }]), i0.…µ…µNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[itemSize]',\n      providers: [{\n        provide: VIRTUAL_SCROLL_STRATEGY,\n        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n      }]\n    }]\n  }], null, {\n    itemSize: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n  _ngZone = inject(NgZone);\n  _platform = inject(Platform);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupGlobalListener;\n  constructor() {}\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  _scrolled = new Subject();\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  _scrolledCount = 0;\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers = new Map();\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable) {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n  /**\n   * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable) {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n    if (!this._platform.isBrowser) {\n      return of();\n    }\n    return new Observable(observer => {\n      if (!this._cleanupGlobalListener) {\n        this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n      }\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n      this._scrolledCount++;\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n        if (!this._scrolledCount) {\n          this._cleanupGlobalListener?.();\n          this._cleanupGlobalListener = undefined;\n        }\n      };\n    });\n  }\n  ngOnDestroy() {\n    this._cleanupGlobalListener?.();\n    this._cleanupGlobalListener = undefined;\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementOrElementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n    const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n    return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n  }\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementOrElementRef) {\n    const scrollingContainers = [];\n    this.scrollContainers.forEach((_subscription, scrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n    return scrollingContainers;\n  }\n  /** Returns true if the element is contained within the provided Scrollable. */\n  _scrollableContainsElement(scrollable, elementOrElementRef) {\n    let element = coerceElement(elementOrElementRef);\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) {\n        return true;\n      }\n    } while (element = element.parentElement);\n    return false;\n  }\n  static …µfac = function ScrollDispatcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ScrollDispatcher)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: ScrollDispatcher,\n    factory: ScrollDispatcher.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(ScrollDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n  elementRef = inject(ElementRef);\n  scrollDispatcher = inject(ScrollDispatcher);\n  ngZone = inject(NgZone);\n  dir = inject(Directionality, {\n    optional: true\n  });\n  _scrollElement = this.elementRef.nativeElement;\n  _destroyed = new Subject();\n  _renderer = inject(Renderer2);\n  _cleanupScroll;\n  _elementScrolled = new Subject();\n  constructor() {}\n  ngOnInit() {\n    this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n    this.scrollDispatcher.register(this);\n  }\n  ngOnDestroy() {\n    this._cleanupScroll?.();\n    this._elementScrolled.complete();\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled() {\n    return this._elementScrolled;\n  }\n  /** Gets the ElementRef for the viewport. */\n  getElementRef() {\n    return this.elementRef;\n  }\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options) {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    // Rewrite start & end offsets as right or left offsets.\n    if (options.left == null) {\n      options.left = isRtl ? options.end : options.start;\n    }\n    if (options.right == null) {\n      options.right = isRtl ? options.start : options.end;\n    }\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      options.top = el.scrollHeight - el.clientHeight - options.bottom;\n    }\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        options.right = el.scrollWidth - el.clientWidth - options.left;\n      }\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        options.left = el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n    this._applyScrollToOptions(options);\n  }\n  _applyScrollToOptions(options) {\n    const el = this.elementRef.nativeElement;\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from) {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n  static …µfac = function CdkScrollable_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkScrollable)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkScrollable,\n    selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkScrollable, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-scrollable], [cdkScrollable]'\n    }]\n  }], () => [], null);\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n  _platform = inject(Platform);\n  _listeners;\n  /** Cached viewport dimensions. */\n  _viewportSize;\n  /** Stream of viewport change events. */\n  _change = new Subject();\n  /** Used to reference correct document/window */\n  _document = inject(DOCUMENT);\n  constructor() {\n    const ngZone = inject(NgZone);\n    const renderer = inject(RendererFactory2).createRenderer(null, null);\n    ngZone.runOutsideAngular(() => {\n      if (this._platform.isBrowser) {\n        const changeListener = event => this._change.next(event);\n        this._listeners = [renderer.listen('window', 'resize', changeListener), renderer.listen('window', 'orientationchange', changeListener)];\n      }\n      // Clear the cached position so that the viewport is re-measured next time it is required.\n      // We don't need to keep track of the subscription, because it is completed on destroy.\n      this.change().subscribe(() => this._viewportSize = null);\n    });\n  }\n  ngOnDestroy() {\n    this._listeners?.forEach(cleanup => cleanup());\n    this._change.complete();\n  }\n  /** Returns the viewport's width and height. */\n  getViewportSize() {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n    const output = {\n      width: this._viewportSize.width,\n      height: this._viewportSize.height\n    };\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null;\n    }\n    return output;\n  }\n  /** Gets a DOMRect for the viewport's bounds. */\n  getViewportRect() {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {\n      width,\n      height\n    } = this.getViewportSize();\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width\n    };\n  }\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition() {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const document = this._document;\n    const window = this._getWindow();\n    const documentElement = document.documentElement;\n    const documentRect = documentElement.getBoundingClientRect();\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * This stream emits outside of the Angular zone.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime = DEFAULT_RESIZE_TIME) {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /** Updates the cached viewport size. */\n  _updateViewportSize() {\n    const window = this._getWindow();\n    this._viewportSize = this._platform.isBrowser ? {\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : {\n      width: 0,\n      height: 0\n    };\n  }\n  static …µfac = function ViewportRuler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ViewportRuler)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: ViewportRuler,\n    factory: ViewportRuler.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(ViewportRuler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the `CdkScrollable` to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n  constructor() {\n    super();\n  }\n  /**\n   * Measure the viewport size for the provided orientation.\n   *\n   * @param orientation The orientation to measure the size from.\n   */\n  measureViewportSize(orientation) {\n    const viewportEl = this.elementRef.nativeElement;\n    return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n  }\n  static …µfac = function CdkVirtualScrollable_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollable)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkVirtualScrollable,\n    features: [i0.…µ…µInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkVirtualScrollable, [{\n    type: Directive\n  }], () => [], null);\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n  elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n    optional: true\n  });\n  scrollable = inject(VIRTUAL_SCROLLABLE, {\n    optional: true\n  });\n  _platform = inject(Platform);\n  /** Emits when the viewport is detached from a CdkVirtualForOf. */\n  _detachedSubject = new Subject();\n  /** Emits when the rendered range changes. */\n  _renderedRangeSubject = new Subject();\n  /** The direction the viewport scrolls. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(orientation) {\n    if (this._orientation !== orientation) {\n      this._orientation = orientation;\n      this._calculateSpacerSize();\n    }\n  }\n  _orientation = 'vertical';\n  /**\n   * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n   * will be removed.\n   */\n  appendOnly = false;\n  // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n  // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n  // depending on how the strategy calculates the scrolled index, it may come at a cost to\n  // performance.\n  /** Emits when the index of the first element visible in the viewport changes. */\n  scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n  /** The element that wraps the rendered content. */\n  _contentWrapper;\n  /** A stream that emits whenever the rendered range changes. */\n  renderedRangeStream = this._renderedRangeSubject;\n  /**\n   * The total size of all content (in pixels), including content that is not currently rendered.\n   */\n  _totalContentSize = 0;\n  /** A string representing the `style.width` property value to be used for the spacer element. */\n  _totalContentWidth = signal('', ...(ngDevMode ? [{\n    debugName: \"_totalContentWidth\"\n  }] : []));\n  /** A string representing the `style.height` property value to be used for the spacer element. */\n  _totalContentHeight = signal('', ...(ngDevMode ? [{\n    debugName: \"_totalContentHeight\"\n  }] : []));\n  /**\n   * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n   * of the visible viewport.\n   */\n  _renderedContentTransform;\n  /** The currently rendered range of indices. */\n  _renderedRange = {\n    start: 0,\n    end: 0\n  };\n  /** The length of the data bound to this viewport (in number of items). */\n  _dataLength = 0;\n  /** The size of the viewport (in pixels). */\n  _viewportSize = 0;\n  /** the currently attached CdkVirtualScrollRepeater. */\n  _forOf;\n  /** The last rendered content offset that was set. */\n  _renderedContentOffset = 0;\n  /**\n   * Whether the last rendered content offset was to the end of the content (and therefore needs to\n   * be rewritten as an offset to the start of the content).\n   */\n  _renderedContentOffsetNeedsRewrite = false;\n  _changeDetectionNeeded = signal(false, ...(ngDevMode ? [{\n    debugName: \"_changeDetectionNeeded\"\n  }] : []));\n  /** A list of functions to run after the next change detection cycle. */\n  _runAfterChangeDetection = [];\n  /** Subscription to changes in the viewport size. */\n  _viewportChanges = Subscription.EMPTY;\n  _injector = inject(Injector);\n  _isDestroyed = false;\n  constructor() {\n    super();\n    const viewportRuler = inject(ViewportRuler);\n    if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }\n    this._viewportChanges = viewportRuler.change().subscribe(() => {\n      this.checkViewportSize();\n    });\n    if (!this.scrollable) {\n      // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n      this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n      this.scrollable = this;\n    }\n    const ref = effect(() => {\n      if (this._changeDetectionNeeded()) {\n        this._doChangeDetection();\n      }\n    }, ...(ngDevMode ? [{\n      debugName: \"ref\",\n      injector: inject(ApplicationRef).injector\n    }] : [\n    // Using ApplicationRef injector is important here because we want this to be a root\n    // effect that runs before change detection of any application views (since we're depending on markForCheck marking parents dirty)\n    {\n      injector: inject(ApplicationRef).injector\n    }]));\n    inject(DestroyRef).onDestroy(() => void ref.destroy());\n  }\n  ngOnInit() {\n    // Scrolling depends on the element dimensions which we can't get during SSR.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    if (this.scrollable === this) {\n      super.ngOnInit();\n    }\n    // It's still too early to measure the viewport at this point. Deferring with a promise allows\n    // the Viewport to be rendered with the correct size before we measure. We run this outside the\n    // zone to avoid causing more change detection cycles. We handle the change detection loop\n    // ourselves instead.\n    this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n      this._measureViewportSize();\n      this._scrollStrategy.attach(this);\n      this.scrollable.elementScrolled().pipe(\n      // Start off with a fake scroll event so we properly detect our initial position.\n      startWith(null),\n      // Collect multiple events into one until the next animation frame. This way if\n      // there are multiple scroll events in the same frame we only need to recheck\n      // our layout once.\n      auditTime(0, SCROLL_SCHEDULER),\n      // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n      // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n      // to unsubscribe here just in case.\n      takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n      this._markChangeDetectionNeeded();\n    }));\n  }\n  ngOnDestroy() {\n    this.detach();\n    this._scrollStrategy.detach();\n    // Complete all subjects\n    this._renderedRangeSubject.complete();\n    this._detachedSubject.complete();\n    this._viewportChanges.unsubscribe();\n    this._isDestroyed = true;\n    super.ngOnDestroy();\n  }\n  /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n  attach(forOf) {\n    if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkVirtualScrollViewport is already attached.');\n    }\n    // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n    // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n    // change detection loop ourselves.\n    this.ngZone.runOutsideAngular(() => {\n      this._forOf = forOf;\n      this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n        const newLength = data.length;\n        if (newLength !== this._dataLength) {\n          this._dataLength = newLength;\n          this._scrollStrategy.onDataLengthChanged();\n        }\n        this._doChangeDetection();\n      });\n    });\n  }\n  /** Detaches the current `CdkVirtualForOf`. */\n  detach() {\n    this._forOf = null;\n    this._detachedSubject.next();\n  }\n  /** Gets the length of the data bound to this viewport (in number of items). */\n  getDataLength() {\n    return this._dataLength;\n  }\n  /** Gets the size of the viewport (in pixels). */\n  getViewportSize() {\n    return this._viewportSize;\n  }\n  // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n  // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n  // setting it to something else, but its error prone and should probably be split into\n  // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n  /** Get the current rendered range of items. */\n  getRenderedRange() {\n    return this._renderedRange;\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  /**\n   * Sets the total size of all content (in pixels), including content that is not currently\n   * rendered.\n   */\n  setTotalContentSize(size) {\n    if (this._totalContentSize !== size) {\n      this._totalContentSize = size;\n      this._calculateSpacerSize();\n      this._markChangeDetectionNeeded();\n    }\n  }\n  /** Sets the currently rendered range of indices. */\n  setRenderedRange(range) {\n    if (!rangesEqual(this._renderedRange, range)) {\n      if (this.appendOnly) {\n        range = {\n          start: 0,\n          end: Math.max(this._renderedRange.end, range.end)\n        };\n      }\n      this._renderedRangeSubject.next(this._renderedRange = range);\n      this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n    }\n  }\n  /**\n   * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n   */\n  getOffsetToRenderedContentStart() {\n    return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n  }\n  /**\n   * Sets the offset from the start of the viewport to either the start or end of the rendered data\n   * (in pixels).\n   */\n  setRenderedContentOffset(offset, to = 'to-start') {\n    // In appendOnly, we always start from the top\n    offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n    // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n    // in the negative direction.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    const isHorizontal = this.orientation == 'horizontal';\n    const axis = isHorizontal ? 'X' : 'Y';\n    const axisDirection = isHorizontal && isRtl ? -1 : 1;\n    let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n    this._renderedContentOffset = offset;\n    if (to === 'to-end') {\n      transform += ` translate${axis}(-100%)`;\n      // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n      // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n      // expand upward).\n      this._renderedContentOffsetNeedsRewrite = true;\n    }\n    if (this._renderedContentTransform != transform) {\n      // We know this value is safe because we parse `offset` with `Number()` before passing it\n      // into the string.\n      this._renderedContentTransform = transform;\n      this._markChangeDetectionNeeded(() => {\n        if (this._renderedContentOffsetNeedsRewrite) {\n          this._renderedContentOffset -= this.measureRenderedContentSize();\n          this._renderedContentOffsetNeedsRewrite = false;\n          this.setRenderedContentOffset(this._renderedContentOffset);\n        } else {\n          this._scrollStrategy.onRenderedOffsetChanged();\n        }\n      });\n    }\n  }\n  /**\n   * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n   * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n   * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n   * @param offset The offset to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToOffset(offset, behavior = 'auto') {\n    const options = {\n      behavior\n    };\n    if (this.orientation === 'horizontal') {\n      options.start = offset;\n    } else {\n      options.top = offset;\n    }\n    this.scrollable.scrollTo(options);\n  }\n  /**\n   * Scrolls to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToIndex(index, behavior = 'auto') {\n    this._scrollStrategy.scrollToIndex(index, behavior);\n  }\n  /**\n   * Gets the current scroll offset from the start of the scrollable (in pixels).\n   * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n   *     in horizontal mode.\n   */\n  measureScrollOffset(from) {\n    // This is to break the call cycle\n    let measureScrollOffset;\n    if (this.scrollable == this) {\n      measureScrollOffset = _from => super.measureScrollOffset(_from);\n    } else {\n      measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n    }\n    return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n  }\n  /**\n   * Measures the offset of the viewport from the scrolling container\n   * @param from The edge to measure from.\n   */\n  measureViewportOffset(from) {\n    let fromRect;\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const isRtl = this.dir?.value == 'rtl';\n    if (from == 'start') {\n      fromRect = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      fromRect = isRtl ? LEFT : RIGHT;\n    } else if (from) {\n      fromRect = from;\n    } else {\n      fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n    }\n    const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n    const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n    return viewportClientRect - scrollerClientRect;\n  }\n  /** Measure the combined size of all of the rendered items. */\n  measureRenderedContentSize() {\n    const contentEl = this._contentWrapper.nativeElement;\n    return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n  }\n  /**\n   * Measure the total combined size of the given range. Throws if the range includes items that are\n   * not rendered.\n   */\n  measureRangeSize(range) {\n    if (!this._forOf) {\n      return 0;\n    }\n    return this._forOf.measureRangeSize(range, this.orientation);\n  }\n  /** Update the viewport dimensions and re-render. */\n  checkViewportSize() {\n    // TODO: Cleanup later when add logic for handling content resize\n    this._measureViewportSize();\n    this._scrollStrategy.onDataLengthChanged();\n  }\n  /** Measure the viewport size. */\n  _measureViewportSize() {\n    this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n  }\n  /** Queue up change detection to run. */\n  _markChangeDetectionNeeded(runAfter) {\n    if (runAfter) {\n      this._runAfterChangeDetection.push(runAfter);\n    }\n    if (untracked(this._changeDetectionNeeded)) {\n      return;\n    }\n    this.ngZone.runOutsideAngular(() => {\n      Promise.resolve().then(() => {\n        this.ngZone.run(() => {\n          this._changeDetectionNeeded.set(true);\n        });\n      });\n    });\n  }\n  /** Run change detection. */\n  _doChangeDetection() {\n    if (this._isDestroyed) {\n      return;\n    }\n    this.ngZone.run(() => {\n      // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n      // from the root, since the repeated items are content projected in. Calling `detectChanges`\n      // instead does not properly check the projected content.\n      this._changeDetectorRef.markForCheck();\n      // Apply the content transform. The transform can't be set via an Angular binding because\n      // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n      // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n      // the `Number` function first to coerce it to a numeric value.\n      this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n      afterNextRender(() => {\n        this._changeDetectionNeeded.set(false);\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n          fn();\n        }\n      }, {\n        injector: this._injector\n      });\n    });\n  }\n  /** Calculates the `style.width` and `style.height` for the spacer element. */\n  _calculateSpacerSize() {\n    this._totalContentHeight.set(this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`);\n    this._totalContentWidth.set(this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '');\n  }\n  static …µfac = function CdkVirtualScrollViewport_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollViewport)();\n  };\n  static …µcmp = /* @__PURE__ */i0.…µ…µdefineComponent({\n    type: CdkVirtualScrollViewport,\n    selectors: [[\"cdk-virtual-scroll-viewport\"]],\n    viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.…µ…µqueryRefresh(_t = i0.…µ…µloadQuery()) && (ctx._contentWrapper = _t.first);\n      }\n    },\n    hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n    hostVars: 4,\n    hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.…µ…µclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n      }\n    },\n    inputs: {\n      orientation: \"orientation\",\n      appendOnly: [2, \"appendOnly\", \"appendOnly\", booleanAttribute]\n    },\n    outputs: {\n      scrolledIndexChange: \"scrolledIndexChange\"\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CdkScrollable,\n      useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n      deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n    }]), i0.…µ…µInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 4,\n    consts: [[\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-content-wrapper\"], [1, \"cdk-virtual-scroll-spacer\"]],\n    template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µprojectionDef();\n        i0.…µ…µdomElementStart(0, \"div\", 1, 0);\n        i0.…µ…µprojection(2);\n        i0.…µ…µdomElementEnd();\n        i0.…µ…µdomElement(3, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(3);\n        i0.…µ…µstyleProp(\"width\", ctx._totalContentWidth())(\"height\", ctx._totalContentHeight());\n      }\n    },\n    styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkVirtualScrollViewport, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport',\n      host: {\n        'class': 'cdk-virtual-scroll-viewport',\n        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: CdkScrollable,\n        useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n        deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n      }],\n      template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\",\n      styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"]\n    }]\n  }], () => [], {\n    orientation: [{\n      type: Input\n    }],\n    appendOnly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrolledIndexChange: [{\n      type: Output\n    }],\n    _contentWrapper: [{\n      type: ViewChild,\n      args: ['contentWrapper', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n  _viewContainerRef = inject(ViewContainerRef);\n  _template = inject(TemplateRef);\n  _differs = inject(IterableDiffers);\n  _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n  _viewport = inject(CdkVirtualScrollViewport, {\n    skipSelf: true\n  });\n  /** Emits when the rendered view of the data changes. */\n  viewChange = new Subject();\n  /** Subject that emits when a new DataSource instance is given. */\n  _dataSourceChanges = new Subject();\n  /** The DataSource to display. */\n  get cdkVirtualForOf() {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value) {\n    this._cdkVirtualForOf = value;\n    if (isDataSource(value)) {\n      this._dataSourceChanges.next(value);\n    } else {\n      // If value is an an NgIterable, convert it to an array.\n      this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n    }\n  }\n  _cdkVirtualForOf;\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  get cdkVirtualForTrackBy() {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n  }\n  _cdkVirtualForTrackBy;\n  /** The template used to stamp out new elements. */\n  set cdkVirtualForTemplate(value) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  get cdkVirtualForTemplateCacheSize() {\n    return this._viewRepeater.viewCacheSize;\n  }\n  set cdkVirtualForTemplateCacheSize(size) {\n    this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n  }\n  /** Emits whenever the data in the current DataSource changes. */\n  dataStream = this._dataSourceChanges.pipe(\n  // Start off with null `DataSource`.\n  startWith(null),\n  // Bundle up the previous and current data sources so we can work with both.\n  pairwise(),\n  // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n  // new one, passing back a stream of data changes which we run through `switchMap` to give\n  // us a data stream that emits the latest data from whatever the current `DataSource` is.\n  switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n  // Replay the last emitted data when someone subscribes.\n  shareReplay(1));\n  /** The differ used to calculate changes to the data. */\n  _differ = null;\n  /** The most recent data emitted from the DataSource. */\n  _data;\n  /** The currently rendered items. */\n  _renderedItems;\n  /** The currently rendered range of indices. */\n  _renderedRange;\n  /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n  _needsUpdate = false;\n  _destroyed = new Subject();\n  constructor() {\n    const ngZone = inject(NgZone);\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      if (this.viewChange.observers.length) {\n        ngZone.run(() => this.viewChange.next(this._renderedRange));\n      }\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range, orientation) {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n    // Loop over all the views, find the first and land node and compute the size by subtracting\n    // the top of the first node from the bottom of the last one.\n    let firstNode;\n    let lastNode;\n    // Find the first node by starting from the beginning and going forwards.\n    for (let i = 0; i < rangeLen; i++) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        firstNode = lastNode = view.rootNodes[0];\n        break;\n      }\n    }\n    // Find the last node by starting from the end and going backwards.\n    for (let i = rangeLen - 1; i > -1; i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        lastNode = view.rootNodes[view.rootNodes.length - 1];\n        break;\n      }\n    }\n    return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n  }\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n  ngOnDestroy() {\n    this._viewport.detach();\n    this._dataSourceChanges.next(undefined);\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._viewRepeater.detach();\n  }\n  /** React to scroll state changes in the viewport. */\n  _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      // Use a wrapper function for the `trackBy` so any new values are\n      // picked up automatically without having to recreate the differ.\n      this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n        return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n      });\n    }\n    this._needsUpdate = true;\n  }\n  /** Swap out one `DataSource` for another. */\n  _changeDataSource(oldDs, newDs) {\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : of();\n  }\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n  /** Apply changes to the DOM. */\n  _applyChanges(changes) {\n    this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange(record => {\n      const view = this._viewContainerRef.get(record.currentIndex);\n      view.context.$implicit = record.item;\n    });\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  _updateComputedContextProperties(context) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n  _getEmbeddedViewArgs(record, index) {\n    // Note that it's important that we insert the item directly at the proper index,\n    // rather than inserting it and the moving it in place, because if there's a directive\n    // on the same node that injects the `ViewContainerRef`, Angular will insert another\n    // comment node which can throw off the move when it's being repeated for all items.\n    return {\n      templateRef: this._template,\n      context: {\n        $implicit: record.item,\n        // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n        // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n        cdkVirtualForOf: this._cdkVirtualForOf,\n        index: -1,\n        count: -1,\n        first: false,\n        last: false,\n        odd: false,\n        even: false\n      },\n      index\n    };\n  }\n  static ngTemplateContextGuard(directive, context) {\n    return true;\n  }\n  static …µfac = function CdkVirtualForOf_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualForOf)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkVirtualForOf,\n    selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n    inputs: {\n      cdkVirtualForOf: \"cdkVirtualForOf\",\n      cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n      cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n      cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _RecycleViewRepeaterStrategy\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkVirtualForOf, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualFor][cdkVirtualForOf]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], () => [], {\n    cdkVirtualForOf: [{\n      type: Input\n    }],\n    cdkVirtualForTrackBy: [{\n      type: Input\n    }],\n    cdkVirtualForTemplate: [{\n      type: Input\n    }],\n    cdkVirtualForTemplateCacheSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n  constructor() {\n    super();\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n  }\n  static …µfac = function CdkVirtualScrollableElement_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollableElement)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkVirtualScrollableElement,\n    selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n    hostAttrs: [1, \"cdk-virtual-scrollable\"],\n    features: [i0.…µ…µProvidersFeature([{\n      provide: VIRTUAL_SCROLLABLE,\n      useExisting: CdkVirtualScrollableElement\n    }]), i0.…µ…µInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkVirtualScrollableElement, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualScrollingElement]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableElement\n      }],\n      host: {\n        'class': 'cdk-virtual-scrollable'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n  constructor() {\n    super();\n    const document = inject(DOCUMENT);\n    this.elementRef = new ElementRef(document.documentElement);\n    this._scrollElement = document;\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  static …µfac = function CdkVirtualScrollableWindow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollableWindow)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkVirtualScrollableWindow,\n    selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n    features: [i0.…µ…µProvidersFeature([{\n      provide: VIRTUAL_SCROLLABLE,\n      useExisting: CdkVirtualScrollableWindow\n    }]), i0.…µ…µInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkVirtualScrollableWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableWindow\n      }]\n    }]\n  }], () => [], null);\n})();\nclass CdkScrollableModule {\n  static …µfac = function CdkScrollableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkScrollableModule)();\n  };\n  static …µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n    type: CdkScrollableModule,\n    imports: [CdkScrollable],\n    exports: [CdkScrollable]\n  });\n  static …µinj = /* @__PURE__ */i0.…µ…µdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkScrollableModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkScrollable],\n      imports: [CdkScrollable]\n    }]\n  }], null, null);\n})();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n  static …µfac = function ScrollingModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ScrollingModule)();\n  };\n  static …µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n    type: ScrollingModule,\n    imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollableWindow, CdkVirtualScrollableElement],\n    exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollableWindow, CdkVirtualScrollableElement]\n  });\n  static …µinj = /* @__PURE__ */i0.…µ…µdefineInjector({\n    imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(ScrollingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollableWindow, CdkVirtualScrollableElement],\n      exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollableWindow, CdkVirtualScrollableElement]\n    }]\n  }], null, null);\n})();\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n  _appId = inject(APP_ID);\n  /**\n   * Generates a unique ID with a specific prefix.\n   * @param prefix Prefix to add to the ID.\n   */\n  getId(prefix) {\n    // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n    // Angular app on them, we can reduce the amount of breakages by not adding it.\n    if (this._appId !== 'ng') {\n      prefix += this._appId;\n    }\n    if (!counters.hasOwnProperty(prefix)) {\n      counters[prefix] = 0;\n    }\n    return `${prefix}${counters[prefix]++}`;\n  }\n  static …µfac = function _IdGenerator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _IdGenerator)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: _IdGenerator,\n    factory: _IdGenerator.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(_IdGenerator, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nexport { _IdGenerator };\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray };\n\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, DOCUMENT, RendererFactory2, Injectable, InjectionToken, ElementRef, booleanAttribute, Directive, Input, ViewContainerRef, ChangeDetectorRef, EventEmitter, Injector, afterNextRender, numberAttribute, Output, TemplateRef, NgModule } from '@angular/core';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { _getEventTarget, _getShadowRoot } from './shadow-dom.mjs';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from './fake-event-detection.mjs';\nimport { coerceElement, coerceNumberProperty } from './element.mjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport { _CdkPrivateStyleLoader } from './style-loader.mjs';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from './scrolling.mjs';\nexport { CdkScrollable as …µ…µCdkScrollable } from './scrolling.mjs';\nimport { Directionality } from './directionality.mjs';\nimport { _IdGenerator } from './id-generator.mjs';\nimport { coerceArray } from './array.mjs';\nimport './platform2.mjs';\nimport '@angular/common';\nimport './scrolling2.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy.mjs';\nimport './data-source.mjs';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Checks if the child element is overflowing from its parent.\n * @param parentRect - The bounding rect of the parent element.\n * @param childRect - The bounding rect of the child element.\n */\nfunction isOverflowingParent(parentRect, childRect) {\n  // check for horizontal overflow (left and right)\n  const isLeftOverflowing = childRect.left < parentRect.left;\n  const isRightOverflowing = childRect.left + childRect.width > parentRect.right;\n  // check for vertical overflow (top and bottom)\n  const isTopOverflowing = childRect.top < parentRect.top;\n  const isBottomOverflowing = childRect.top + childRect.height > parentRect.bottom;\n  return isLeftOverflowing || isRightOverflowing || isTopOverflowing || isBottomOverflowing;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  _document;\n  /** Cached positions of the scrollable parent elements. */\n  positions = new Map();\n  constructor(_document) {\n    this._document = _document;\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  _document;\n  _rootElement;\n  _direction;\n  _initialDomRect;\n  _previewTemplate;\n  _previewClass;\n  _pickupPositionOnPage;\n  _initialTransform;\n  _zIndex;\n  _renderer;\n  /** Reference to the view of the preview element. */\n  _previewEmbeddedView;\n  /** Reference to the preview element. */\n  _preview;\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex, _renderer) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n    this._renderer = _renderer;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    return this._renderer.listen(this._preview, name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = {\n  passive: false\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = {\n  passive: false,\n  capture: true\n};\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Class applied to the drag placeholder. */\nconst PLACEHOLDER_CLASS = 'cdk-drag-placeholder';\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  _config;\n  _document;\n  _ngZone;\n  _viewportRuler;\n  _dragDropRegistry;\n  _renderer;\n  _rootElementCleanups;\n  _cleanupShadowRootSelectStart;\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  _preview;\n  /** Container into which to insert the preview. */\n  _previewContainer;\n  /** Reference to the view of the placeholder element. */\n  _placeholderRef;\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  _placeholder;\n  /** Coordinates within the element at which the user picked up the element. */\n  _pickupPositionInElement;\n  /** Coordinates on the page at which the user picked up the element. */\n  _pickupPositionOnPage;\n  /**\n   * Marker node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  _marker;\n  /**\n   * Element indicating the position from which the item was picked up initially.\n   */\n  _anchor = null;\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  _passiveTransform = {\n    x: 0,\n    y: 0\n  };\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  _activeTransform = {\n    x: 0,\n    y: 0\n  };\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  _initialTransform;\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  _hasStartedDragging = signal(false, ...(ngDevMode ? [{\n    debugName: \"_hasStartedDragging\"\n  }] : []));\n  /** Whether the element has moved since the user started dragging it. */\n  _hasMoved;\n  /** Drop container in which the DragRef resided when dragging began. */\n  _initialContainer;\n  /** Index at which the item started in its initial container. */\n  _initialIndex;\n  /** Cached positions of scrollable parent elements. */\n  _parentPositions;\n  /** Emits when the item is being moved. */\n  _moveEvents = new Subject();\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  _pointerDirectionDelta;\n  /** Pointer position at which the last change in the delta occurred. */\n  _pointerPositionAtLastDirectionChange;\n  /** Position of the pointer at the last pointer event. */\n  _lastKnownPointerPosition;\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  _rootElement;\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  _ownerSVGElement;\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  _rootElementTapHighlight;\n  /** Subscription to pointer movement events. */\n  _pointerMoveSubscription = Subscription.EMPTY;\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  _pointerUpSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being scrolled. */\n  _scrollSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being resized. */\n  _resizeSubscription = Subscription.EMPTY;\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  _lastTouchEventTime;\n  /** Time at which the last dragging sequence was started. */\n  _dragStartTime;\n  /** Cached reference to the boundary element. */\n  _boundaryElement = null;\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  _nativeInteractionsEnabled = true;\n  /** Client rect of the root element when the dragging sequence has started. */\n  _initialDomRect;\n  /** Cached dimensions of the preview element. Should be read via `_getPreviewRect`. */\n  _previewRect;\n  /** Cached dimensions of the boundary element. */\n  _boundaryRect;\n  /** Element that will be used as a template to create the draggable item's preview. */\n  _previewTemplate;\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  _placeholderTemplate;\n  /** Elements that can be used to drag the draggable item. */\n  _handles = [];\n  /** Registered handles that are currently disabled. */\n  _disabledHandles = new Set();\n  /** Droppable container that the draggable is a part of. */\n  _dropContainer;\n  /** Layout direction of the item. */\n  _direction = 'ltr';\n  /** Ref that the current drag item is nested in. */\n  _parentDragRef;\n  /**\n   * Cached shadow root that the element is placed in. `null` means that the element isn't in\n   * the shadow DOM and `undefined` means that it hasn't been resolved yet. Should be read via\n   * `_getShadowRoot`, not directly.\n   */\n  _cachedShadowRoot;\n  /** Axis along which dragging is locked. */\n  lockAxis = null;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay = 0;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  _disabled = false;\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = new Subject();\n  /** Emits when the user starts dragging the item. */\n  started = new Subject();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new Subject();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new Subject();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new Subject();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new Subject();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new Subject();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = this._moveEvents;\n  /** Arbitrary data that can be attached to the drag item. */\n  data;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry, _renderer) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    this._renderer = _renderer;\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      this._removeRootElementListeners();\n      const renderer = this._renderer;\n      this._rootElementCleanups = this._ngZone.runOutsideAngular(() => [renderer.listen(element, 'mousedown', this._pointerDown, activeEventListenerOptions), renderer.listen(element, 'touchstart', this._pointerDown, passiveEventListenerOptions), renderer.listen(element, 'dragstart', this._nativeDragStart, activeEventListenerOptions)]);\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners();\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._marker?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._marker = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Resets drag item to end of boundary element. */\n  resetToBoundary() {\n    if (\n    // can be null if the drag item was never dragged.\n    this._boundaryElement && this._rootElement &&\n    // check if we are overflowing off our boundary element\n    isOverflowingParent(this._boundaryElement.getBoundingClientRect(), this._rootElement.getBoundingClientRect())) {\n      const parentRect = this._boundaryElement.getBoundingClientRect();\n      const childRect = this._rootElement.getBoundingClientRect();\n      let offsetX = 0;\n      let offsetY = 0;\n      // check if we are overflowing from left or right\n      if (childRect.left < parentRect.left) {\n        offsetX = parentRect.left - childRect.left;\n      } else if (childRect.right > parentRect.right) {\n        offsetX = parentRect.right - childRect.right;\n      }\n      // check if we are overflowing from top or bottom\n      if (childRect.top < parentRect.top) {\n        offsetY = parentRect.top - childRect.top;\n      } else if (childRect.bottom > parentRect.bottom) {\n        offsetY = parentRect.bottom - childRect.bottom;\n      }\n      const currentLeft = this._activeTransform.x;\n      const currentTop = this._activeTransform.y;\n      let x = currentLeft + offsetX,\n        y = currentTop + offsetY;\n      this._rootElement.style.transform = getTransform(x, y);\n      this._activeTransform = {\n        x,\n        y\n      };\n      this._passiveTransform = {\n        x,\n        y\n      };\n    }\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._cleanupShadowRootSelectStart?.();\n    this._cleanupShadowRootSelectStart = undefined;\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._anchor?.remove();\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._anchor = this._placeholderRef = null;\n  }\n  /** Handler for the `mousedown`/`touchstart` events. */\n  _pointerDown = event => {\n    this.beforeStarted.next();\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  };\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  _pointerMove = event => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    if (!this._hasStartedDragging()) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        const container = this._dropContainer;\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!container || !container.isDragging() && !container.isReceiving()) {\n          // Prevent the default action as soon as the dragging sequence is considered as\n          // \"started\" since waiting for the next event can allow the device to begin scrolling.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._hasStartedDragging.set(true);\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n      return;\n    }\n    // We prevent the default action down here so that we know that dragging has started. This is\n    // important for touch devices where doing this too early can unnecessarily block scrolling,\n    // if there's a dragging delay.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      // If there's a position constraint function, we want the element's top/left to be at the\n      // specific position on the page. Use the initial position as a reference if that's the case.\n      const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n      const activeTransform = this._activeTransform;\n      activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n      activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n    }\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  };\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  _pointerUp = event => {\n    this._endDragSequence(event);\n  };\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupShadowRootSelectStart = this._renderer.listen(shadowRoot, 'selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const marker = this._marker = this._marker || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-marker' : '');\n      // Insert a marker node so that we can restore the element's position in the DOM.\n      parent.insertBefore(marker, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000, this._renderer);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._marker.parentNode.replaceChild(this._rootElement, this._marker);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        const exitIndex = this._dropContainer.getItemIndex(this);\n        const nextItemElement = this._dropContainer.getItemAtIndex(exitIndex + 1)?.getVisibleElement() || null;\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        this._conditionallyInsertAnchor(newContainer, this._dropContainer, nextItemElement);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y,\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer === this._initialContainer && newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            cleanupListener();\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        const cleanupListener = this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add(PLACEHOLDER_CLASS);\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners() {\n    this._rootElementCleanups?.forEach(cleanup => cleanup());\n    this._rootElementCleanups = undefined;\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Handles a native `dragstart` event. */\n  _nativeDragStart = event => {\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        event.preventDefault();\n      }\n    } else if (!this.disabled) {\n      // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n      // but some cases like dragging of links can slip through (see #24403).\n      event.preventDefault();\n    }\n  };\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n  /** Inserts the anchor element, if it's valid. */\n  _conditionallyInsertAnchor(newContainer, exitContainer, nextItemElement) {\n    // Remove the anchor when returning to the initial container.\n    if (newContainer === this._initialContainer) {\n      this._anchor?.remove();\n      this._anchor = null;\n    } else if (exitContainer === this._initialContainer && exitContainer.hasAnchor) {\n      // Insert the anchor when leaving the initial container.\n      const anchor = this._anchor ??= deepCloneNode(this._placeholder);\n      anchor.classList.remove(PLACEHOLDER_CLASS);\n      anchor.classList.add('cdk-drag-anchor');\n      // Clear the transform since the single-axis strategy uses transforms to sort the items.\n      anchor.style.transform = '';\n      // When the item leaves the initial container, the container's DOM will be restored to\n      // its original state, except for the dragged item which is removed. Insert the anchor in\n      // the position from which the item left so that the list looks consistent.\n      if (nextItemElement) {\n        nextItemElement.before(anchor);\n      } else {\n        coerceElement(exitContainer.element).appendChild(anchor);\n      }\n    }\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Cache of the dimensions of all the items inside the container. */\n  _itemPositions = [];\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeDraggables;\n  /** Direction in which the list is oriented. */\n  orientation = 'vertical';\n  /** Layout direction of the drop list. */\n  direction;\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    delta: 0,\n    overlaps: false\n  };\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._getVisualItemPositions().findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Gets the item at a specific index. */\n  getItemAtIndex(index) {\n    return this._getVisualItemPositions()[index]?.drag || null;\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  _getVisualItemPositions() {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    return this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  _document;\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Lazily-resolved root node containing the list. Use `_getRootNode` to read this. */\n  _rootNode;\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeItems;\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    deltaX: 0,\n    deltaY: 0,\n    overlaps: false\n  };\n  /**\n   * Keeps track of the relationship between a node and its next sibling. This information\n   * is used to restore the DOM to the order it was in before dragging started.\n   */\n  _relatedNodes = [];\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    // Remove the item from current set of items first so that it doesn't throw off the indexes\n    // further down in this method. See https://github.com/angular/components/issues/31505\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Gets the item at a specific index. */\n  getItemAtIndex(index) {\n    return this._activeItems[index] || null;\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  _dragDropRegistry;\n  _ngZone;\n  _viewportRuler;\n  /** Element that the drop list is attached to. */\n  element;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled = false;\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled = false;\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis = null;\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled = false;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep = 2;\n  /**\n   * Whether the items in the list should leave an anchor node when leaving the initial container.\n   */\n  hasAnchor = false;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Function that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Emits right before dragging has started. */\n  beforeStarted = new Subject();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new Subject();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new Subject();\n  /** Emits when the user drops an item inside the container. */\n  dropped = new Subject();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new Subject();\n  /** Emits when a dragging sequence is started in a list connected to the current one. */\n  receivingStarted = new Subject();\n  /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n  receivingStopped = new Subject();\n  /** Arbitrary data that can be attached to the drop list. */\n  data;\n  /** Element that is the direct parent of the drag items. */\n  _container;\n  /** Whether an item in the list is being dragged. */\n  _isDragging = false;\n  /** Keeps track of the positions of any parent scrollable elements. */\n  _parentPositions;\n  /** Strategy being used to sort items within the list. */\n  _sortStrategy;\n  /** Cached `DOMRect` of the drop list. */\n  _domRect;\n  /** Draggable items in the container. */\n  _draggables = [];\n  /** Drop lists that are connected to the current one. */\n  _siblings = [];\n  /** Connected siblings that currently have a dragged item. */\n  _activeSiblings = new Set();\n  /** Subscription to the window being scrolled. */\n  _viewportScrollSubscription = Subscription.EMPTY;\n  /** Vertical direction in which the list is currently scrolling. */\n  _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  /** Horizontal direction in which the list is currently scrolling. */\n  _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  /** Node that is being auto-scrolled. */\n  _scrollNode;\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  _stopScrollTimers = new Subject();\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  _cachedShadowRoot = null;\n  /** Reference to the document. */\n  _document;\n  /** Elements that can be scrolled while the user is dragging. */\n  _scrollableElements = [];\n  /** Initial value for the element's `scroll-snap-type` style. */\n  _initialScrollSnap;\n  /** Direction of the list's layout. */\n  _direction = 'ltr';\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Gets the item at a specific index.\n   * @param index Index at which to retrieve the item.\n   */\n  getItemAtIndex(index) {\n    return this._isDragging ? this._sortStrategy.getItemAtIndex(index) : this._draggables[index] || null;\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /** Starts the interval that'll auto-scroll the element. */\n  _startScrollInterval = () => {\n    this._stopScrolling();\n    interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n      const node = this._scrollNode;\n      const scrollStep = this.autoScrollStep;\n      if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n        node.scrollBy(0, -scrollStep);\n      } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n        node.scrollBy(0, scrollStep);\n      }\n      if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n        node.scrollBy(-scrollStep, 0);\n      } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n        node.scrollBy(scrollStep, 0);\n      }\n    });\n  };\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind a capturing event. */\nconst capturingEventOptions = {\n  capture: true\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n  static …µfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _ResetsLoader)();\n  };\n  static …µcmp = /* @__PURE__ */i0.…µ…µdefineComponent({\n    type: _ResetsLoader,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n    decls: 0,\n    vars: 0,\n    template: function _ResetsLoader_Template(rf, ctx) {},\n    styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(_ResetsLoader, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'cdk-drag-resets-container': ''\n      },\n      styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nclass DragDropRegistry {\n  _ngZone = inject(NgZone);\n  _document = inject(DOCUMENT);\n  _styleLoader = inject(_CdkPrivateStyleLoader);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupDocumentTouchmove;\n  _scroll = new Subject();\n  /** Registered drop container instances. */\n  _dropInstances = new Set();\n  /** Registered drag item instances. */\n  _dragInstances = new Set();\n  /** Drag item instances that are currently being dragged. */\n  _activeDragInstances = signal([], ...(ngDevMode ? [{\n    debugName: \"_activeDragInstances\"\n  }] : []));\n  /** Keeps track of the event listeners that we've bound to the `document`. */\n  _globalListeners;\n  /**\n   * Predicate function to check if an item is being dragged.  Moved out into a property,\n   * because it'll be called a lot and we don't want to create a new function every time.\n   */\n  _draggingPredicate = item => item.isDragging();\n  /**\n   * Map tracking DOM nodes and their corresponding drag directives. Note that this is different\n   * from looking through the `_dragInstances` and getting their root node, because the root node\n   * isn't necessarily the node that the directive is set on.\n   */\n  _domNodesToDirectives = null;\n  /**\n   * Emits the `touchmove` or `mousemove` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerMove = new Subject();\n  /**\n   * Emits the `touchend` or `mouseup` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerUp = new Subject();\n  constructor() {}\n  /** Adds a drop container to the registry. */\n  registerDropContainer(drop) {\n    if (!this._dropInstances.has(drop)) {\n      this._dropInstances.add(drop);\n    }\n  }\n  /** Adds a drag item instance to the registry. */\n  registerDragItem(drag) {\n    this._dragInstances.add(drag);\n    // The `touchmove` event gets bound once, ahead of time, because WebKit\n    // won't preventDefault on a dynamically-added `touchmove` listener.\n    // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n    if (this._dragInstances.size === 1) {\n      this._ngZone.runOutsideAngular(() => {\n        // The event handler has to be explicitly active,\n        // because newer browsers make it passive by default.\n        this._cleanupDocumentTouchmove?.();\n        this._cleanupDocumentTouchmove = this._renderer.listen(this._document, 'touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      });\n    }\n  }\n  /** Removes a drop container from the registry. */\n  removeDropContainer(drop) {\n    this._dropInstances.delete(drop);\n  }\n  /** Removes a drag item instance from the registry. */\n  removeDragItem(drag) {\n    this._dragInstances.delete(drag);\n    this.stopDragging(drag);\n    if (this._dragInstances.size === 0) {\n      this._cleanupDocumentTouchmove?.();\n    }\n  }\n  /**\n   * Starts the dragging sequence for a drag instance.\n   * @param drag Drag instance which is being dragged.\n   * @param event Event that initiated the dragging.\n   */\n  startDragging(drag, event) {\n    // Do not process the same drag twice to avoid memory leaks and redundant listeners\n    if (this._activeDragInstances().indexOf(drag) > -1) {\n      return;\n    }\n    this._styleLoader.load(_ResetsLoader);\n    this._activeDragInstances.update(instances => [...instances, drag]);\n    if (this._activeDragInstances().length === 1) {\n      // We explicitly bind __active__ listeners here, because newer browsers will default to\n      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n      // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n      const isTouchEvent = event.type.startsWith('touch');\n      const endEventHandler = e => this.pointerUp.next(e);\n      const toBind = [\n      // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n      // the document. See https://github.com/angular/components/issues/17144.\n      ['scroll', e => this._scroll.next(e), capturingEventOptions],\n      // Preventing the default action on `mousemove` isn't enough to disable text selection\n      // on Safari so we need to prevent the selection event as well. Alternatively this can\n      // be done by setting `user-select: none` on the `body`, however it has causes a style\n      // recalculation which can be expensive on pages with a lot of elements.\n      ['selectstart', this._preventDefaultWhileDragging, activeCapturingEventOptions]];\n      if (isTouchEvent) {\n        toBind.push(['touchend', endEventHandler, capturingEventOptions], ['touchcancel', endEventHandler, capturingEventOptions]);\n      } else {\n        toBind.push(['mouseup', endEventHandler, capturingEventOptions]);\n      }\n      // We don't have to bind a move event for touch drag sequences, because\n      // we already have a persistent global one bound from `registerDragItem`.\n      if (!isTouchEvent) {\n        toBind.push(['mousemove', e => this.pointerMove.next(e), activeCapturingEventOptions]);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._globalListeners = toBind.map(([name, handler, options]) => this._renderer.listen(this._document, name, handler, options));\n      });\n    }\n  }\n  /** Stops dragging a drag item instance. */\n  stopDragging(drag) {\n    this._activeDragInstances.update(instances => {\n      const index = instances.indexOf(drag);\n      if (index > -1) {\n        instances.splice(index, 1);\n        return [...instances];\n      }\n      return instances;\n    });\n    if (this._activeDragInstances().length === 0) {\n      this._clearGlobalListeners();\n    }\n  }\n  /** Gets whether a drag item instance is currently being dragged. */\n  isDragging(drag) {\n    return this._activeDragInstances().indexOf(drag) > -1;\n  }\n  /**\n   * Gets a stream that will emit when any element on the page is scrolled while an item is being\n   * dragged.\n   * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n   *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n   *   be used to include an additional top-level listener at the shadow root level.\n   */\n  scrolled(shadowRoot) {\n    const streams = [this._scroll];\n    if (shadowRoot && shadowRoot !== this._document) {\n      // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n      // because we want to guarantee that the event is bound outside of the `NgZone`. With\n      // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n      streams.push(new Observable(observer => {\n        return this._ngZone.runOutsideAngular(() => {\n          const cleanup = this._renderer.listen(shadowRoot, 'scroll', event => {\n            if (this._activeDragInstances().length) {\n              observer.next(event);\n            }\n          }, capturingEventOptions);\n          return () => {\n            cleanup();\n          };\n        });\n      }));\n    }\n    return merge(...streams);\n  }\n  /**\n   * Tracks the DOM node which has a draggable directive.\n   * @param node Node to track.\n   * @param dragRef Drag directive set on the node.\n   */\n  registerDirectiveNode(node, dragRef) {\n    this._domNodesToDirectives ??= new WeakMap();\n    this._domNodesToDirectives.set(node, dragRef);\n  }\n  /**\n   * Stops tracking a draggable directive node.\n   * @param node Node to stop tracking.\n   */\n  removeDirectiveNode(node) {\n    this._domNodesToDirectives?.delete(node);\n  }\n  /**\n   * Gets the drag directive corresponding to a specific DOM node, if any.\n   * @param node Node for which to do the lookup.\n   */\n  getDragDirectiveForNode(node) {\n    return this._domNodesToDirectives?.get(node) || null;\n  }\n  ngOnDestroy() {\n    this._dragInstances.forEach(instance => this.removeDragItem(instance));\n    this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n    this._domNodesToDirectives = null;\n    this._clearGlobalListeners();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n  /**\n   * Event listener that will prevent the default browser action while the user is dragging.\n   * @param event Event whose default action should be prevented.\n   */\n  _preventDefaultWhileDragging = event => {\n    if (this._activeDragInstances().length > 0) {\n      event.preventDefault();\n    }\n  };\n  /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n  _persistentTouchmoveListener = event => {\n    if (this._activeDragInstances().length > 0) {\n      // Note that we only want to prevent the default action after dragging has actually started.\n      // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n      // but it could be pushed back if the user has set up a drag delay or threshold.\n      if (this._activeDragInstances().some(this._draggingPredicate)) {\n        event.preventDefault();\n      }\n      this.pointerMove.next(event);\n    }\n  };\n  /** Clears out the global event listeners from the `document`. */\n  _clearGlobalListeners() {\n    this._globalListeners?.forEach(cleanup => cleanup());\n    this._globalListeners = undefined;\n  }\n  static …µfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropRegistry)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: DragDropRegistry,\n    factory: DragDropRegistry.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(DragDropRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n  _document = inject(DOCUMENT);\n  _ngZone = inject(NgZone);\n  _viewportRuler = inject(ViewportRuler);\n  _dragDropRegistry = inject(DragDropRegistry);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  constructor() {}\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag(element, config = DEFAULT_CONFIG) {\n    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry, this._renderer);\n  }\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList(element) {\n    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n  }\n  static …µfac = function DragDrop_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDrop)();\n  };\n  static …µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n    token: DragDrop,\n    factory: DragDrop.…µfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(DragDrop, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n  element = inject(ElementRef);\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  /** Emits when the state of the handle has changed. */\n  _stateChanges = new Subject();\n  /** Whether starting to drag through this handle is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._stateChanges.next(this);\n  }\n  _disabled = false;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDragHandle');\n    }\n    this._parentDrag?._addHandle(this);\n  }\n  ngAfterViewInit() {\n    if (!this._parentDrag) {\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const ref = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (ref) {\n          this._parentDrag = ref;\n          ref._addHandle(this);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._parentDrag?._removeHandle(this);\n    this._stateChanges.complete();\n  }\n  static …µfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragHandle)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDragHandle,\n    selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n    hostAttrs: [1, \"cdk-drag-handle\"],\n    inputs: {\n      disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CDK_DRAG_HANDLE,\n      useExisting: CdkDragHandle\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDragHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDragHandle]',\n      host: {\n        'class': 'cdk-drag-handle'\n      },\n      providers: [{\n        provide: CDK_DRAG_HANDLE,\n        useExisting: CdkDragHandle\n      }]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragHandleDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n  element = inject(ElementRef);\n  dropContainer = inject(CDK_DROP_LIST, {\n    optional: true,\n    skipSelf: true\n  });\n  _ngZone = inject(NgZone);\n  _viewContainerRef = inject(ViewContainerRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _selfHandle = inject(CDK_DRAG_HANDLE, {\n    optional: true,\n    self: true\n  });\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  _destroyed = new Subject();\n  _handles = new BehaviorSubject([]);\n  _previewTemplate;\n  _placeholderTemplate;\n  /** Reference to the underlying drag instance. */\n  _dragRef;\n  /** Arbitrary data to attach to this drag instance. */\n  data;\n  /** Locks the position of the dragged element along the specified axis. */\n  lockAxis = null;\n  /**\n   * Selector that will be used to determine the root draggable element, starting from\n   * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n   * when trying to enable dragging on an element that you might not have access to.\n   */\n  rootElementSelector;\n  /**\n   * Node or selector that will be used to determine the element to which the draggable's\n   * position will be constrained. If a string is passed in, it'll be used as a selector that\n   * will be matched starting from the element's parent and going up the DOM until a match\n   * has been found.\n   */\n  boundaryElement;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay;\n  /**\n   * Sets the position of a `CdkDrag` that is outside of a drop container.\n   * Can be used to restore the element's position for a returning user.\n   */\n  freeDragPosition;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this.dropContainer && this.dropContainer.disabled);\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._dragRef.disabled = this._disabled;\n  }\n  _disabled;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * Configures the place into which the preview of the item will be inserted. Can be configured\n   * globally through `CDK_DROP_LIST`. Possible values:\n   * - `global` - Preview will be inserted at the bottom of the `<body>`. The advantage is that\n   * you don't have to worry about `overflow: hidden` or `z-index`, but the item won't retain\n   * its inherited styles.\n   * - `parent` - Preview will be inserted into the parent of the drag item. The advantage is that\n   * inherited styles will be preserved, but it may be clipped by `overflow: hidden` or not be\n   * visible due to `z-index`. Furthermore, the preview is going to have an effect over selectors\n   * like `:nth-child` and some flexbox configurations.\n   * - `ElementRef<HTMLElement> | HTMLElement` - Preview will be inserted into a specific element.\n   * Same advantages and disadvantages as `parent`.\n   */\n  previewContainer;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Emits when the user starts dragging the item. */\n  started = new EventEmitter();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new EventEmitter();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new EventEmitter();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new EventEmitter();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new EventEmitter();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = new Observable(observer => {\n    const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n      source: this,\n      pointerPosition: movedEvent.pointerPosition,\n      event: movedEvent.event,\n      delta: movedEvent.delta,\n      distance: movedEvent.distance\n    }))).subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n    };\n  });\n  _injector = inject(Injector);\n  constructor() {\n    const dropContainer = this.dropContainer;\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    const dragDrop = inject(DragDrop);\n    this._dragRef = dragDrop.createDrag(this.element, {\n      dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n      zIndex: config?.zIndex\n    });\n    this._dragRef.data = this;\n    this._dragDropRegistry.registerDirectiveNode(this.element.nativeElement, this);\n    if (config) {\n      this._assignDefaults(config);\n    }\n    // Note that usually the container is assigned when the drop list is picks up the item, but in\n    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n    // where there are no items on the first change detection pass, but the items get picked up as\n    // soon as the user triggers another pass by dragging. This is a problem, because the item would\n    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n    // is too late since the two modes save different kinds of information. We work around it by\n    // assigning the drop container both from here and the list.\n    if (dropContainer) {\n      dropContainer.addItem(this);\n      // The drop container reads this so we need to sync it here.\n      dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._dragRef.scale = this.scale;\n      });\n    }\n    this._syncInputs(this._dragRef);\n    this._handleEvents(this._dragRef);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._dragRef.getPlaceholderElement();\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._dragRef.getRootElement();\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._dragRef.reset();\n  }\n  /** Resets drag item to end of boundary element. */\n  resetToBoundary() {\n    this._dragRef.resetToBoundary();\n  }\n  /**\n   * Gets the pixel coordinates of the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    return this._dragRef.getFreeDragPosition();\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._dragRef.setFreeDragPosition(value);\n  }\n  ngAfterViewInit() {\n    // We need to wait until after render, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position, and then they get transferred to the portal.\n    afterNextRender(() => {\n      this._updateRootElement();\n      this._setupHandlesListener();\n      this._dragRef.scale = this.scale;\n      if (this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  ngOnChanges(changes) {\n    const rootSelectorChange = changes['rootElementSelector'];\n    const positionChange = changes['freeDragPosition'];\n    // We don't have to react to the first change since it's being\n    // handled in the `afterNextRender` queued up in the constructor.\n    if (rootSelectorChange && !rootSelectorChange.firstChange) {\n      this._updateRootElement();\n    }\n    // Scale affects the free drag position so we need to sync it up here.\n    this._dragRef.scale = this.scale;\n    // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n    // constructor.\n    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n      this._dragRef.setFreeDragPosition(this.freeDragPosition);\n    }\n  }\n  ngOnDestroy() {\n    if (this.dropContainer) {\n      this.dropContainer.removeItem(this);\n    }\n    this._dragDropRegistry.removeDirectiveNode(this.element.nativeElement);\n    // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n    this._ngZone.runOutsideAngular(() => {\n      this._handles.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._dragRef.dispose();\n    });\n  }\n  _addHandle(handle) {\n    const handles = this._handles.getValue();\n    handles.push(handle);\n    this._handles.next(handles);\n  }\n  _removeHandle(handle) {\n    const handles = this._handles.getValue();\n    const index = handles.indexOf(handle);\n    if (index > -1) {\n      handles.splice(index, 1);\n      this._handles.next(handles);\n    }\n  }\n  _setPreviewTemplate(preview) {\n    this._previewTemplate = preview;\n  }\n  _resetPreviewTemplate(preview) {\n    if (preview === this._previewTemplate) {\n      this._previewTemplate = null;\n    }\n  }\n  _setPlaceholderTemplate(placeholder) {\n    this._placeholderTemplate = placeholder;\n  }\n  _resetPlaceholderTemplate(placeholder) {\n    if (placeholder === this._placeholderTemplate) {\n      this._placeholderTemplate = null;\n    }\n  }\n  /** Syncs the root element with the `DragRef`. */\n  _updateRootElement() {\n    const element = this.element.nativeElement;\n    let rootElement = element;\n    if (this.rootElementSelector) {\n      rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n      // Comment tag doesn't have closest method, so use parent's one.\n      element.parentElement?.closest(this.rootElementSelector);\n    }\n    if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      assertElementNode(rootElement, 'cdkDrag');\n    }\n    this._dragRef.withRootElement(rootElement || element);\n  }\n  /** Gets the boundary element, based on the `boundaryElement` value. */\n  _getBoundaryElement() {\n    const boundary = this.boundaryElement;\n    if (!boundary) {\n      return null;\n    }\n    if (typeof boundary === 'string') {\n      return this.element.nativeElement.closest(boundary);\n    }\n    return coerceElement(boundary);\n  }\n  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n  _syncInputs(ref) {\n    ref.beforeStarted.subscribe(() => {\n      if (!ref.isDragging()) {\n        const dir = this._dir;\n        const dragStartDelay = this.dragStartDelay;\n        const placeholder = this._placeholderTemplate ? {\n          template: this._placeholderTemplate.templateRef,\n          context: this._placeholderTemplate.data,\n          viewContainer: this._viewContainerRef\n        } : null;\n        const preview = this._previewTemplate ? {\n          template: this._previewTemplate.templateRef,\n          context: this._previewTemplate.data,\n          matchSize: this._previewTemplate.matchSize,\n          viewContainer: this._viewContainerRef\n        } : null;\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.scale = this.scale;\n        ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n        ref.constrainPosition = this.constrainPosition;\n        ref.previewClass = this.previewClass;\n        ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n        if (dir) {\n          ref.withDirection(dir.value);\n        }\n      }\n    });\n    // This only needs to be resolved once.\n    ref.beforeStarted.pipe(take(1)).subscribe(() => {\n      // If we managed to resolve a parent through DI, use it.\n      if (this._parentDrag) {\n        ref.withParent(this._parentDrag._dragRef);\n        return;\n      }\n      // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n      // the item was projected into another item by something like `ngTemplateOutlet`.\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const parentDrag = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (parentDrag) {\n          ref.withParent(parentDrag._dragRef);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    });\n  }\n  /** Handles the events from the underlying `DragRef`. */\n  _handleEvents(ref) {\n    ref.started.subscribe(startEvent => {\n      this.started.emit({\n        source: this,\n        event: startEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.released.subscribe(releaseEvent => {\n      this.released.emit({\n        source: this,\n        event: releaseEvent.event\n      });\n    });\n    ref.ended.subscribe(endEvent => {\n      this.ended.emit({\n        source: this,\n        distance: endEvent.distance,\n        dropPoint: endEvent.dropPoint,\n        event: endEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(enterEvent => {\n      this.entered.emit({\n        container: enterEvent.container.data,\n        item: this,\n        currentIndex: enterEvent.currentIndex\n      });\n    });\n    ref.exited.subscribe(exitEvent => {\n      this.exited.emit({\n        container: exitEvent.container.data,\n        item: this\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        item: this,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n    });\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      dragStartDelay,\n      constrainPosition,\n      previewClass,\n      boundaryElement,\n      draggingDisabled,\n      rootElementSelector,\n      previewContainer\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.dragStartDelay = dragStartDelay || 0;\n    this.lockAxis = lockAxis || null;\n    if (constrainPosition) {\n      this.constrainPosition = constrainPosition;\n    }\n    if (previewClass) {\n      this.previewClass = previewClass;\n    }\n    if (boundaryElement) {\n      this.boundaryElement = boundaryElement;\n    }\n    if (rootElementSelector) {\n      this.rootElementSelector = rootElementSelector;\n    }\n    if (previewContainer) {\n      this.previewContainer = previewContainer;\n    }\n  }\n  /** Sets up the listener that syncs the handles with the drag ref. */\n  _setupHandlesListener() {\n    // Listen for any newly-added handles.\n    this._handles.pipe(\n    // Sync the new handles with the DragRef.\n    tap(handles => {\n      const handleElements = handles.map(handle => handle.element);\n      // Usually handles are only allowed to be a descendant of the drag element, but if\n      // the consumer defined a different drag root, we should allow the drag element\n      // itself to be a handle too.\n      if (this._selfHandle && this.rootElementSelector) {\n        handleElements.push(this.element);\n      }\n      this._dragRef.withHandles(handleElements);\n    }),\n    // Listen if the state of any of the handles changes.\n    switchMap(handles => {\n      return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n    }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n      // Enabled/disable the handle that changed in the DragRef.\n      const dragRef = this._dragRef;\n      const handle = handleInstance.element.nativeElement;\n      handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n    });\n  }\n  static …µfac = function CdkDrag_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDrag)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDrag,\n    selectors: [[\"\", \"cdkDrag\", \"\"]],\n    hostAttrs: [1, \"cdk-drag\"],\n    hostVars: 4,\n    hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.…µ…µclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n      }\n    },\n    inputs: {\n      data: [0, \"cdkDragData\", \"data\"],\n      lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n      rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n      boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n      dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n      freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n      disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n      constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n      previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n      previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n      scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n    },\n    outputs: {\n      started: \"cdkDragStarted\",\n      released: \"cdkDragReleased\",\n      ended: \"cdkDragEnded\",\n      entered: \"cdkDragEntered\",\n      exited: \"cdkDragExited\",\n      dropped: \"cdkDragDropped\",\n      moved: \"cdkDragMoved\"\n    },\n    exportAs: [\"cdkDrag\"],\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CDK_DRAG_PARENT,\n      useExisting: CdkDrag\n    }]), i0.…µ…µNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDrag, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDrag]',\n      exportAs: 'cdkDrag',\n      host: {\n        'class': 'cdk-drag',\n        '[class.cdk-drag-disabled]': 'disabled',\n        '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n      },\n      providers: [{\n        provide: CDK_DRAG_PARENT,\n        useExisting: CdkDrag\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input,\n      args: ['cdkDragData']\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDragLockAxis']\n    }],\n    rootElementSelector: [{\n      type: Input,\n      args: ['cdkDragRootElement']\n    }],\n    boundaryElement: [{\n      type: Input,\n      args: ['cdkDragBoundary']\n    }],\n    dragStartDelay: [{\n      type: Input,\n      args: ['cdkDragStartDelay']\n    }],\n    freeDragPosition: [{\n      type: Input,\n      args: ['cdkDragFreeDragPosition']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    constrainPosition: [{\n      type: Input,\n      args: ['cdkDragConstrainPosition']\n    }],\n    previewClass: [{\n      type: Input,\n      args: ['cdkDragPreviewClass']\n    }],\n    previewContainer: [{\n      type: Input,\n      args: ['cdkDragPreviewContainer']\n    }],\n    scale: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragScale',\n        transform: numberAttribute\n      }]\n    }],\n    started: [{\n      type: Output,\n      args: ['cdkDragStarted']\n    }],\n    released: [{\n      type: Output,\n      args: ['cdkDragReleased']\n    }],\n    ended: [{\n      type: Output,\n      args: ['cdkDragEnded']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDragEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDragExited']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDragDropped']\n    }],\n    moved: [{\n      type: Output,\n      args: ['cdkDragMoved']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n  /** Drop lists registered inside the group. */\n  _items = new Set();\n  /** Whether starting a dragging sequence from inside this group is disabled. */\n  disabled = false;\n  ngOnDestroy() {\n    this._items.clear();\n  }\n  static …µfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropListGroup)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDropListGroup,\n    selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n    inputs: {\n      disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"cdkDropListGroup\"],\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CDK_DROP_LIST_GROUP,\n      useExisting: CdkDropListGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDropListGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropListGroup]',\n      exportAs: 'cdkDropListGroup',\n      providers: [{\n        provide: CDK_DROP_LIST_GROUP,\n        useExisting: CdkDropListGroup\n      }]\n    }]\n  }], null, {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListGroupDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n  element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollDispatcher = inject(ScrollDispatcher);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _group = inject(CDK_DROP_LIST_GROUP, {\n    optional: true,\n    skipSelf: true\n  });\n  /** Refs that have been synced with the drop ref most recently. */\n  _latestSortedRefs;\n  /** Emits when the list has been destroyed. */\n  _destroyed = new Subject();\n  /** Whether the element's scrollable parents have been resolved. */\n  _scrollableParentsResolved;\n  /** Keeps track of the drop lists that are currently on the page. */\n  static _dropLists = [];\n  /** Reference to the underlying drop list instance. */\n  _dropListRef;\n  /**\n   * Other draggable containers that this container is connected to and into which the\n   * container's items can be transferred. Can either be references to other drop containers,\n   * or their unique IDs.\n   */\n  connectedTo = [];\n  /** Arbitrary data to attach to this container. */\n  data;\n  /** Direction in which the list is oriented. */\n  orientation;\n  /**\n   * Unique ID for the drop zone. Can be used as a reference\n   * in the `connectedTo` of another `CdkDropList`.\n   */\n  id = inject(_IdGenerator).getId('cdk-drop-list-');\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis = null;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  get disabled() {\n    return this._disabled || !!this._group && this._group.disabled;\n  }\n  set disabled(value) {\n    // Usually we sync the directive and ref state right before dragging starts, in order to have\n    // a single point of failure and to avoid having to use setters for everything. `disabled` is\n    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n    // the user in a disabled state, so we also need to sync it as it's being set.\n    this._dropListRef.disabled = this._disabled = value;\n  }\n  _disabled;\n  /** Whether sorting within this drop list is disabled. */\n  sortingDisabled;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Functions that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n  autoScrollDisabled;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep;\n  /**\n   * Selector that will be used to resolve an alternate element container for the drop list.\n   * Passing an alternate container is useful for the cases where one might not have control\n   * over the parent node of the draggable items within the list (e.g. due to content projection).\n   * This allows for usages like:\n   *\n   * ```\n   * <div cdkDropList cdkDropListElementContainer=\".inner\">\n   *   <div class=\"inner\">\n   *     <div cdkDrag></div>\n   *   </div>\n   * </div>\n   * ```\n   */\n  elementContainerSelector;\n  /**\n   * By default when an item leaves its initial container, its placeholder will be transferred\n   * to the new container. If that's not desirable for your use case, you can enable this option\n   * which will clone the placeholder and leave it inside the original container. If the item is\n   * returned to the initial container, the anchor element will be removed automatically.\n   *\n   * The cloned placeholder can be styled by targeting the `cdk-drag-anchor` class.\n   *\n   * This option is useful in combination with `cdkDropListSortingDisabled` to implement copying\n   * behavior in a drop list.\n   */\n  hasAnchor;\n  /** Emits when the user drops an item inside the container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new EventEmitter();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new EventEmitter();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new EventEmitter();\n  /**\n   * Keeps track of the items that are registered with this container. Historically we used to\n   * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n   * well which means that we can't handle cases like dragging the headers of a `mat-table`\n   * correctly. What we do instead is to have the items register themselves with the container\n   * and then we sort them based on their position in the DOM.\n   */\n  _unsortedItems = new Set();\n  constructor() {\n    const dragDrop = inject(DragDrop);\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDropList');\n    }\n    this._dropListRef = dragDrop.createDropList(this.element);\n    this._dropListRef.data = this;\n    if (config) {\n      this._assignDefaults(config);\n    }\n    this._dropListRef.enterPredicate = (drag, drop) => {\n      return this.enterPredicate(drag.data, drop.data);\n    };\n    this._dropListRef.sortPredicate = (index, drag, drop) => {\n      return this.sortPredicate(index, drag.data, drop.data);\n    };\n    this._setupInputSyncSubscription(this._dropListRef);\n    this._handleEvents(this._dropListRef);\n    CdkDropList._dropLists.push(this);\n    if (this._group) {\n      this._group._items.add(this);\n    }\n  }\n  /** Registers an items with the drop list. */\n  addItem(item) {\n    this._unsortedItems.add(item);\n    item._dragRef._withDropContainer(this._dropListRef);\n    // Only sync the items while dragging since this method is\n    // called when items are being initialized one-by-one.\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n    }\n  }\n  /** Removes an item from the drop list. */\n  removeItem(item) {\n    this._unsortedItems.delete(item);\n    // This method might be called on destroy so we always want to sync with the ref.\n    // Note that we reuse the last set of synced items, rather than re-sorting the whole\n    // list, because it can slow down re-renders of large lists (see #30737).\n    if (this._latestSortedRefs) {\n      const index = this._latestSortedRefs.indexOf(item._dragRef);\n      if (index > -1) {\n        this._latestSortedRefs.splice(index, 1);\n        this._syncItemsWithRef(this._latestSortedRefs);\n      }\n    }\n  }\n  /** Gets the registered items in the list, sorted by their position in the DOM. */\n  getSortedItems() {\n    return Array.from(this._unsortedItems).sort((a, b) => {\n      const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n      // tslint:disable-next-line:no-bitwise\n      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n    });\n  }\n  ngOnDestroy() {\n    const index = CdkDropList._dropLists.indexOf(this);\n    if (index > -1) {\n      CdkDropList._dropLists.splice(index, 1);\n    }\n    if (this._group) {\n      this._group._items.delete(this);\n    }\n    this._latestSortedRefs = undefined;\n    this._unsortedItems.clear();\n    this._dropListRef.dispose();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n  _setupInputSyncSubscription(ref) {\n    if (this._dir) {\n      this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n    }\n    ref.beforeStarted.subscribe(() => {\n      const siblings = coerceArray(this.connectedTo).map(drop => {\n        if (typeof drop === 'string') {\n          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n          }\n          return correspondingDropList;\n        }\n        return drop;\n      });\n      if (this._group) {\n        this._group._items.forEach(drop => {\n          if (siblings.indexOf(drop) === -1) {\n            siblings.push(drop);\n          }\n        });\n      }\n      // Note that we resolve the scrollable parents here so that we delay the resolution\n      // as long as possible, ensuring that the element is in its final place in the DOM.\n      if (!this._scrollableParentsResolved) {\n        const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n        this._dropListRef.withScrollableParents(scrollableParents);\n        // Only do this once since it involves traversing the DOM and the parents\n        // shouldn't be able to change without the drop list being destroyed.\n        this._scrollableParentsResolved = true;\n      }\n      if (this.elementContainerSelector) {\n        const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n        if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n        }\n        ref.withElementContainer(container);\n      }\n      ref.disabled = this.disabled;\n      ref.lockAxis = this.lockAxis;\n      ref.sortingDisabled = this.sortingDisabled;\n      ref.autoScrollDisabled = this.autoScrollDisabled;\n      ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n      ref.hasAnchor = this.hasAnchor;\n      ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n    });\n  }\n  /** Handles events from the underlying DropListRef. */\n  _handleEvents(ref) {\n    ref.beforeStarted.subscribe(() => {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: this,\n        item: event.item.data,\n        currentIndex: event.currentIndex\n      });\n    });\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: this,\n        item: event.item.data\n      });\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.sorted.subscribe(event => {\n      this.sorted.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        container: this,\n        item: event.item.data\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        item: dropEvent.item.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n      // Mark for check since all of these events run outside of change\n      // detection and we're not guaranteed for something else to have triggered it.\n      this._changeDetectorRef.markForCheck();\n    });\n    merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      draggingDisabled,\n      sortingDisabled,\n      listAutoScrollDisabled,\n      listOrientation\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n    this.orientation = listOrientation || 'vertical';\n    this.lockAxis = lockAxis || null;\n  }\n  /** Syncs up the registered drag items with underlying drop list ref. */\n  _syncItemsWithRef(items) {\n    this._latestSortedRefs = items;\n    this._dropListRef.withItems(items);\n  }\n  static …µfac = function CdkDropList_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropList)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDropList,\n    selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n    hostAttrs: [1, \"cdk-drop-list\"],\n    hostVars: 7,\n    hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.…µ…µattribute(\"id\", ctx.id);\n        i0.…µ…µclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n      }\n    },\n    inputs: {\n      connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n      data: [0, \"cdkDropListData\", \"data\"],\n      orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n      id: \"id\",\n      lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n      disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n      sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n      enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n      sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n      autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n      autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n      elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"],\n      hasAnchor: [2, \"cdkDropListHasAnchor\", \"hasAnchor\", booleanAttribute]\n    },\n    outputs: {\n      dropped: \"cdkDropListDropped\",\n      entered: \"cdkDropListEntered\",\n      exited: \"cdkDropListExited\",\n      sorted: \"cdkDropListSorted\"\n    },\n    exportAs: [\"cdkDropList\"],\n    features: [i0.…µ…µProvidersFeature([\n    // Prevent child drop lists from picking up the same group as their parent.\n    {\n      provide: CDK_DROP_LIST_GROUP,\n      useValue: undefined\n    }, {\n      provide: CDK_DROP_LIST,\n      useExisting: CdkDropList\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDropList, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropList], cdk-drop-list',\n      exportAs: 'cdkDropList',\n      providers: [\n      // Prevent child drop lists from picking up the same group as their parent.\n      {\n        provide: CDK_DROP_LIST_GROUP,\n        useValue: undefined\n      }, {\n        provide: CDK_DROP_LIST,\n        useExisting: CdkDropList\n      }],\n      host: {\n        'class': 'cdk-drop-list',\n        '[attr.id]': 'id',\n        '[class.cdk-drop-list-disabled]': 'disabled',\n        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n      }\n    }]\n  }], () => [], {\n    connectedTo: [{\n      type: Input,\n      args: ['cdkDropListConnectedTo']\n    }],\n    data: [{\n      type: Input,\n      args: ['cdkDropListData']\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkDropListOrientation']\n    }],\n    id: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDropListLockAxis']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortingDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListSortingDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enterPredicate: [{\n      type: Input,\n      args: ['cdkDropListEnterPredicate']\n    }],\n    sortPredicate: [{\n      type: Input,\n      args: ['cdkDropListSortPredicate']\n    }],\n    autoScrollDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListAutoScrollDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    autoScrollStep: [{\n      type: Input,\n      args: ['cdkDropListAutoScrollStep']\n    }],\n    elementContainerSelector: [{\n      type: Input,\n      args: ['cdkDropListElementContainer']\n    }],\n    hasAnchor: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListHasAnchor',\n        transform: booleanAttribute\n      }]\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDropListDropped']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDropListEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDropListExited']\n    }],\n    sorted: [{\n      type: Output,\n      args: ['cdkDropListSorted']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the preview template instance. */\n  data;\n  /** Whether the preview should preserve the same size as the item that is being dragged. */\n  matchSize = false;\n  constructor() {\n    this._drag?._setPreviewTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPreviewTemplate(this);\n  }\n  static …µfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPreview)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDragPreview,\n    selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n    inputs: {\n      data: \"data\",\n      matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CDK_DRAG_PREVIEW,\n      useExisting: CdkDragPreview\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDragPreview, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPreview]',\n      providers: [{\n        provide: CDK_DRAG_PREVIEW,\n        useExisting: CdkDragPreview\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }],\n    matchSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the placeholder template instance. */\n  data;\n  constructor() {\n    this._drag?._setPlaceholderTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPlaceholderTemplate(this);\n  }\n  static …µfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPlaceholder)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: CdkDragPlaceholder,\n    selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n    inputs: {\n      data: \"data\"\n    },\n    features: [i0.…µ…µProvidersFeature([{\n      provide: CDK_DRAG_PLACEHOLDER,\n      useExisting: CdkDragPlaceholder\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(CdkDragPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPlaceholder]',\n      providers: [{\n        provide: CDK_DRAG_PLACEHOLDER,\n        useExisting: CdkDragPlaceholder\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nclass DragDropModule {\n  static …µfac = function DragDropModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropModule)();\n  };\n  static …µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n    type: DragDropModule,\n    imports: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder],\n    exports: [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]\n  });\n  static …µinj = /* @__PURE__ */i0.…µ…µdefineInjector({\n    providers: [DragDrop],\n    imports: [CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(DragDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: DRAG_DROP_DIRECTIVES,\n      exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n      providers: [DragDrop]\n    }]\n  }], null, null);\n})();\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { Injectable, inject } from '@angular/core';\nimport { Storage, ref, uploadBytes, getDownloadURL, deleteObject } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  private storage = inject(Storage);\n\n  async uploadFile(file: File, path: string): Promise<string> {\n    try {\n      const storageRef = ref(this.storage, path);\n      const snapshot = await uploadBytes(storageRef, file);\n      return await getDownloadURL(snapshot.ref);\n    } catch (error) {\n      console.error('Erro ao fazer upload:', error);\n      throw error;\n    }\n  }\n\n  async uploadLeadAttachment(userId: string, boardId: string, leadId: string, file: File, companyId?: string): Promise<{ name: string, url: string }> {\n    const timestamp = Date.now();\n    const storageBase = companyId ? `companies/${companyId}` : `users/${userId}`;\n    const path = `${storageBase}/boards/${boardId}/leads/${leadId}/attachments/${timestamp}_${file.name}`;\n    \n    try {\n      const url = await this.uploadFile(file, path);\n      return {\n        name: file.name,\n        url: url\n      };\n    } catch (error) {\n      console.error('Erro ao fazer upload do anexo:', error);\n      throw error;\n    }\n  }\n\n  async deleteFile(path: string): Promise<void> {\n    try {\n      const storageRef = ref(this.storage, path);\n      await deleteObject(storageRef);\n    } catch (error) {\n      console.error('Erro ao deletar arquivo:', error);\n      throw error;\n    }\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaskService {\n\n  // Aplicar m√°scara de CPF: 000.000.000-00\n  applyCpfMask(value: string): string {\n    if (!value) return '';\n    \n    // Remove tudo que n√£o √© n√∫mero\n    const cleaned = value.replace(/\\D/g, '');\n    \n    // Aplica a m√°scara\n    if (cleaned.length <= 11) {\n      return cleaned\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\n    }\n    \n    return cleaned.slice(0, 11)\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\n  }\n\n  // Aplicar m√°scara de CNPJ: 00.000.000/0000-00\n  applyCnpjMask(value: string): string {\n    if (!value) return '';\n    \n    // Remove tudo que n√£o √© n√∫mero\n    const cleaned = value.replace(/\\D/g, '');\n    \n    // Aplica a m√°scara\n    if (cleaned.length <= 14) {\n      return cleaned\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1/$2')\n        .replace(/(\\d{4})(\\d{1,2})$/, '$1-$2');\n    }\n    \n    return cleaned.slice(0, 14)\n      .replace(/(\\d{2})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d)/, '$1/$2')\n      .replace(/(\\d{4})(\\d{1,2})$/, '$1-$2');\n  }\n\n  // Aplicar m√°scara de telefone brasileiro: (00) 00000-0000 ou (00) 0000-0000\n  applyPhoneMask(value: string): string {\n    if (!value) return '';\n    \n    // Remove tudo que n√£o √© n√∫mero\n    const cleaned = value.replace(/\\D/g, '');\n    \n    // Celular (11 d√≠gitos)\n    if (cleaned.length === 11) {\n      return cleaned\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\n        .replace(/(\\d{5})(\\d{4})$/, '$1-$2');\n    }\n    \n    // Telefone fixo (10 d√≠gitos)\n    if (cleaned.length === 10) {\n      return cleaned\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\n        .replace(/(\\d{4})(\\d{4})$/, '$1-$2');\n    }\n    \n    // M√°scara parcial durante a digita√ß√£o\n    if (cleaned.length <= 11) {\n      let masked = cleaned;\n      if (cleaned.length >= 2) {\n        masked = cleaned.replace(/(\\d{2})(\\d)/, '($1) $2');\n      }\n      if (cleaned.length >= 7) {\n        masked = masked.replace(/(\\d{4,5})(\\d{4})$/, '$1-$2');\n      }\n      return masked;\n    }\n    \n    // Limita a 11 d√≠gitos\n    return this.applyPhoneMask(cleaned.slice(0, 11));\n  }\n\n  // Validar CPF\n  isValidCpf(cpf: string): boolean {\n    if (!cpf) return false;\n    \n    // Remove formata√ß√£o\n    const cleaned = cpf.replace(/\\D/g, '');\n    \n    // Verifica se tem 11 d√≠gitos\n    if (cleaned.length !== 11) return false;\n    \n    // Verifica sequ√™ncias iguais\n    if (/^(\\d)\\1+$/.test(cleaned)) return false;\n    \n    // Valida√ß√£o dos d√≠gitos verificadores\n    let sum = 0;\n    for (let i = 0; i < 9; i++) {\n      sum += parseInt(cleaned.charAt(i)) * (10 - i);\n    }\n    let digit1 = 11 - (sum % 11);\n    if (digit1 > 9) digit1 = 0;\n    \n    sum = 0;\n    for (let i = 0; i < 10; i++) {\n      sum += parseInt(cleaned.charAt(i)) * (11 - i);\n    }\n    let digit2 = 11 - (sum % 11);\n    if (digit2 > 9) digit2 = 0;\n    \n    return parseInt(cleaned.charAt(9)) === digit1 && parseInt(cleaned.charAt(10)) === digit2;\n  }\n\n  // Validar CNPJ\n  isValidCnpj(cnpj: string): boolean {\n    if (!cnpj) return false;\n    \n    // Remove formata√ß√£o\n    const cleaned = cnpj.replace(/\\D/g, '');\n    \n    // Verifica se tem 14 d√≠gitos\n    if (cleaned.length !== 14) return false;\n    \n    // Verifica sequ√™ncias iguais (todos os d√≠gitos iguais)\n    if (/^(\\d)\\1+$/.test(cleaned)) return false;\n    \n    // Convertemos para array de n√∫meros para facilitar os c√°lculos\n    const digits = cleaned.split('').map(Number);\n    \n    // Valida√ß√£o do primeiro d√≠gito verificador\n    let sum1 = 0;\n    const weights1 = [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    for (let i = 0; i < 12; i++) {\n      sum1 += digits[i] * weights1[i];\n    }\n    const remainder1 = sum1 % 11;\n    const digit1 = remainder1 < 2 ? 0 : 11 - remainder1;\n    \n    // Valida√ß√£o do segundo d√≠gito verificador\n    let sum2 = 0;\n    const weights2 = [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    for (let i = 0; i < 13; i++) {\n      sum2 += digits[i] * weights2[i];\n    }\n    const remainder2 = sum2 % 11;\n    const digit2 = remainder2 < 2 ? 0 : 11 - remainder2;\n    \n    // Verifica se os d√≠gitos calculados coincidem com os fornecidos\n    return digits[12] === digit1 && digits[13] === digit2;\n  }\n\n  // Validar email\n  isValidEmail(email: string): boolean {\n    if (!email) return false;\n    \n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(email);\n  }\n\n  // Remover formata√ß√£o (manter s√≥ n√∫meros)\n  removeFormatting(value: string): string {\n    if (!value) return '';\n    return value.replace(/\\D/g, '');\n  }\n\n  // Obter cores da temperatura\n  getTemperatureColor(temperature: string): string {\n    switch (temperature?.toLowerCase()) {\n      case 'quente': return '#EF4444'; // red-500\n      case 'morno': return '#EAB308'; // yellow-500  \n      case 'frio': return '#3B82F6'; // blue-500\n      default: return '#6B7280'; // gray-500\n    }\n  }\n\n  // Obter classe CSS da temperatura\n  getTemperatureClass(temperature: string): string {\n    switch (temperature?.toLowerCase()) {\n      case 'quente': return 'bg-red-500 text-white';\n      case 'morno': return 'bg-yellow-500 text-white';\n      case 'frio': return 'bg-blue-500 text-white';\n      default: return 'bg-gray-500 text-white';\n    }\n  }\n\n  // M√©todos de m√°scara para eventos de input\n  maskPhone(event: any): void {\n    const input = event.target;\n    const value = input.value;\n    const maskedValue = this.applyPhoneMask(value);\n    input.value = maskedValue;\n    // Disparar evento de input para atualizar o form control\n    const inputEvent = new Event('input', { bubbles: true });\n    input.dispatchEvent(inputEvent);\n  }\n\n  maskCPF(event: any): void {\n    const input = event.target;\n    const value = input.value;\n    const maskedValue = this.applyCpfMask(value);\n    input.value = maskedValue;\n    // Disparar evento de input para atualizar o form control\n    const inputEvent = new Event('input', { bubbles: true });\n    input.dispatchEvent(inputEvent);\n  }\n\n  maskCNPJ(event: any): void {\n    const input = event.target;\n    const value = input.value;\n    const maskedValue = this.applyCnpjMask(value);\n    input.value = maskedValue;\n    // Disparar evento de input para atualizar o form control\n    const inputEvent = new Event('input', { bubbles: true });\n    input.dispatchEvent(inputEvent);\n  }\n\n  // M√©todos de valida√ß√£o com nomes alternativos\n  validateCPF(value: string): boolean {\n    return this.isValidCpf(value);\n  }\n\n  validateCNPJ(value: string): boolean {\n    return this.isValidCnpj(value);\n  }\n\n}","import { Component, inject, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService, Lead, Column } from '../../services/firestore.service';\nimport { StorageService } from '../../services/storage.service';\nimport { MaskService } from '../../services/mask.service';\n\ninterface LeadFormField {\n  name: string;\n  label: string;\n  type: string;\n  required: boolean;\n  order: number;\n  options?: string[];\n  placeholder?: string;\n  includeInApi?: boolean;\n  apiFieldName?: string;\n  showInCard?: boolean;\n}\n\n@Component({\n  selector: 'app-lead-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './lead-modal.component.html',\n  styleUrls: ['./lead-modal.component.scss']\n})\nexport class LeadModalComponent {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private storageService = inject(StorageService);\n  private fb = inject(FormBuilder);\n  private maskService = inject(MaskService);\n\n  @Input() ownerId: string = '';\n  @Input() boardId: string = '';\n  @Input() columns: Column[] = [];\n  \n  @Output() leadCreated = new EventEmitter<void>();\n  @Output() leadUpdated = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n\n  isVisible = false;\n  isEditing = false;\n  isLoading = false;\n  errorMessage = '';\n  currentLead: Lead | null = null;\n\n  leadForm: FormGroup = this.fb.group({});\n  formFields: LeadFormField[] = [];\n  selectedFiles: File[] = [];\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  private async initializeForm() {\n    // 1) Tentar carregar campos do formul√°rio inicial do board\n    await this.loadFormFieldsFromInitialBoard();\n    // 2) Fallback: tentar carregar campos da fase inicial configurada\n    if (this.formFields.length === 0) {\n      await this.loadFormFieldsFromInitialPhase();\n    }\n    \n    // Se n√£o encontrou campos da fase, usar campos padr√£o (fallback)\n    // 3) Se ainda n√£o houver configura√ß√£o, manter vazio para cadastro livre\n\n    this.buildForm();\n  }\n\n  private async loadFormFieldsFromInitialBoard() {\n    try {\n      if (!this.boardId) return;\n      const cfg = await this.firestoreService.getInitialFormConfig(this.boardId);\n      if (cfg && (cfg as any).fields) {\n        this.formFields = (cfg as any).fields\n          .map((field: any, index: number) => ({\n            ...field,\n            includeInApi: field.includeInApi !== false,\n            order: field.order ?? index\n          }))\n          .sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n      }\n    } catch (e) {\n      // Ignorar e deixar fallback cuidar\n    }\n  }\n\n  private async loadFormFieldsFromInitialPhase() {\n    try {\n      if (this.boardId && this.ownerId) {\n        console.log('üîç Carregando campos do formul√°rio da fase inicial...', { \n          boardId: this.boardId, \n          ownerId: this.ownerId \n        });\n        \n        // Buscar fase inicial (marcada como isInitialPhase)\n        const columns = await this.firestoreService.getColumns(this.ownerId, this.boardId);\n        console.log('üìã Colunas encontradas:', columns);\n        \n        // Encontrar fase inicial ou usar a primeira fase como fallback\n        const initialColumn = columns.find((col: any) => col.isInitialPhase) || \n                             columns.sort((a, b) => (a.order || 0) - (b.order || 0))[0];\n        \n        if (initialColumn) {\n          console.log('üéØ Fase inicial encontrada:', initialColumn);\n          \n          // Buscar configura√ß√£o do formul√°rio da fase inicial\n          const phaseFormConfig = await this.firestoreService.getPhaseFormConfig(\n            this.ownerId, \n            this.boardId, \n            initialColumn.id!\n          );\n          console.log('‚öôÔ∏è Configura√ß√£o da fase encontrada:', phaseFormConfig);\n          \n          if (phaseFormConfig && (phaseFormConfig as any).fields) {\n            this.formFields = (phaseFormConfig as any).fields\n              .map((field: any) => {\n                // Reconstruct temperatura fields properly\n                if (field.type === 'temperatura') {\n                  if (!field.options || field.options.length === 0) {\n                    field.options = ['Quente', 'Morno', 'Frio'];\n                  }\n                  console.log('üå°Ô∏è Campo temperatura reconstru√≠do:', field);\n                }\n                // Ensure all required properties exist\n                return {\n                  ...field,\n                  includeInApi: field.includeInApi !== false,\n                  order: field.order || 0\n                };\n              })\n              .sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n            console.log('‚úÖ Formul√°rio carregado da fase inicial:', this.formFields);\n          } else {\n            console.log('‚ö†Ô∏è Nenhuma configura√ß√£o de formul√°rio encontrada para a fase');\n          }\n        } else {\n          console.log('‚ö†Ô∏è Nenhuma coluna encontrada no quadro');\n        }\n      } else {\n        console.log('‚ö†Ô∏è BoardId ou OwnerId n√£o definidos:', { boardId: this.boardId, ownerId: this.ownerId });\n      }\n    } catch (error) {\n      console.error('‚ùå Erro ao carregar campos do formul√°rio da fase:', error);\n      // Continua com campos padr√£o\n    }\n  }\n\n  private buildForm() {\n    const group: any = {};\n    \n    this.formFields.forEach(field => {\n      const validators = field.required ? [Validators.required] : [];\n      \n      // Add field type-specific validators\n      switch (field.type) {\n        case 'email':\n          validators.push(Validators.email);\n          break;\n        case 'cnpj':\n          validators.push((control: any) => {\n            const value = control.value;\n            if (!value) return null;\n            return this.maskService.validateCNPJ(value) ? null : { cnpj: true };\n          });\n          break;\n        case 'cpf':\n          validators.push((control: any) => {\n            const value = control.value;\n            if (!value) return null;\n            return this.maskService.validateCPF(value) ? null : { cpf: true };\n          });\n          break;\n      }\n      \n      group[field.name] = ['', validators];\n    });\n\n    this.leadForm = this.fb.group(group);\n  }\n\n  showCreateModal() {\n    this.isEditing = false;\n    this.currentLead = null;\n    this.isVisible = true;\n    this.resetForm();\n  }\n\n  showEditModal(lead: Lead) {\n    this.isEditing = true;\n    this.currentLead = lead;\n    this.isVisible = true;\n    this.populateForm(lead);\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.resetForm();\n    this.closeModal.emit();\n  }\n\n  private resetForm() {\n    this.leadForm.reset();\n    this.errorMessage = '';\n    this.selectedFiles = [];\n    this.isLoading = false;\n  }\n\n  private populateForm(lead: Lead) {\n    if (lead.fields) {\n      Object.keys(lead.fields).forEach(key => {\n        if (this.leadForm.controls[key]) {\n          this.leadForm.patchValue({ [key]: lead.fields[key] });\n        }\n      });\n    }\n  }\n\n  async saveLead() {\n    if (!this.leadForm.valid) {\n      this.errorMessage = 'Por favor, preencha todos os campos obrigat√≥rios.';\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    try {\n      const formData = this.leadForm.value;\n      const currentUser = this.authService.getCurrentUser();\n      \n      if (!currentUser) {\n        throw new Error('Usu√°rio n√£o autenticado');\n      }\n\n      if (this.isEditing && this.currentLead) {\n        // Atualizar lead existente\n        await this.firestoreService.updateLead(\n          this.ownerId,\n          this.boardId,\n          this.currentLead.id!,\n          { fields: formData }\n        );\n\n        // Adicionar ao hist√≥rico\n        await this.firestoreService.addLeadHistory(\n          this.ownerId,\n          this.boardId,\n          this.currentLead.id!,\n          {\n            type: 'update',\n            text: 'Lead atualizado',\n            user: currentUser.displayName || currentUser.email\n          }\n        );\n\n        this.leadUpdated.emit();\n      } else {\n        // Criar novo lead\n        // Usar a coluna inicial marcada como isInitialPhase; se n√£o houver, buscar via servi√ßo; por fim, usar a primeira na ordem\n        let initialColumn = this.columns.find((c: any) => c.isInitialPhase) || this.columns.sort((a, b) => (a.order || 0) - (b.order || 0))[0];\n        if (!initialColumn) {\n          const initialColumnId = await this.firestoreService.getInitialColumnId(this.boardId);\n          if (initialColumnId) {\n            initialColumn = this.columns.find(c => c.id === initialColumnId) || null as any;\n          }\n        }\n        if (!initialColumn) throw new Error('Nenhuma coluna inicial encontrada');\n\n        // Normalizar fase inicial tamb√©m no hist√≥rico de fases\n        const now = new Date();\n        const newLead: Omit<Lead, 'id'> = {\n          fields: formData,\n          columnId: initialColumn.id!,\n          companyId: '', // Ser√° preenchido pelo FirestoreService\n          boardId: this.boardId,\n          createdAt: null, // ser√° preenchido pelo serverTimestamp\n          movedToCurrentColumnAt: null,\n          responsibleUserId: currentUser.uid,\n          responsibleUserName: currentUser.displayName || '',\n          responsibleUserEmail: currentUser.email || '',\n          phaseHistory: { [initialColumn.id!]: { phaseId: initialColumn.id!, enteredAt: now } },\n          executedAutomations: {}\n        };\n\n        const leadRef = await this.firestoreService.createLead(this.ownerId, this.boardId, newLead);\n\n        // Garantir phaseHistory persistido no documento (caso create normalize timestamps)\n        try {\n          const createdLead = await this.firestoreService.getLead(this.ownerId, this.boardId, leadRef.id);\n          if (createdLead && (!createdLead.phaseHistory || !createdLead.phaseHistory[initialColumn.id!])) {\n            await this.firestoreService.updateLead(this.ownerId, this.boardId, leadRef.id, {\n              phaseHistory: { [initialColumn.id!]: { phaseId: initialColumn.id!, enteredAt: new Date() } }\n            } as any);\n          }\n        } catch {}\n\n        // Adicionar ao hist√≥rico\n        await this.firestoreService.addLeadHistory(\n          this.ownerId,\n          this.boardId,\n          leadRef.id,\n          {\n            type: 'creation',\n            text: `Lead criado na fase <b>${initialColumn.name}</b>`,\n            user: currentUser.displayName || currentUser.email\n          }\n        );\n\n        this.leadCreated.emit();\n      }\n\n      this.hide();\n    } catch (error: any) {\n      console.error('Erro ao salvar lead:', error);\n      this.errorMessage = 'Erro ao salvar lead. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  onFileSelected(event: any, fieldName?: string) {\n    const files = event.target.files;\n    if (files) {\n      if (fieldName) {\n        // Armazenar arquivos espec√≠ficos do campo\n        this.leadForm.patchValue({ [fieldName]: Array.from(files) });\n      } else {\n        // Fallback para compatibilidade\n        this.selectedFiles = Array.from(files);\n      }\n    }\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    if (event.target === event.currentTarget) {\n      this.hide();\n    }\n  }\n\n  getFieldError(fieldName: string): string {\n    const control = this.leadForm.get(fieldName);\n    if (control?.errors && control.touched) {\n      if (control.errors['required']) {\n        return `${this.getFieldLabel(fieldName)} √© obrigat√≥rio`;\n      }\n      if (control.errors['email']) {\n        return 'Email inv√°lido';\n      }\n      if (control.errors['cnpj']) {\n        return 'CNPJ inv√°lido';\n      }\n      if (control.errors['cpf']) {\n        return 'CPF inv√°lido';\n      }\n    }\n    return '';\n  }\n\n  getFieldLabel(fieldName: string): string {\n    const field = this.formFields.find(f => f.name === fieldName);\n    return field?.label || fieldName;\n  }\n\n  // Getter para acessar o maskService no template\n  get maskHelper() {\n    return this.maskService;\n  }\n}","<div *ngIf=\"isVisible\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\" (click)=\"onBackdropClick($event)\">\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n    <!-- Header -->\n    <div class=\"flex justify-between items-center p-6 border-b border-gray-200\">\n      <h2 class=\"text-2xl font-bold text-gray-900\">\n        {{ isEditing ? 'Editar Registro' : 'Novo Registro' }}\n      </h2>\n      <button \n        (click)=\"hide()\" \n        class=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n        [disabled]=\"isLoading\">\n        &times;\n      </button>\n    </div>\n\n    <!-- Form -->\n    <form [formGroup]=\"leadForm\" (ngSubmit)=\"saveLead()\" class=\"p-6\">\n      <div class=\"space-y-4\">\n        <!-- Dynamic Fields -->\n        <div *ngFor=\"let field of formFields\" class=\"form-group\">\n          <label [for]=\"field.name\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            {{ field.label }}\n            <span *ngIf=\"field.required\" class=\"text-red-500\">*</span>\n          </label>\n\n          <!-- Text Input -->\n          <input \n            *ngIf=\"field.type === 'text' || field.type === 'email' || field.type === 'date' || field.type === 'time' || field.type === 'number'\"\n            [type]=\"field.type\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            [placeholder]=\"field.placeholder || ''\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\">\n\n          <!-- Phone Input with Brazilian Mask -->\n          <input \n            *ngIf=\"field.type === 'tel'\"\n            type=\"tel\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            [placeholder]=\"field.placeholder || '(11) 99999-9999'\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\"\n            (input)=\"maskHelper.maskPhone($event)\"\n            (keyup)=\"maskHelper.maskPhone($event)\">\n\n          <!-- CNPJ Input -->\n          <input \n            *ngIf=\"field.type === 'cnpj'\"\n            type=\"text\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            placeholder=\"00.000.000/0000-00\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\"\n            (input)=\"maskHelper.maskCNPJ($event)\"\n            (keyup)=\"maskHelper.maskCNPJ($event)\">\n\n          <!-- CPF Input -->\n          <input \n            *ngIf=\"field.type === 'cpf'\"\n            type=\"text\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            placeholder=\"000.000.000-00\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\"\n            (input)=\"maskHelper.maskCPF($event)\"\n            (keyup)=\"maskHelper.maskCPF($event)\">\n\n          <!-- Select -->\n          <select \n            *ngIf=\"field.type === 'select'\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\">\n            <option value=\"\">Selecione...</option>\n            <option *ngFor=\"let option of field.options\" [value]=\"option\">\n              {{ option }}\n            </option>\n          </select>\n\n          <!-- Temperatura Select -->\n          <select \n            *ngIf=\"field.type === 'temperatura'\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\">\n            <option value=\"\">Selecione a temperatura</option>\n            <option *ngFor=\"let option of (field.options || ['Quente', 'Morno', 'Frio'])\" [value]=\"option\">\n              {{ option }}\n            </option>\n          </select>\n\n          <!-- Radio Buttons -->\n          <div *ngIf=\"field.type === 'radio'\" class=\"space-y-2\">\n            <div *ngFor=\"let option of field.options; let i = index\" class=\"flex items-center\">\n              <input\n                type=\"radio\"\n                [id]=\"field.name + '_radio_' + i\"\n                [formControlName]=\"field.name\"\n                [value]=\"option\"\n                [disabled]=\"isLoading\"\n                class=\"mr-2 text-blue-600 focus:ring-blue-500 border-gray-300\">\n              <label [for]=\"field.name + '_radio_' + i\" class=\"text-gray-700 cursor-pointer\">\n                {{ option }}\n              </label>\n            </div>\n          </div>\n\n          <!-- Checkbox -->\n          <label *ngIf=\"field.type === 'checkbox'\" class=\"flex items-center cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              [id]=\"field.name\"\n              [formControlName]=\"field.name\"\n              [disabled]=\"isLoading\"\n              class=\"mr-2 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n            <span class=\"text-gray-700\">{{ field.placeholder || field.label }}</span>\n          </label>\n\n          <!-- Textarea -->\n          <textarea \n            *ngIf=\"field.type === 'textarea'\"\n            [id]=\"field.name\"\n            [formControlName]=\"field.name\"\n            rows=\"3\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none\"\n            [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n            [disabled]=\"isLoading\"></textarea>\n\n          <!-- File Upload -->\n          <div *ngIf=\"field.type === 'file'\">\n            <input \n              type=\"file\"\n              [id]=\"field.name\"\n              [multiple]=\"field.placeholder === 'multiple'\"\n              (change)=\"onFileSelected($event, field.name)\"\n              class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n              [class.border-red-500]=\"leadForm.get(field.name)?.invalid && leadForm.get(field.name)?.touched\"\n              [disabled]=\"isLoading\">\n            <p class=\"text-xs text-gray-500 mt-1\">\n              {{ field.placeholder || 'Voc√™ pode anexar arquivos como documentos, imagens, etc.' }}\n            </p>\n          </div>\n\n          <!-- Error Message -->\n          <div *ngIf=\"getFieldError(field.name)\" class=\"text-red-500 text-sm mt-1\">\n            {{ getFieldError(field.name) }}\n          </div>\n        </div>\n\n\n        <!-- Error Message -->\n        <div *ngIf=\"errorMessage\" class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\n          {{ errorMessage }}\n        </div>\n\n      </div>\n\n      <!-- Actions -->\n      <div class=\"flex justify-end gap-3 mt-6 pt-4 border-t border-gray-200\">\n        <button \n          type=\"button\" \n          (click)=\"hide()\"\n          class=\"px-4 py-2 text-gray-700 bg-gray-200 hover:bg-gray-300 rounded-lg font-medium transition-colors\"\n          [disabled]=\"isLoading\">\n          Cancelar\n        </button>\n        \n        <button \n          type=\"submit\" \n          [disabled]=\"isLoading || !leadForm.valid\"\n          class=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white rounded-lg font-medium transition-colors flex items-center\">\n          <div *ngIf=\"isLoading\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n          {{ isLoading ? 'Salvando...' : (isEditing ? 'Atualizar Registro' : 'Salvar Registro') }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, inject, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService, Column } from '../../services/firestore.service';\n\n@Component({\n  selector: 'app-column-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './column-modal.component.html',\n  styleUrls: ['./column-modal.component.scss']\n})\nexport class ColumnModalComponent {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private fb = inject(FormBuilder);\n\n  @Input() ownerId: string = '';\n  @Input() boardId: string = '';\n  @Input() columns: Column[] = [];\n  \n  @Output() columnCreated = new EventEmitter<void>();\n  @Output() columnUpdated = new EventEmitter<void>();\n  @Output() columnDeleted = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n\n  isVisible = false;\n  isEditing = false;\n  isLoading = false;\n  errorMessage = '';\n  currentColumn: Column | null = null;\n\n  predefinedColors = [\n    '#3B82F6', // Blue\n    '#EF4444', // Red\n    '#10B981', // Green\n    '#F59E0B', // Amber\n    '#8B5CF6', // Violet\n    '#EC4899', // Pink\n    '#6B7280', // Gray\n    '#F97316', // Orange\n    '#06B6D4', // Cyan\n    '#84CC16', // Lime\n    '#14B8A6', // Teal\n    '#F43F5E', // Rose\n    '#A855F7', // Purple\n    '#EAB308', // Yellow\n    '#059669', // Emerald\n    '#DC2626'  // Red-600\n  ];\n\n  columnForm: FormGroup = this.fb.group({\n    name: ['', [Validators.required]],\n    color: [this.predefinedColors[0]], // Usar primeira cor da paleta como padr√£o\n    endStageType: ['none'],\n    slaDays: [0, [Validators.min(0)]],\n    isInitialPhase: [false]\n  });\n\n  endStageTypes = [\n    { value: 'none', label: 'Nenhuma (fase normal)' },\n    { value: 'success', label: 'Sucesso (lead convertido)' },\n    { value: 'fail', label: 'Fracasso (lead perdido)' }\n  ];\n\n  showCreateModal() {\n    this.isEditing = false;\n    this.currentColumn = null;\n    this.isVisible = true;\n    this.resetForm();\n  }\n\n  showEditModal(column: Column) {\n    this.isEditing = true;\n    this.currentColumn = column;\n    this.isVisible = true;\n    this.populateForm(column);\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.resetForm();\n    this.closeModal.emit();\n  }\n\n  private resetForm() {\n    // Selecionar cor baseada no n√∫mero de colunas existentes\n    const defaultColor = this.getNextAvailableColor();\n    \n    this.columnForm.reset({\n      name: '',\n      color: defaultColor,\n      endStageType: 'none',\n      slaDays: 0,\n      isInitialPhase: false\n    });\n    this.errorMessage = '';\n    this.isLoading = false;\n  }\n\n  private getNextAvailableColor(): string {\n    // Cores j√° usadas pelas colunas existentes\n    const usedColors = this.columns.map(col => col.color).filter(color => color);\n    \n    // Encontrar primeira cor dispon√≠vel que n√£o est√° sendo usada\n    for (const color of this.predefinedColors) {\n      if (!usedColors.includes(color)) {\n        return color;\n      }\n    }\n    \n    // Se todas as cores est√£o sendo usadas, retornar cor baseada no √≠ndice\n    const colorIndex = this.columns.length % this.predefinedColors.length;\n    return this.predefinedColors[colorIndex];\n  }\n\n  private populateForm(column: Column) {\n    this.columnForm.patchValue({\n      name: column.name,\n      color: column.color || '#3B82F6',\n      endStageType: column.endStageType || 'none',\n      slaDays: column.slaDays || 0,\n      isInitialPhase: (column as any).isInitialPhase || false\n    });\n  }\n\n  async saveColumn() {\n    if (!this.columnForm.valid) {\n      this.errorMessage = 'Por favor, preencha todos os campos obrigat√≥rios.';\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    try {\n      const formData = this.columnForm.value;\n      const currentUser = this.authService.getCurrentUser();\n      \n      if (!currentUser) {\n        throw new Error('Usu√°rio n√£o autenticado');\n      }\n\n      if (this.isEditing && this.currentColumn) {\n        // Atualizar coluna existente\n        await this.firestoreService.updateColumn(\n          this.ownerId,\n          this.boardId,\n          this.currentColumn.id!,\n          {\n            name: formData.name,\n            color: formData.color,\n            endStageType: formData.endStageType,\n            slaDays: formData.slaDays,\n            isInitialPhase: formData.isInitialPhase,\n            updatedAt: new Date()\n          }\n        );\n\n        // Garantir unicidade da fase inicial\n        if (formData.isInitialPhase) {\n          await this.firestoreService.unsetOtherInitialPhases(this.boardId, this.currentColumn.id!);\n        }\n        this.columnUpdated.emit();\n      } else {\n        // Criar nova coluna\n        const nextOrder = Math.max(...this.columns.map(col => col.order || 0), -1) + 1;\n        \n        const newColumn: Omit<Column, 'id'> = {\n          name: formData.name,\n          color: formData.color,\n          order: nextOrder,\n          endStageType: formData.endStageType,\n          slaDays: formData.slaDays,\n          isInitialPhase: formData.isInitialPhase,\n          boardId: this.boardId,\n          companyId: '', // Ser√° preenchido pelo FirestoreService\n          createdAt: new Date(),\n          updatedAt: new Date()\n        };\n\n        const created = await this.firestoreService.createColumn(this.ownerId, this.boardId, newColumn);\n        // Se marcada como inicial, desmarcar as demais\n        if (formData.isInitialPhase && created?.id) {\n          await this.firestoreService.unsetOtherInitialPhases(this.boardId, created.id);\n        }\n        this.columnCreated.emit();\n      }\n\n      this.hide();\n    } catch (error: any) {\n      console.error('Erro ao salvar coluna:', error);\n      this.errorMessage = 'Erro ao salvar fase. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    if (event.target === event.currentTarget) {\n      this.hide();\n    }\n  }\n\n  getFieldError(fieldName: string): string {\n    const control = this.columnForm.get(fieldName);\n    if (control?.errors && control.touched) {\n      if (control.errors['required']) {\n        return `${this.getFieldLabel(fieldName)} √© obrigat√≥rio`;\n      }\n    }\n    return '';\n  }\n\n  getFieldLabel(fieldName: string): string {\n    const labels: any = {\n      'name': 'Nome da Fase',\n      'color': 'Cor',\n      'endStageType': 'Tipo de Finaliza√ß√£o',\n      'slaDays': 'SLA (dias)'\n    };\n    return labels[fieldName] || fieldName;\n  }\n\n  async deleteColumn() {\n    if (!this.currentColumn || !this.currentColumn.id) {\n      return;\n    }\n\n    const confirmed = confirm(`Deseja excluir a fase \"${this.currentColumn.name}\"? Esta a√ß√£o n√£o pode ser desfeita.`);\n    if (!confirmed) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    try {\n      await this.firestoreService.deleteColumn(\n        this.ownerId,\n        this.boardId,\n        this.currentColumn.id\n      );\n\n      this.columnDeleted.emit();\n      this.hide();\n    } catch (error: any) {\n      console.error('Erro ao excluir coluna:', error);\n      this.errorMessage = 'Erro ao excluir fase. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}","<div *ngIf=\"isVisible\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\" (click)=\"onBackdropClick($event)\">\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-y-auto\">\n    <!-- Header -->\n    <div class=\"flex justify-between items-center p-6 border-b border-gray-200\">\n      <h2 class=\"text-2xl font-bold text-gray-900\">\n        {{ isEditing ? 'Editar Fase' : 'Nova Fase' }}\n      </h2>\n      <button \n        (click)=\"hide()\" \n        class=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n        [disabled]=\"isLoading\">\n        &times;\n      </button>\n    </div>\n\n    <!-- Form -->\n    <form [formGroup]=\"columnForm\" (ngSubmit)=\"saveColumn()\" class=\"p-6\">\n      <div class=\"space-y-4\">\n        <!-- Nome da Fase -->\n        <div class=\"form-group\">\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Nome da Fase\n            <span class=\"text-red-500\">*</span>\n          </label>\n          <input \n            type=\"text\"\n            id=\"name\"\n            formControlName=\"name\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"columnForm.get('name')?.invalid && columnForm.get('name')?.touched\"\n            [disabled]=\"isLoading\"\n            placeholder=\"Digite o nome da fase\">\n          \n          <div *ngIf=\"getFieldError('name')\" class=\"text-red-500 text-sm mt-1\">\n            {{ getFieldError('name') }}\n          </div>\n        </div>\n\n        <!-- Cor da Fase -->\n        <div class=\"form-group\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Cor da Fase\n          </label>\n          \n          <!-- Paleta de Cores Predefinidas -->\n          <div class=\"grid grid-cols-8 gap-2 mb-3 p-3 bg-gray-50 rounded-lg\">\n            <div\n              *ngFor=\"let color of predefinedColors; let i = index\"\n              class=\"color-swatch w-10 h-10 rounded-lg border-2 transition-all duration-200 hover:scale-105 hover:shadow-md relative cursor-pointer\"\n              [style]=\"'background-color: ' + color + ' !important;'\"\n              [class.border-gray-800]=\"columnForm.get('color')?.value === color\"\n              [class.border-gray-300]=\"columnForm.get('color')?.value !== color\"\n              [class.ring-2]=\"columnForm.get('color')?.value === color\"\n              [class.ring-blue-500]=\"columnForm.get('color')?.value === color\"\n              (click)=\"!isLoading && columnForm.patchValue({color: color})\"\n              [title]=\"color\"\n              [attr.data-color]=\"color\"\n              [attr.data-index]=\"i\">\n              \n              <!-- Checkmark para cor selecionada -->\n              <div *ngIf=\"columnForm.get('color')?.value === color\" \n                   class=\"absolute inset-0 flex items-center justify-center\">\n                <i class=\"fas fa-check text-white text-sm drop-shadow-md\"></i>\n              </div>\n              \n            </div>\n          </div>\n          \n          <!-- Seletor de Cor Customizada -->\n          <div class=\"flex items-center gap-2\">\n            <label class=\"text-sm text-gray-600\">Cor personalizada:</label>\n            <input \n              type=\"color\"\n              formControlName=\"color\"\n              class=\"w-12 h-8 border border-gray-300 rounded cursor-pointer\"\n              [disabled]=\"isLoading\"\n              title=\"Escolher cor personalizada\">\n            <span class=\"text-xs text-gray-500 ml-1\">{{ columnForm.get('color')?.value }}</span>\n          </div>\n        </div>\n\n        <!-- Tipo de Finaliza√ß√£o -->\n        <div class=\"form-group\">\n          <label for=\"endStageType\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Tipo de Finaliza√ß√£o\n          </label>\n          <select \n            id=\"endStageType\"\n            formControlName=\"endStageType\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [disabled]=\"isLoading\">\n            <option *ngFor=\"let type of endStageTypes\" [value]=\"type.value\">\n              {{ type.label }}\n            </option>\n          </select>\n          <p class=\"text-xs text-gray-500 mt-1\">\n            Fases de finaliza√ß√£o n√£o permitem que leads sejam movidos para outras fases.\n          </p>\n        </div>\n\n        <!-- SLA em Dias -->\n        <div class=\"form-group\">\n          <label for=\"slaDays\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            SLA (dias)\n          </label>\n          <input \n            type=\"number\"\n            id=\"slaDays\"\n            formControlName=\"slaDays\"\n            min=\"0\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n            [class.border-red-500]=\"columnForm.get('slaDays')?.invalid && columnForm.get('slaDays')?.touched\"\n            [disabled]=\"isLoading\"\n            placeholder=\"Ex: 3\">\n          \n          <div *ngIf=\"getFieldError('slaDays')\" class=\"text-red-500 text-sm mt-1\">\n            {{ getFieldError('slaDays') }}\n          </div>\n          <p class=\"text-xs text-gray-500 mt-1\">\n            Defina um prazo em dias para esta fase. Use 0 para desabilitar o SLA.\n          </p>\n        </div>\n\n        <!-- Fase Inicial -->\n        <div class=\"form-group\">\n          <label class=\"flex items-center space-x-2\">\n            <input \n              type=\"checkbox\"\n              formControlName=\"isInitialPhase\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              [disabled]=\"isLoading\">\n            <span class=\"text-sm font-medium text-gray-700\">\n              Esta √© a fase inicial\n            </span>\n          </label>\n          <p class=\"text-xs text-gray-500 mt-1\">\n            A fase inicial ser√° usada automaticamente ao criar novos registros.\n          </p>\n        </div>\n\n        <!-- Error Message -->\n        <div *ngIf=\"errorMessage\" class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\n          {{ errorMessage }}\n        </div>\n\n        <!-- Informa√ß√µes Adicionais -->\n        <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n          <div class=\"flex items-start\">\n            <i class=\"fas fa-info-circle text-blue-500 mt-0.5 mr-2\"></i>\n            <div class=\"text-sm text-blue-700\">\n              <strong>Dica:</strong>\n              <ul class=\"mt-1 ml-2 list-disc\">\n                <li>Organize suas fases na ordem do seu funil de vendas</li>\n                <li>Use cores diferentes para facilitar a identifica√ß√£o</li>\n                <li>Fases de <strong>Sucesso</strong> indicam leads convertidos</li>\n                <li>Fases de <strong>Fracasso</strong> indicam leads perdidos</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"flex justify-between mt-6 pt-4 border-t border-gray-200\">\n        <!-- Delete button (only when editing) -->\n        <button \n          *ngIf=\"isEditing\"\n          type=\"button\" \n          (click)=\"deleteColumn()\"\n          class=\"px-4 py-2 text-red-700 bg-red-100 hover:bg-red-200 rounded-lg font-medium transition-colors flex items-center\"\n          [disabled]=\"isLoading\">\n          <i class=\"fas fa-trash mr-2\"></i>\n          Excluir Fase\n        </button>\n        <div *ngIf=\"!isEditing\"></div>\n        \n        <!-- Right side buttons -->\n        <div class=\"flex gap-3\">\n          <button \n            type=\"button\" \n            (click)=\"hide()\"\n            class=\"px-4 py-2 text-gray-700 bg-gray-200 hover:bg-gray-300 rounded-lg font-medium transition-colors\"\n            [disabled]=\"isLoading\">\n            Cancelar\n          </button>\n          \n          <button \n            type=\"submit\" \n            [disabled]=\"isLoading || !columnForm.valid\"\n            class=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white rounded-lg font-medium transition-colors flex items-center\">\n            <div *ngIf=\"isLoading\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n            {{ isLoading ? 'Salvando...' : (isEditing ? 'Atualizar Fase' : 'Criar Fase') }}\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { CdkDragDrop, DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { SubdomainService } from '../../services/subdomain.service';\n\ninterface FormField {\n  name: string;\n  label: string;\n  type: string;\n  required: boolean;\n  order: number;\n  options?: string[];\n  placeholder?: string;\n  includeInApi?: boolean; // Flag para indicar se o campo deve ser inclu√≠do na API\n  apiFieldName?: string; // Nome do campo na API (se diferente do nome)\n  showInCard?: boolean; // Flag para indicar se o campo deve ser exibido no card\n  requiredToAdvance?: boolean; // Obrigat√≥rio para avan√ßar de fase\n  showInAllPhases?: boolean; // Exibir em todas as fases\n  showInFilters?: boolean; // Exibir nos filtros avan√ßados\n}\n\n@Component({\n  selector: 'app-visual-form-builder',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, DragDropModule],\n  templateUrl: './visual-form-builder.html',\n  styleUrls: ['./visual-form-builder.scss']\n})\nexport class VisualFormBuilderComponent implements OnInit {\n  @Input() fields: FormField[] = [];\n  @Output() fieldsChanged = new EventEmitter<FormField[]>();\n\n  private fb = inject(FormBuilder);\n  private subdomainService = inject(SubdomainService);\n  \n  fieldsForm: FormGroup;\n  editingField: FormField | null = null;\n  editingIndex: number = -1;\n  selectedFieldType: string = '';\n  selectedField: FormField | null = null;\n  // Delete confirmation state\n  showDeleteConfirm: boolean = false;\n  fieldPendingDeleteIndex: number = -1;\n  \n  fieldTypes = [\n    { value: 'text', label: 'Texto' },\n    { value: 'email', label: 'E-mail' },\n    { value: 'tel', label: 'Telefone' },\n    { value: 'number', label: 'N√∫mero' },\n    { value: 'cnpj', label: 'CNPJ' },\n    { value: 'cpf', label: 'CPF' },\n    { value: 'temperatura', label: 'Temperatura' },\n    { value: 'responsavel', label: 'Respons√°vel' },\n    { value: 'textarea', label: '√Årea de Texto' },\n    { value: 'select', label: 'Lista Suspensa' },\n    { value: 'checkbox', label: 'Checkbox' },\n    { value: 'radio', label: 'Bot√£o de R√°dio' },\n    { value: 'date', label: 'Data' },\n    { value: 'time', label: 'Hora' },\n    { value: 'file', label: 'Upload de Arquivo' }\n  ];\n\n  constructor() {\n    this.fieldsForm = this.fb.group({\n      name: ['', Validators.required],\n      label: ['', Validators.required],\n      type: ['text', Validators.required],\n      required: [false],\n      placeholder: [''],\n      options: [''],\n      includeInApi: [true], // Por padr√£o, incluir na API\n      apiFieldName: [''], // Nome personalizado na API\n      showInCard: [false], // Por padr√£o, n√£o exibir no card\n      requiredToAdvance: [false],\n      showInAllPhases: [false],\n      showInFilters: [false] // Por padr√£o, n√£o exibir nos filtros\n    });\n\n    // Listener para automaticamente marcar \"showInAllPhases\" quando \"showInCard\" for marcado\n    this.fieldsForm.get('showInCard')?.valueChanges.subscribe(showInCard => {\n      if (showInCard) {\n        this.fieldsForm.patchValue({ showInAllPhases: true }, { emitEvent: false });\n      }\n    });\n\n    // Listener para automaticamente desmarcar \"showInCard\" quando \"showInAllPhases\" for desmarcado\n    this.fieldsForm.get('showInAllPhases')?.valueChanges.subscribe(showInAllPhases => {\n      if (!showInAllPhases) {\n        this.fieldsForm.patchValue({ showInCard: false }, { emitEvent: false });\n      }\n    });\n  }\n\n  ngOnInit() {\n    // Inicializar com campos existentes se fornecidos\n    if (this.fields && this.fields.length > 0) {\n      this.emitFieldsChange();\n    }\n  }\n\n  // Open styled confirm modal\n  openRemoveField(index: number) {\n    this.fieldPendingDeleteIndex = index;\n    this.showDeleteConfirm = true;\n  }\n\n  cancelRemoveField() {\n    this.showDeleteConfirm = false;\n    this.fieldPendingDeleteIndex = -1;\n  }\n\n  confirmRemoveField() {\n    if (this.fieldPendingDeleteIndex < 0) return;\n    this.removeField(this.fieldPendingDeleteIndex);\n    this.cancelRemoveField();\n  }\n\n  // Perform removal (no prompt)\n  removeField(index: number) {\n    this.fields.splice(index, 1);\n    // Reset selection if removing selected field\n    if (this.selectedField === this.fields[index]) {\n      this.selectedField = null;\n      this.selectedFieldType = '';\n    }\n    this.emitFieldsChange();\n  }\n\n  moveFieldUp(index: number) {\n    if (index > 0) {\n      const temp = this.fields[index];\n      this.fields[index] = this.fields[index - 1];\n      this.fields[index - 1] = temp;\n      this.updateFieldOrders();\n      this.emitFieldsChange();\n    }\n  }\n\n  moveFieldDown(index: number) {\n    if (index < this.fields.length - 1) {\n      const temp = this.fields[index];\n      this.fields[index] = this.fields[index + 1];\n      this.fields[index + 1] = temp;\n      this.updateFieldOrders();\n      this.emitFieldsChange();\n    }\n  }\n\n  onDrop(event: CdkDragDrop<FormField[]>) {\n    moveItemInArray(this.fields, event.previousIndex, event.currentIndex);\n    this.updateFieldOrders();\n    this.emitFieldsChange();\n  }\n\n  private resetForm() {\n    this.fieldsForm.reset({\n      type: 'text',\n      required: false,\n      includeInApi: true,\n      showInCard: false,\n      requiredToAdvance: false,\n      showInAllPhases: false,\n      showInFilters: false\n    });\n  }\n\n  private updateFieldOrders() {\n    this.fields.forEach((field, index) => {\n      field.order = index;\n    });\n  }\n\n  private emitFieldsChange() {\n    console.log('üì§ emitFieldsChange CHAMADO');\n    console.log('üì§ Total de campos:', this.fields?.length);\n    console.log('üì§ Campos atuais:', this.fields);\n    \n    // Log detalhado dos campos sendo emitidos\n    this.fields?.forEach((field, index) => {\n      console.log(`üì§ Campo emitido ${index + 1}:`, {\n        name: field.name,\n        label: field.label,\n        type: field.type,\n        showInCard: field.showInCard,\n        showInAllPhases: field.showInAllPhases,\n        showInFilters: field.showInFilters,\n        completeField: field\n      });\n    });\n    \n    this.fieldsChanged.emit([...this.fields]);\n    console.log('üì§ emitFieldsChange CONCLU√çDO - fieldsChanged.emit() executado');\n  }\n\n  // M√©todo para obter tipo de campo formatado\n  getFieldTypeLabel(type: string): string {\n    const fieldType = this.fieldTypes.find(ft => ft.value === type);\n    return fieldType ? fieldType.label : type;\n  }\n\n  // Novos m√©todos para o layout Form.io\n  selectFieldType(type: string) {\n    this.selectedFieldType = type;\n    this.fieldsForm.patchValue({ type });\n    \n    // Auto-gerar nome se estiver vazio\n    if (!this.fieldsForm.get('name')?.value) {\n      const baseName = type + (this.fields.length + 1);\n      this.fieldsForm.patchValue({ name: baseName });\n    }\n  }\n\n  selectField(field: FormField, index: number) {\n    this.selectedField = field;\n    this.editField(index);\n  }\n\n  getFieldTypeIcon(type: string): string {\n    const icons: { [key: string]: string } = {\n      'text': 'fas fa-font',\n      'email': 'fas fa-envelope',\n      'tel': 'fas fa-phone',\n      'number': 'fas fa-hashtag',\n      'cnpj': 'fas fa-building',\n      'cpf': 'fas fa-id-card',\n      'temperatura': 'fas fa-thermometer-half',\n      'responsavel': 'fas fa-user',\n      'textarea': 'fas fa-align-left',\n      'select': 'fas fa-list',\n      'checkbox': 'fas fa-check-square',\n      'radio': 'fas fa-dot-circle',\n      'date': 'fas fa-calendar',\n      'time': 'fas fa-clock',\n      'file': 'fas fa-upload'\n    };\n    return icons[type] || 'fas fa-question';\n  }\n\n  getFieldTypeDescription(type: string): string {\n    const descriptions: { [key: string]: string } = {\n      'text': 'Campo de texto simples',\n      'email': 'Campo de e-mail com valida√ß√£o',\n      'tel': 'Telefone com m√°scara DDD Brasil',\n      'number': 'Campo num√©rico',\n      'cnpj': 'CNPJ com m√°scara e valida√ß√£o',\n      'cpf': 'CPF com m√°scara e valida√ß√£o',\n      'temperatura': 'Lista suspensa (Quente, Morno, Frio)',\n      'responsavel': 'Lista de usu√°rios da empresa',\n      'textarea': '√Årea de texto multilinha',\n      'select': 'Lista suspensa',\n      'checkbox': 'Caixa de sele√ß√£o',\n      'radio': 'Bot√µes de sele√ß√£o √∫nica',\n      'date': 'Seletor de data',\n      'time': 'Seletor de hora',\n      'file': 'Upload de arquivos'\n    };\n    return descriptions[type] || 'Campo personalizado';\n  }\n\n  addField() {\n    console.log('‚ûï addField INICIADO');\n    const formValue = this.fieldsForm.value;\n    console.log('‚ûï Valores do formul√°rio:', formValue);\n    \n    if (!formValue.name || !formValue.label) {\n      console.log('‚ûï ERRO: Nome e r√≥tulo s√£o obrigat√≥rios');\n      alert('Nome e r√≥tulo s√£o obrigat√≥rios');\n      return;\n    }\n\n    // Verificar se nome j√° existe\n    if (this.fields.some(f => f.name === formValue.name && this.editingIndex === -1)) {\n      console.log('‚ûï ERRO: J√° existe um campo com este nome');\n      alert('J√° existe um campo com este nome');\n      return;\n    }\n\n    // Garantir que se showInCard for true, showInAllPhases tamb√©m seja true\n    const showInCard = formValue.showInCard || false;\n    const showInAllPhases = showInCard ? true : (formValue.showInAllPhases || false);\n    \n    console.log('‚ûï Configura√ß√µes de visibilidade:', { showInCard, showInAllPhases });\n\n    const newField: FormField = {\n      name: formValue.name,\n      label: formValue.label,\n      type: formValue.type || this.selectedFieldType,\n      required: formValue.required || false,\n      order: this.editingIndex >= 0 ? this.fields[this.editingIndex].order : this.fields.length,\n      includeInApi: formValue.includeInApi !== false, // Default true\n      showInCard: showInCard,\n      requiredToAdvance: formValue.requiredToAdvance || false,\n      showInAllPhases: showInAllPhases,\n      showInFilters: formValue.showInFilters || false,\n      // S√≥ incluir propriedades que n√£o sejam undefined\n      ...(formValue.placeholder && formValue.placeholder.trim() && { placeholder: formValue.placeholder.trim() }),\n      ...(formValue.apiFieldName && formValue.apiFieldName.trim() && { apiFieldName: formValue.apiFieldName.trim() })\n    };\n\n    console.log('‚ûï Novo campo criado:', newField);\n\n    // Processar op√ß√µes para select, radio e temperatura\n    if ((newField.type === 'select' || newField.type === 'radio') && formValue.options) {\n      newField.options = formValue.options\n        .split('\\n')\n        .map((opt: string) => opt.trim())\n        .filter((opt: string) => opt);\n      console.log('‚ûï Op√ß√µes processadas para select/radio:', newField.options);\n    }\n\n    // Auto-configurar op√ß√µes para campo temperatura\n    if (newField.type === 'temperatura') {\n      newField.options = ['Quente', 'Morno', 'Frio'];\n      console.log('‚ûï Op√ß√µes auto-configuradas para temperatura:', newField.options);\n    }\n\n    console.log('‚ûï Campo final antes de adicionar:', newField);\n\n    if (this.editingIndex >= 0) {\n      // Editando campo existente\n      console.log('‚ûï EDITANDO campo existente no √≠ndice:', this.editingIndex);\n      this.fields[this.editingIndex] = newField;\n      this.editingIndex = -1;\n      this.selectedField = null;\n    } else {\n      // Adicionando novo campo\n      console.log('‚ûï ADICIONANDO novo campo');\n      console.log('‚ûï Array antes do push:', this.fields);\n      this.fields.push(newField);\n      console.log('‚ûï Array depois do push:', this.fields);\n    }\n\n    console.log('‚ûï Total de campos ap√≥s opera√ß√£o:', this.fields.length);\n    this.resetForm();\n    console.log('‚ûï Chamando emitFieldsChange...');\n    this.emitFieldsChange();\n    console.log('‚ûï addField CONCLU√çDO');\n  }\n\n  editField(index: number) {\n    const field = this.fields[index];\n    this.editingIndex = index;\n    this.editingField = { ...field };\n    this.selectedFieldType = field.type;\n    this.selectedField = field;\n\n    this.fieldsForm.patchValue({\n      name: field.name,\n      label: field.label,\n      type: field.type,\n      required: field.required,\n      placeholder: field.placeholder || '',\n      options: field.options ? field.options.join('\\n') : '',\n      includeInApi: field.includeInApi !== false, // Default true se n√£o especificado\n      apiFieldName: field.apiFieldName || '',\n      showInCard: field.showInCard || false, // Default false se n√£o especificado\n      requiredToAdvance: field.requiredToAdvance || false,\n      showInAllPhases: field.showInAllPhases || false,\n      showInFilters: field.showInFilters || false\n    });\n  }\n\n  cancelEdit() {\n    this.editingIndex = -1;\n    this.editingField = null;\n    this.selectedField = null;\n    this.selectedFieldType = '';\n    this.resetForm();\n  }\n\n  getPrimaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.primaryColor || company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n\n  getPlaceholderExample(type: string): string {\n    const examples: { [key: string]: string } = {\n      'text': 'Ex: Digite seu nome',\n      'email': 'Ex: usuario@exemplo.com',\n      'tel': 'Ex: (11) 99999-9999',\n      'number': 'Ex: 123',\n      'cnpj': 'Ex: 00.000.000/0000-00',\n      'cpf': 'Ex: 000.000.000-00',\n      'textarea': 'Ex: Digite suas observa√ß√µes...',\n      'date': '',\n      'time': ''\n    };\n    return examples[type] || 'Ex: Digite aqui';\n  }\n\n  // Gerar estrutura de dados para API baseada nos campos marcados\n  generateApiSchema(): any {\n    const apiFields = this.fields.filter(field => field.includeInApi !== false);\n    \n    const schema = {\n      fields: apiFields.map(field => ({\n        name: field.apiFieldName || field.name,\n        originalName: field.name,\n        label: field.label,\n        type: this.mapFieldTypeForApi(field.type),\n        required: field.required,\n        validation: this.getValidationRules(field),\n        ...(field.options && { options: field.options })\n      })),\n      totalFields: apiFields.length,\n      generatedAt: new Date().toISOString()\n    };\n\n    return schema;\n  }\n\n  // Mapear tipos de campo para tipos da API\n  private mapFieldTypeForApi(fieldType: string): string {\n    const typeMap: { [key: string]: string } = {\n      'text': 'string',\n      'email': 'email',\n      'tel': 'phone',\n      'number': 'number',\n      'cnpj': 'cnpj',\n      'cpf': 'cpf',\n      'temperatura': 'enum',\n      'responsavel': 'string',\n      'textarea': 'text',\n      'select': 'enum',\n      'checkbox': 'boolean',\n      'radio': 'enum',\n      'date': 'date',\n      'time': 'time',\n      'file': 'file'\n    };\n    return typeMap[fieldType] || 'string';\n  }\n\n  // Obter regras de valida√ß√£o para a API\n  private getValidationRules(field: FormField): any {\n    const rules: any = {};\n    \n    if (field.required) {\n      rules.required = true;\n    }\n\n    switch (field.type) {\n      case 'email':\n        rules.format = 'email';\n        break;\n      case 'cnpj':\n        rules.format = 'cnpj';\n        rules.mask = '00.000.000/0000-00';\n        break;\n      case 'cpf':\n        rules.format = 'cpf';\n        rules.mask = '000.000.000-00';\n        break;\n      case 'tel':\n        rules.format = 'phone';\n        rules.mask = '(00) 00000-0000';\n        break;\n      case 'temperatura':\n      case 'select':\n      case 'radio':\n        if (field.options) {\n          rules.enum = field.options;\n        }\n        break;\n      case 'file':\n        rules.type = 'file';\n        if (field.placeholder === 'multiple') {\n          rules.multiple = true;\n        }\n        break;\n    }\n\n    return rules;\n  }\n\n  // Mostrar schema da API no console e como alerta\n  showApiSchema(): void {\n    const schema = this.generateApiSchema();\n    const jsonSchema = JSON.stringify(schema, null, 2);\n    \n    console.log('üìã Schema da API gerado:', schema);\n    console.log('üìã JSON Schema:', jsonSchema);\n    \n    // Mostrar em um alert formatado (para desenvolvimento)\n    const summary = `\nüìã Schema da API - Resumo:\n\n‚úÖ Campos na API: ${schema.totalFields}/${this.fields.length}\nüìÖ Gerado em: ${new Date().toLocaleString('pt-BR')}\n\nüîó Campos inclu√≠dos na API:\n${schema.fields.map((f: any) => `‚Ä¢ ${f.label} (${f.name}) - Tipo: ${f.type}${f.required ? ' *' : ''}`).join('\\n')}\n\nüìã Schema completo salvo no console para c√≥pia.\n    `;\n    \n    alert(summary);\n  }\n}","<div class=\"form-builder h-full flex bg-gray-50\">\n  <!-- Painel Esquerdo - Tipos de Campo -->\n  <div class=\"w-64 bg-white border-r border-gray-200 flex flex-col\">\n    <div class=\"p-4 border-b border-gray-200\">\n      <h3 class=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">Tipos de Campo</h3>\n    </div>\n    \n    <div class=\"flex-1 p-3 space-y-2 overflow-y-auto\">\n      <div \n        *ngFor=\"let fieldType of fieldTypes\"\n        class=\"field-type-item p-3 border border-gray-300 rounded-lg cursor-pointer hover:border-blue-400 hover:bg-blue-50 transition-colors\"\n        (click)=\"selectFieldType(fieldType.value)\"\n        [class.selected]=\"selectedFieldType === fieldType.value\">\n        \n        <div class=\"flex items-center space-x-3\">\n          <div class=\"w-8 h-8 bg-gray-100 rounded-md flex items-center justify-center\">\n            <i [class]=\"getFieldTypeIcon(fieldType.value)\" class=\"text-gray-600 text-sm\"></i>\n          </div>\n          <div>\n            <div class=\"text-sm font-medium text-gray-900\">{{ fieldType.label }}</div>\n            <div class=\"text-xs text-gray-500\">{{ getFieldTypeDescription(fieldType.value) }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Painel Central - Configura√ß√µes -->\n  <div class=\"w-80 bg-white border-r border-gray-200 flex flex-col\">\n    <div class=\"p-4 border-b border-gray-200\">\n      <h3 class=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">\n        {{ selectedField ? 'Propriedades do Campo' : 'Configura√ß√µes' }}\n      </h3>\n    </div>\n    \n    <div class=\"flex-1 p-4 overflow-y-auto\">\n      <!-- Formul√°rio de Configura√ß√£o -->\n      <form [formGroup]=\"fieldsForm\" *ngIf=\"selectedFieldType\" class=\"space-y-4\">\n        <!-- Nome do Campo -->\n        <div>\n          <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n            Nome do Campo *\n          </label>\n          <input\n            type=\"text\"\n            formControlName=\"name\"\n            class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"Ex: nomeCompleto\">\n        </div>\n\n        <!-- R√≥tulo do Campo -->\n        <div>\n          <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n            R√≥tulo do Campo *\n          </label>\n          <input\n            type=\"text\"\n            formControlName=\"label\"\n            class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"Ex: Nome Completo\">\n        </div>\n\n        <!-- Placeholder -->\n        <div *ngIf=\"!['radio', 'checkbox', 'temperatura', 'file'].includes(selectedFieldType)\">\n          <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n            Placeholder\n          </label>\n          <input\n            type=\"text\"\n            formControlName=\"placeholder\"\n            class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            [placeholder]=\"getPlaceholderExample(selectedFieldType)\">\n        </div>\n\n        <!-- Configura√ß√£o especial para arquivo -->\n        <div *ngIf=\"selectedFieldType === 'file'\">\n          <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n            Configura√ß√µes do Arquivo\n          </label>\n          <label class=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              [checked]=\"fieldsForm.get('placeholder')?.value === 'multiple'\"\n              (change)=\"fieldsForm.patchValue({placeholder: $any($event.target).checked ? 'multiple' : ''})\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n            <span class=\"text-sm text-gray-700\">Permitir m√∫ltiplos arquivos</span>\n          </label>\n        </div>\n\n        <!-- Op√ß√µes (para select e radio) -->\n        <div *ngIf=\"selectedFieldType === 'select' || selectedFieldType === 'radio'\">\n          <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n            Op√ß√µes *\n          </label>\n          <textarea\n            formControlName=\"options\"\n            rows=\"4\"\n            class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"Digite uma op√ß√£o por linha:&#10;Op√ß√£o 1&#10;Op√ß√£o 2&#10;Op√ß√£o 3\"></textarea>\n          <div class=\"text-xs text-gray-500 mt-1\">Uma op√ß√£o por linha</div>\n        </div>\n\n        <!-- Informa√ß√£o sobre campo Respons√°vel -->\n        <div *ngIf=\"selectedFieldType === 'responsavel'\" class=\"p-3 bg-blue-50 border border-blue-200 rounded-md\">\n          <div class=\"flex items-start\">\n            <i class=\"fas fa-info-circle text-blue-500 mr-2 mt-0.5\"></i>\n            <div class=\"text-sm text-blue-700\">\n              <strong>Campo Respons√°vel:</strong><br>\n              Exibe uma lista com os usu√°rios da empresa para sele√ß√£o do respons√°vel pelo registro.\n            </div>\n          </div>\n        </div>\n\n        <!-- Informa√ß√£o sobre campo temperatura -->\n        <div *ngIf=\"selectedFieldType === 'temperatura'\" class=\"p-3 bg-blue-50 border border-blue-200 rounded-md\">\n          <div class=\"flex items-start\">\n            <i class=\"fas fa-info-circle text-blue-500 mr-2 mt-0.5\"></i>\n            <div class=\"text-sm text-blue-700\">\n              <strong>Campo Temperatura:</strong><br>\n              Este campo criar√° automaticamente uma lista suspensa com:\n              <ul class=\"mt-2 space-y-1\">\n                <li>üî• <strong>Quente</strong> - Para leads com alta probabilidade</li>\n                <li>üå§Ô∏è <strong>Morno</strong> - Para leads com m√©dia probabilidade</li>\n                <li>‚ùÑÔ∏è <strong>Frio</strong> - Para leads com baixa probabilidade</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <!-- Valida√ß√µes -->\n        <div class=\"space-y-3\">\n          <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide\">Valida√ß√µes</h4>\n          \n          <!-- Campo Obrigat√≥rio -->\n          <label class=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              formControlName=\"required\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n            <span class=\"text-sm text-gray-700\">Campo obrigat√≥rio</span>\n          </label>\n        </div>\n\n        <!-- Configura√ß√µes de API -->\n        <div class=\"space-y-3\">\n          <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide\">Integra√ß√£o API</h4>\n          \n          <!-- Incluir na API -->\n          <label class=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              formControlName=\"includeInApi\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n            <span class=\"text-sm text-gray-700\">Incluir este campo na API</span>\n          </label>\n          \n          <!-- Op√ß√µes de Exibi√ß√£o -->\n          <div class=\"bg-blue-50 border border-blue-200 rounded-md p-3 space-y-2\">\n            <p class=\"text-xs text-blue-700 font-medium mb-2\">Op√ß√µes de Exibi√ß√£o</p>\n            \n            <!-- Exibir no Card -->\n            <label class=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                formControlName=\"showInCard\"\n                class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n              <span class=\"text-sm text-gray-700\">Exibir no card do registro</span>\n            </label>\n\n            <!-- Exibir em todas as fases -->\n            <label class=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                formControlName=\"showInAllPhases\"\n                class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n              <span class=\"text-sm text-gray-700\">Exibir em todas as fases</span>\n            </label>\n\n            <!-- Exibir nos filtros -->\n            <label class=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                formControlName=\"showInFilters\"\n                class=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\">\n              <span class=\"text-sm text-gray-700\">Dispon√≠vel para filtros</span>\n            </label>\n            \n            <p class=\"text-xs text-blue-600 italic\">\n              üí° Campos vis√≠veis no card s√£o automaticamente vis√≠veis em todas as fases\n            </p>\n          </div>\n\n          <!-- Obrigat√≥rio para avan√ßar de fase -->\n          <label class=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              formControlName=\"requiredToAdvance\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n            <span class=\"text-sm text-gray-700\">Obrigat√≥rio para avan√ßar de fase</span>\n          </label>\n          \n          <!-- Nome do campo na API -->\n          <div *ngIf=\"fieldsForm.get('includeInApi')?.value\">\n            <label class=\"block text-xs font-medium text-gray-700 mb-2 uppercase tracking-wide\">\n              Nome na API (opcional)\n            </label>\n            <input\n              type=\"text\"\n              formControlName=\"apiFieldName\"\n              class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Se vazio, usar√° o nome do campo\">\n            <div class=\"text-xs text-gray-500 mt-1\">Deixe vazio para usar o nome do campo</div>\n          </div>\n        </div>\n\n        <!-- Bot√µes de A√ß√£o -->\n        <div class=\"pt-4 border-t border-gray-200 space-y-3\">\n          <button\n            type=\"button\"\n            (click)=\"addField()\"\n            [disabled]=\"fieldsForm.invalid\"\n            class=\"w-full px-4 py-2 text-white text-sm rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            [style.background-color]=\"getPrimaryColor()\">\n            {{ editingIndex >= 0 ? 'Atualizar Campo' : 'Adicionar Campo' }}\n          </button>\n          \n          <button\n            type=\"button\"\n            *ngIf=\"editingIndex >= 0\"\n            (click)=\"cancelEdit()\"\n            class=\"w-full px-4 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 transition-colors\">\n            Cancelar\n          </button>\n        </div>\n      </form>\n\n      <!-- Ajuda quando nenhum tipo selecionado -->\n      <div *ngIf=\"!selectedFieldType\" class=\"text-center py-8\">\n        <i class=\"fas fa-mouse-pointer text-gray-300 text-3xl mb-3\"></i>\n        <p class=\"text-sm text-gray-500\">Selecione um tipo de campo √† esquerda para come√ßar</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Painel Direito - Visualiza√ß√£o -->\n  <div class=\"flex-1 bg-gray-50 flex flex-col\">\n    <div class=\"p-4 bg-white border-b border-gray-200\">\n      <h3 class=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">\n        Visualiza√ß√£o do Formul√°rio\n      </h3>\n    </div>\n    \n    <!-- Lista de Campos Configurados -->\n    <div class=\"bg-white border-b border-gray-200 flex-shrink-0\" *ngIf=\"fields.length > 0\">\n      <div class=\"px-4 py-2\">\n        <div class=\"flex items-center justify-between mb-2\">\n          <div class=\"text-xs text-gray-500 uppercase tracking-wide\">\n            Campos ({{ fields.length }})\n          </div>\n          <button \n            *ngIf=\"fields.length > 0\"\n            (click)=\"showApiSchema()\"\n            class=\"text-xs text-blue-500 hover:text-blue-700 flex items-center space-x-1\"\n            title=\"Ver Schema da API\">\n            <i class=\"fas fa-code\"></i>\n            <span>API</span>\n          </button>\n        </div>\n        \n        <div cdkDropList (cdkDropListDropped)=\"onDrop($event)\" class=\"space-y-1 max-h-32 overflow-y-auto\">\n          <div\n            *ngFor=\"let field of fields; let i = index\"\n            cdkDrag\n            class=\"field-item flex items-center justify-between p-2 bg-gray-50 border border-gray-200 rounded text-xs hover:bg-gray-100 transition-colors\">\n            \n            <div class=\"flex items-center space-x-2 flex-1\">\n              <div cdkDragHandle class=\"cursor-move text-gray-400\">\n                <i class=\"fas fa-grip-vertical\"></i>\n              </div>\n              <i [class]=\"getFieldTypeIcon(field.type)\" class=\"text-gray-500\"></i>\n              <span class=\"font-medium text-gray-900 truncate\">{{ field.label }}</span>\n              <span *ngIf=\"field.required\" class=\"text-red-500 text-xs\">*</span>\n              <span *ngIf=\"field.includeInApi !== false\" class=\"text-blue-500 text-xs\" title=\"Inclu√≠do na API\">\n                <i class=\"fas fa-plug\"></i>\n              </span>\n            </div>\n\n            <div class=\"flex items-center space-x-1 flex-shrink-0\">\n              <button\n                (click)=\"editField(i)\"\n                class=\"p-1 text-gray-400 hover:text-blue-500\"\n                title=\"Editar\">\n                <i class=\"fas fa-edit\"></i>\n              </button>\n              <button\n                (click)=\"openRemoveField(i)\"\n                class=\"p-1 text-gray-400 hover:text-red-500\"\n                title=\"Remover\">\n                <i class=\"fas fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Preview do Formul√°rio -->\n    <div class=\"flex-1 p-6 overflow-y-auto\">\n      <!-- Estado vazio -->\n      <div *ngIf=\"fields.length === 0\" class=\"text-center py-16\">\n        <div class=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n          <i class=\"fas fa-wpforms text-gray-400 text-2xl\"></i>\n        </div>\n        <h4 class=\"text-lg font-medium text-gray-900 mb-2\">Formul√°rio Vazio</h4>\n        <p class=\"text-gray-500 mb-4\">Adicione campos √† esquerda para ver a visualiza√ß√£o aqui</p>\n      </div>\n\n      <!-- Preview com campos -->\n      <div *ngIf=\"fields.length > 0\" class=\"max-w-2xl mx-auto\">\n        <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <h4 class=\"text-lg font-semibold text-gray-900 mb-6\">Pr√©-visualiza√ß√£o</h4>\n          \n          <form class=\"space-y-6\">\n            <div *ngFor=\"let field of fields; let i = index\" class=\"form-field\" \n                 [class.bg-blue-50]=\"selectedField === field\"\n                 [class.border-blue-200]=\"selectedField === field\"\n                 [class.border]=\"selectedField === field\"\n                 [class.p-3]=\"selectedField === field\"\n                 [class.rounded]=\"selectedField === field\"\n                 (click)=\"selectField(field, i)\">\n              \n              <label class=\"block text-sm font-medium text-gray-900 mb-2\">\n                {{ field.label }}\n                <span *ngIf=\"field.required\" class=\"text-red-500 ml-1\">*</span>\n              </label>\n\n              <!-- Input Text, Email, Tel, Number, CNPJ, CPF -->\n              <input\n                *ngIf=\"['text', 'email', 'tel', 'number', 'date', 'time', 'cnpj', 'cpf'].includes(field.type)\"\n                [type]=\"field.type === 'cnpj' || field.type === 'cpf' ? 'text' : field.type\"\n                [placeholder]=\"field.placeholder || getPlaceholderExample(field.type)\"\n                [required]=\"field.required\"\n                disabled\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-gray-500 bg-gray-50\">\n\n              <!-- Textarea -->\n              <textarea\n                *ngIf=\"field.type === 'textarea'\"\n                [placeholder]=\"field.placeholder || ''\"\n                [required]=\"field.required\"\n                disabled\n                rows=\"3\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md resize-none text-gray-500 bg-gray-50\">\n              </textarea>\n\n              <!-- Select -->\n              <select\n                *ngIf=\"field.type === 'select'\"\n                [required]=\"field.required\"\n                disabled\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-gray-500 bg-gray-50\">\n                <option value=\"\">Selecione uma op√ß√£o</option>\n                <option *ngFor=\"let option of field.options\" [value]=\"option\">\n                  {{ option }}\n                </option>\n              </select>\n\n              <!-- Campo Temperatura -->\n              <select\n                *ngIf=\"field.type === 'temperatura'\"\n                [required]=\"field.required\"\n                disabled\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-gray-500 bg-gray-50\">\n                <option value=\"\">Selecione a temperatura</option>\n                <option *ngFor=\"let option of (field.options || ['Quente', 'Morno', 'Frio'])\" [value]=\"option\">\n                  üå°Ô∏è {{ option }}\n                  <span *ngIf=\"option === 'Quente'\">üî•</span>\n                  <span *ngIf=\"option === 'Morno'\">üå§Ô∏è</span>\n                  <span *ngIf=\"option === 'Frio'\">‚ùÑÔ∏è</span>\n                </option>\n              </select>\n\n              <!-- Radio Buttons -->\n              <div *ngIf=\"field.type === 'radio'\" class=\"space-y-2\">\n                <label *ngFor=\"let option of field.options; let j = index\" class=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    [name]=\"field.name + '_preview'\"\n                    [value]=\"option\"\n                    [required]=\"field.required\"\n                    disabled\n                    class=\"mr-2 text-gray-400\">\n                  <span class=\"text-gray-700\">{{ option }}</span>\n                </label>\n              </div>\n\n              <!-- Checkbox -->\n              <label *ngIf=\"field.type === 'checkbox'\" class=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  [required]=\"field.required\"\n                  disabled\n                  class=\"mr-2 text-gray-400\">\n                <span class=\"text-gray-700\">{{ field.placeholder || 'Aceitar termos' }}</span>\n              </label>\n\n              <!-- File Upload -->\n              <div *ngIf=\"field.type === 'file'\">\n                <input\n                  type=\"file\"\n                  [multiple]=\"field.placeholder === 'multiple'\"\n                  [required]=\"field.required\"\n                  disabled\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-gray-500 bg-gray-50\">\n                <div class=\"text-xs text-gray-500 mt-1\">\n                  {{ field.placeholder === 'multiple' ? 'M√∫ltiplos arquivos permitidos' : 'Upload de arquivo' }}\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal de confirma√ß√£o de remo√ß√£o de campo -->\n  <div *ngIf=\"showDeleteConfirm\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[60]\" (click)=\"cancelRemoveField()\">\n    <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md p-6\" (click)=\"$event.stopPropagation()\">\n      <h3 class=\"text-lg font-bold text-gray-900 mb-2\">Remover campo</h3>\n      <p class=\"text-sm text-gray-600 mb-6\">Tem certeza que deseja remover este campo do formul√°rio?</p>\n      <div class=\"flex justify-end gap-3\">\n        <button class=\"px-4 py-2 rounded-lg border border-gray-300\" (click)=\"cancelRemoveField()\">Cancelar</button>\n        <button class=\"px-4 py-2 rounded-lg bg-red-600 text-white\" (click)=\"confirmRemoveField()\">Remover</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, inject, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FirestoreService, Column } from '../../services/firestore.service';\nimport { VisualFormBuilderComponent } from '../visual-form-builder/visual-form-builder';\nimport { SubdomainService } from '../../services/subdomain.service';\n\n@Component({\n  selector: 'app-phase-form-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, VisualFormBuilderComponent],\n  template: `\n    <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\" \n         [class.hidden]=\"!isVisible\" (click)=\"onCloseModal()\">\n      <div class=\"bg-white rounded-lg p-6 w-full max-w-7xl max-h-[95vh] overflow-hidden\" \n           (click)=\"$event.stopPropagation()\">\n        \n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-xl font-bold text-gray-800\">\n            Configurar Formul√°rio da Fase: {{ currentColumn?.name }}\n          </h2>\n          <button (click)=\"onCloseModal()\" class=\"text-gray-500 hover:text-gray-700\">\n            <i class=\"fas fa-times text-xl\"></i>\n          </button>\n        </div>\n\n        <!-- Visual Form Builder -->\n        <app-visual-form-builder\n          #formBuilder\n          [fields]=\"formFields\"\n          (fieldsChanged)=\"onFieldsChanged($event)\">\n        </app-visual-form-builder>\n\n        <!-- Action Buttons -->\n        <div class=\"flex justify-end space-x-3 mt-6 pt-4 border-t\">\n          <button\n            type=\"button\"\n            (click)=\"onCloseModal()\"\n            class=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\">\n            Cancelar\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"saveFormConfig()\"\n            [disabled]=\"isSaving\"\n            class=\"px-4 py-2 text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            [style.background-color]=\"getPrimaryColor()\">\n            {{ isSaving ? 'Salvando...' : 'Salvar Configura√ß√£o' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class PhaseFormModalComponent {\n  private firestoreService = inject(FirestoreService);\n  private subdomainService = inject(SubdomainService);\n  \n  @Input() ownerId: string = '';\n  @Input() boardId: string = '';\n  @Output() formConfigSaved = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n  \n  @ViewChild('formBuilder') formBuilderComponent!: VisualFormBuilderComponent;\n  \n  isVisible: boolean = false;\n  isSaving: boolean = false;\n  currentColumn: Column | null = null;\n  currentConfig: any = null;\n  formFields: any[] = [];\n\n  showModal(column: Column, existingConfig?: any) {\n    this.currentColumn = column;\n    this.currentConfig = existingConfig;\n    this.isVisible = true;\n    \n    if (existingConfig && existingConfig.fields) {\n      this.formFields = existingConfig.fields\n        .map((field: any) => {\n          // Reconstruct temperatura fields properly\n          if (field.type === 'temperatura' && (!field.options || field.options.length === 0)) {\n            field.options = ['Quente', 'Morno', 'Frio'];\n          }\n          // Ensure all required properties exist\n          return {\n            ...field,\n            includeInApi: field.includeInApi !== false, // Default to true\n            showInCard: field.showInCard || false, // Default to false\n            requiredToAdvance: !!field.requiredToAdvance,\n            showInAllPhases: !!field.showInAllPhases,\n            order: field.order || 0\n          };\n        })\n        .sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n    } else {\n      // Sem configura√ß√£o padr√£o: come√ßar vazio\n      this.formFields = [];\n    }\n  }\n\n  onFieldsChanged(fields: any[]) {\n    this.formFields = fields;\n  }\n\n  async saveFormConfig() {\n    if (!this.currentColumn || !this.ownerId || !this.boardId) {\n      console.error('Dados necess√°rios n√£o fornecidos');\n      return;\n    }\n\n    this.isSaving = true;\n    \n    try {\n      const config = {\n        columnId: this.currentColumn.id!,\n        columnName: this.currentColumn.name,\n        fields: this.formFields.map((field, index) => {\n          // Limpar campos undefined para evitar erro do Firebase\n          const cleanField: any = {\n            name: field.name || '',\n            label: field.label || '',\n            type: field.type || 'text',\n            required: field.required || false,\n            order: index,\n            includeInApi: field.includeInApi !== false,\n            showInCard: field.showInCard || false,\n            requiredToAdvance: !!field.requiredToAdvance,\n            showInAllPhases: !!field.showInAllPhases,\n            showInFilters: !!field.showInFilters\n          };\n\n          // S√≥ adicionar se n√£o for undefined ou string vazia\n          if (field.placeholder && field.placeholder.trim()) {\n            cleanField.placeholder = field.placeholder.trim();\n          }\n          if (field.apiFieldName && field.apiFieldName.trim()) {\n            cleanField.apiFieldName = field.apiFieldName.trim();\n          }\n          if (field.options && Array.isArray(field.options) && field.options.length > 0) {\n            cleanField.options = field.options;\n          }\n          \n          // Auto-adicionar op√ß√µes para temperatura se n√£o tiver\n          if (field.type === 'temperatura' && (!field.options || field.options.length === 0)) {\n            cleanField.options = ['Quente', 'Morno', 'Frio'];\n          }\n\n          return cleanField;\n        }),\n        createdAt: this.currentConfig ? this.currentConfig.createdAt : new Date(),\n        updatedAt: new Date()\n      };\n\n      if (this.currentConfig && this.currentConfig.id) {\n        // Atualizar configura√ß√£o existente\n        await this.firestoreService.updatePhaseFormConfig(this.ownerId, this.boardId, this.currentConfig.id, config);\n      } else {\n        // Criar nova configura√ß√£o\n        await this.firestoreService.createPhaseFormConfig(this.ownerId, this.boardId, config);\n      }\n\n      console.log('‚úÖ Configura√ß√£o do formul√°rio salva com sucesso');\n      this.formConfigSaved.emit();\n      this.hideModal();\n      \n    } catch (error) {\n      console.error('‚ùå Erro ao salvar configura√ß√£o do formul√°rio:', error);\n      alert('Erro ao salvar configura√ß√£o. Tente novamente.');\n    } finally {\n      this.isSaving = false;\n    }\n  }\n\n  hideModal() {\n    this.isVisible = false;\n    this.currentColumn = null;\n    this.currentConfig = null;\n    this.formFields = [];\n  }\n\n  onCloseModal() {\n    this.hideModal();\n    this.closeModal.emit();\n  }\n\n  getPrimaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.primaryColor || company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n}","import { Component, inject, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService, Lead, Column } from '../../services/firestore.service';\nimport { StorageService } from '../../services/storage.service';\nimport { SubdomainService } from '../../services/subdomain.service';\n\nexport interface LeadHistory {\n  id?: string;\n  type: 'move' | 'comment' | 'update' | 'system';\n  text: string;\n  user?: string;\n  timestamp: any;\n  attachment?: {\n    name: string;\n    url: string;\n    type: string;\n    size: number;\n  };\n}\n\nexport interface PhaseHistory {\n  [phaseId: string]: {\n    phaseId: string;\n    enteredAt: any;\n    exitedAt?: any;\n    duration?: number;\n  };\n}\n\n@Component({\n  selector: 'app-lead-detail-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './lead-detail-modal.component.html',\n  styleUrls: ['./lead-detail-modal.component.scss']\n})\nexport class LeadDetailModalComponent {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private storageService = inject(StorageService);\n  private subdomainService = inject(SubdomainService);\n  private fb = inject(FormBuilder);\n\n  @Input() ownerId: string = '';\n  @Input() boardId: string = '';\n  @Input() columns: Column[] = [];\n  @Input() users: any[] = [];\n  \n  @Output() leadUpdated = new EventEmitter<void>();\n  @Output() leadDeleted = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n\n  isVisible = false;\n  isLoading = false;\n  isSaving = false;\n  errorMessage = '';\n  currentLead: Lead | null = null;\n  formReady = false;\n  leadHistory: LeadHistory[] = [];\n  phaseHistory: PhaseHistory = {};\n  // Fluxo de transi√ß√µes (permitidas)\n  private flowConfig: { allowed: Record<string, string[]> } = { allowed: {} };\n  \n  // Form para atualiza√ß√£o do lead\n  leadForm: FormGroup = this.fb.group({});\n  \n  // Sistema de coment√°rios\n  commentText = '';\n  selectedFile: File | null = null;\n  attachmentPreview = '';\n  isUploadingComment = false;\n  isUploadingAttachment = false;\n  showDeleteConfirm = false;\n\n  // Link p√∫blico\n  publicLink = '';\n  private unsubscribeHistory: (() => void) | null = null;\n  // Configura√ß√£o do formul√°rio inicial (somente leitura)\n  initialFormConfig: any | null = null;\n\n  async show(lead: Lead) {\n    this.currentLead = lead;\n    this.isVisible = true;\n    this.resetForm();\n    await this.loadLeadData();\n    // Repopular o formul√°rio com os dados salvos do lead\n    try {\n      const values: any = {};\n      (this.currentFormFields || []).forEach((f: any) => {\n        const key = f.apiFieldName || f.name;\n        values[f.name] = this.getFieldValue(key) ?? '';\n      });\n      if (Object.keys(values).length) {\n        this.leadForm.patchValue(values, { emitEvent: false });\n      }\n    } catch {}\n    // Subscribir hist√≥rico em tempo real\n    try {\n      if (this.unsubscribeHistory) { this.unsubscribeHistory(); this.unsubscribeHistory = null; }\n      this.unsubscribeHistory = this.firestoreService.subscribeToLeadHistory(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        (items) => { this.leadHistory = items as any; }\n      ) as any;\n    } catch {}\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.resetForm();\n    if (this.unsubscribeHistory) { this.unsubscribeHistory(); this.unsubscribeHistory = null; }\n    this.closeModal.emit();\n  }\n\n  private resetForm() {\n    this.leadForm = this.fb.group({});\n    this.commentText = '';\n    this.selectedFile = null;\n    this.attachmentPreview = '';\n    this.errorMessage = '';\n    this.publicLink = '';\n    this.leadHistory = [];\n    this.phaseHistory = {};\n    this.formReady = false;\n  }\n\n  private async loadLeadData() {\n    if (!this.currentLead) return;\n\n    try {\n      // Buscar vers√£o mais recente do lead para garantir phaseHistory atualizado\n      try {\n        const latest = await this.firestoreService.getLead(this.ownerId, this.boardId, this.currentLead.id!);\n        if (latest) {\n          this.currentLead = latest;\n        }\n      } catch {}\n\n      // Carregar hist√≥rico do lead\n      const history = await this.firestoreService.getLeadHistory(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!\n      );\n      this.leadHistory = history as LeadHistory[];\n\n      // Extrair hist√≥rico de fases\n      this.phaseHistory = this.currentLead.phaseHistory || {};\n\n      // Carregar configura√ß√£o do formul√°rio inicial do board\n      this.initialFormConfig = await this.firestoreService.getInitialFormConfig(this.boardId);\n\n      // Carregar configura√ß√£o do formul√°rio da fase atual\n      try {\n        const phaseCfg = await this.firestoreService.getPhaseFormConfig(this.ownerId, this.boardId, this.currentLead.columnId);\n        this.currentFormFields = (phaseCfg as any)?.fields || [];\n      } catch (e) {\n        console.warn('Sem configura√ß√£o da fase atual, tentando formul√°rio inicial como fallback.', e);\n        this.currentFormFields = (this.initialFormConfig?.fields || []).map((f: any) => ({ ...f }));\n      }\n\n      // Carregar fluxo de transi√ß√µes para validar movimentos e listas\n      try {\n        const cfg = await this.firestoreService.getFlowConfig(this.boardId);\n        this.flowConfig = (cfg as any) || { allowed: {} };\n      } catch {\n        this.flowConfig = { allowed: {} };\n      }\n\n      // Construir formul√°rio din√¢mico baseado na fase atual\n      await this.buildDynamicForm();\n      this.formReady = true;\n\n      // Gerar link p√∫blico\n      this.generatePublicLink();\n\n    } catch (error) {\n      console.error('Erro ao carregar dados do lead:', error);\n      this.errorMessage = 'Erro ao carregar dados do lead.';\n    }\n  }\n\n  private async buildDynamicForm() {\n    if (!this.currentLead) return;\n\n    const formConfig: any = {};\n    this.formReady = false;\n    \n    // Adicionar campos din√¢micos da fase (se configurados)\n    (this.currentFormFields || []).forEach((field: any) => {\n      const key = field.apiFieldName || field.name;\n      let currentValue = this.getFieldValue(key);\n      if (currentValue === undefined || currentValue === null || (typeof currentValue === 'string' && currentValue.trim() === '')) {\n        currentValue = this.getFieldValue(field.name);\n      }\n      // Temperatura: normalizar para uma das op√ß√µes\n      if (field.type === 'temperatura') {\n        const options = field.options && field.options.length ? field.options : ['Quente','Morno','Frio'];\n        if (typeof currentValue === 'string') {\n          const match = options.find((o: string) => o.toLowerCase() === currentValue.toLowerCase());\n          currentValue = match || '';\n        }\n      }\n      // Campo Respons√°vel: armazenar uid do usu√°rio se houver mapeamento nos campos do lead\n      if (field.type === 'responsavel') {\n        // tentar ler do lead o responsibleUserId\n        const responsibleId = this.currentLead?.responsibleUserId || currentValue;\n        formConfig[field.name] = [responsibleId ?? ''];\n      } else {\n        formConfig[field.name] = [currentValue ?? ''];\n      }\n    });\n\n    this.leadForm = this.fb.group(formConfig);\n    this.formReady = true;\n  }\n\n  getCurrentColumn(): Column | null {\n    if (!this.currentLead) return null;\n    return this.columns.find(col => col.id === this.currentLead!.columnId) || null;\n  }\n\n  getInitialColumn(): Column | null {\n    return this.columns.find(col => col.order === 0) || null;\n  }\n\n  getInitialFields(): any[] {\n    // Se houver configura√ß√£o de formul√°rio inicial, usar esses campos na ordem definida\n    if (this.initialFormConfig?.fields?.length) {\n      const sorted = this.initialFormConfig.fields\n        .sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n\n      return sorted.map((f: any) => ({\n        name: f.apiFieldName || f.name,\n        label: f.label || f.name || f.apiFieldName,\n        value: this.getFieldValue(f.apiFieldName || f.name) ?? this.getFieldValue(f.name) ?? 'N√£o informado'\n      }));\n    }\n\n    // Fallback din√¢mico com deduplica√ß√£o por grupos de sin√¥nimos\n    return this.buildDedupedDisplayFields();\n  }\n\n  currentFormFields: any[] = [];\n\n  hasRequiredToAdvance(): boolean {\n    try {\n      return Array.isArray(this.currentFormFields) && this.currentFormFields.some((f: any) => !!f?.requiredToAdvance);\n    } catch { return false; }\n  }\n\n\n  getPhaseHistoryItems(): any[] {\n    console.log('üìä Gerando hist√≥rico de fases:', {\n      leadId: this.currentLead?.id,\n      phaseHistory: this.phaseHistory,\n      phaseHistoryKeys: Object.keys(this.phaseHistory || {}),\n      phaseHistoryLength: Object.keys(this.phaseHistory || {}).length,\n      availableColumns: this.columns.map(c => ({ id: c.id, name: c.name }))\n    });\n\n    const items: any[] = [];\n    \n    Object.values(this.phaseHistory).forEach((phase: any) => {\n      const column = this.columns.find(col => col.id === phase.phaseId);\n      console.log('üìä Processando fase:', {\n        phaseId: phase.phaseId,\n        columnFound: !!column,\n        columnName: column?.name,\n        phase: phase\n      });\n\n      if (column) {\n        const enteredAt = phase.enteredAt?.toDate ? phase.enteredAt.toDate() : new Date(phase.enteredAt);\n        const exitedAt = phase.exitedAt?.toDate ? phase.exitedAt.toDate() : (phase.exitedAt ? new Date(phase.exitedAt) : null);\n        \n        let duration = '';\n        if (phase.duration) {\n          const days = Math.floor(phase.duration / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((phase.duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          if (days > 0) {\n            duration = `${days}d ${hours}h`;\n          } else {\n            duration = `${hours}h`;\n          }\n        } else if (!exitedAt) {\n          // Calcular dura√ß√£o em tempo real para fase atual\n          const now = new Date();\n          const elapsed = now.getTime() - enteredAt.getTime();\n          const days = Math.floor(elapsed / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((elapsed % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          if (days > 0) {\n            duration = `${days}d ${hours}h (em andamento)`;\n          } else {\n            duration = `${hours}h (em andamento)`;\n          }\n        }\n\n        const item = {\n          phaseName: column.name,\n          phaseColor: column.color,\n          enteredAt: enteredAt.toLocaleString('pt-BR'),\n          exitedAt: exitedAt?.toLocaleString('pt-BR') || 'Atual',\n          duration: duration || 'Em andamento',\n          isCurrentPhase: !exitedAt && this.currentLead?.columnId === phase.phaseId\n        };\n\n        console.log('üìä Item de hist√≥rico criado:', item);\n        items.push(item);\n      }\n    });\n\n    console.log('üìä Total de itens processados:', items.length);\n\n    // Fallback: se n√£o houver hist√≥ricos registrados, exibir fase atual como entrada\n    if (items.length === 0 && this.currentLead) {\n      console.log('üìä Nenhum hist√≥rico encontrado, criando fallback para fase atual');\n      const currentColumn = this.getCurrentColumn();\n      if (currentColumn) {\n        const enteredAt = (this.currentLead.movedToCurrentColumnAt?.toDate && this.currentLead.movedToCurrentColumnAt.toDate())\n          || this.currentLead.movedToCurrentColumnAt\n          || (this.currentLead.createdAt?.toDate && this.currentLead.createdAt.toDate())\n          || this.currentLead.createdAt\n          || new Date();\n        \n        const fallbackItem = {\n          phaseName: currentColumn.name,\n          phaseColor: currentColumn.color,\n          enteredAt: (enteredAt instanceof Date ? enteredAt : new Date(enteredAt)).toLocaleString('pt-BR'),\n          exitedAt: 'Atual',\n          duration: 'Em andamento',\n          isCurrentPhase: true\n        };\n\n        console.log('üìä Item fallback criado:', fallbackItem);\n        items.push(fallbackItem);\n      }\n    }\n\n    const sortedItems = items.sort((a, b) => new Date(a.enteredAt).getTime() - new Date(b.enteredAt).getTime());\n    console.log('üìä Itens finais ordenados:', sortedItems);\n    \n    return sortedItems;\n  }\n\n  getActivityLog(): LeadHistory[] {\n    return this.leadHistory\n      .sort((a, b) => {\n        const dateA = a.timestamp?.toDate ? a.timestamp.toDate() : new Date(a.timestamp);\n        const dateB = b.timestamp?.toDate ? b.timestamp.toDate() : new Date(b.timestamp);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  getAvailablePhases(): Column[] {\n    const currentColumn = this.getCurrentColumn();\n    if (!currentColumn) return [];\n\n    // Fases de finaliza√ß√£o n√£o permitem movimento\n    if (currentColumn.endStageType && currentColumn.endStageType !== 'none') {\n      return [];\n    }\n\n    // Retornar todas as fases exceto a atual\n    return this.columns.filter(col => col.id !== currentColumn.id);\n  }\n\n  getAdvancePhases(): Column[] {\n    const currentColumn = this.getCurrentColumn();\n    if (!currentColumn) return [];\n\n    // Fases de finaliza√ß√£o n√£o permitem movimento\n    if (currentColumn.endStageType && currentColumn.endStageType !== 'none') {\n      return [];\n    }\n\n    // Validar: todos os campos marcados como requiredToAdvance devem estar preenchidos\n    const missing = (this.currentFormFields || []).filter((f: any) => {\n      if (!f.requiredToAdvance) return false;\n      const key = f.apiFieldName || f.name;\n      const val = this.leadForm.get(f.name)?.value ?? this.getFieldValue(key);\n      return val === undefined || val === null || `${val}`.trim() === '';\n    });\n    if (missing.length) {\n      // Se h√° pend√™ncias, impedir avan√ßo exibindo somente mensagem informativa no UI (mantemos retorno vazio)\n      return [];\n    }\n\n    // Restringir por fluxo (se houver regra definida para a fase atual)\n    const allowed = this.flowConfig.allowed[currentColumn.id!] || [];\n    // Agora: exige aresta expl√≠cita no fluxo\n    return this.columns\n      .filter(col => col.id !== currentColumn.id && col.order > currentColumn.order)\n      .filter(col => allowed.includes(col.id!))\n      .sort((a, b) => a.order - b.order);\n  }\n\n  getRetreatPhases(): Column[] {\n    const currentColumn = this.getCurrentColumn();\n    if (!currentColumn) return [];\n\n    // Se estiver na primeira fase, n√£o pode retroceder\n    if (currentColumn.order === 0) return [];\n\n    const allowed = this.flowConfig.allowed[currentColumn.id!] || [];\n    // Agora: exige aresta expl√≠cita no fluxo\n    return this.columns\n      .filter(col => col.id !== currentColumn.id && col.order < currentColumn.order)\n      .filter(col => allowed.includes(col.id!))\n      .sort((a, b) => b.order - a.order); // Ordem decrescente para mostrar as mais pr√≥ximas primeiro\n  }\n\n  async saveChanges() {\n    if (!this.currentLead || !this.leadForm.valid) return;\n\n    this.isSaving = true;\n    this.errorMessage = '';\n\n    try {\n      const formData = this.leadForm.value;\n      // Mapear apiFieldName -> name para persistir com a chave correta usada na API quando existir\n      const mapped: any = { ...formData };\n      (this.currentFormFields || []).forEach((f: any) => {\n        if (f.apiFieldName && f.apiFieldName !== f.name && mapped.hasOwnProperty(f.name)) {\n          mapped[f.apiFieldName] = mapped[f.name];\n          delete mapped[f.name];\n        }\n      });\n      const currentUser = this.authService.getCurrentUser();\n      \n      if (!currentUser) {\n        throw new Error('Usu√°rio n√£o autenticado');\n      }\n\n      // Preparar dados de atualiza√ß√£o\n      const updateData: Partial<Lead> = {\n        fields: {\n          ...this.currentLead.fields,\n          ...mapped\n        }\n      };\n\n      // Atualizar respons√°vel se mudou\n      // Atualizar respons√°vel via campo do formul√°rio caso exista tipo 'responsavel'\n      const respFieldDef = (this.currentFormFields || []).find((f: any) => f.type === 'responsavel');\n      const respFieldName = respFieldDef?.name;\n      const newRespId = respFieldName ? formData[respFieldName] : formData.responsibleUserId;\n      if (newRespId && newRespId !== this.currentLead.responsibleUserId) {\n        const selectedUser = this.users.find(u => u.uid === newRespId);\n        updateData.responsibleUserId = newRespId;\n        updateData.responsibleUserName = selectedUser?.displayName || '';\n        updateData.responsibleUserEmail = selectedUser?.email || '';\n\n        // Adicionar ao hist√≥rico\n        await this.firestoreService.addLeadHistory(\n          this.ownerId,\n          this.boardId,\n          this.currentLead.id!,\n          {\n            type: 'update',\n            text: `Respons√°vel alterado para <strong>${selectedUser?.displayName || 'Ningu√©m'}</strong>`,\n            user: currentUser.displayName || currentUser.email\n          }\n        );\n      }\n\n      // Registrar diffs de campos (hist√≥rico) ‚Äî incluindo campos do formul√°rio da fase\n      try {\n        const beforeFields = (this.currentLead.fields || {}) as any;\n        const changedKeys = Object.keys(mapped).filter(k => `${beforeFields[k] ?? ''}` !== `${mapped[k] ?? ''}`);\n        if (changedKeys.length) {\n          const changesList = changedKeys.map(k => {\n            const label = (this.currentFormFields || []).find((f: any) => (f.apiFieldName || f.name) === k)?.label || this.humanizeKey(k);\n            let beforeVal = beforeFields[k] ?? '';\n            let afterVal = mapped[k] ?? '';\n            // Se o campo representa respons√°vel, mostrar nome do usu√°rio\n            const isResp = (this.currentFormFields || []).some((f: any) => (f.apiFieldName === k || f.name === k) && (f.type === 'responsavel' || f.originalType === 'responsavel'));\n            if (isResp) {\n              const beforeUser = this.users.find(u => u.uid === beforeVal || u.email === beforeVal);\n              const afterUser = this.users.find(u => u.uid === afterVal || u.email === afterVal);\n              beforeVal = beforeUser?.displayName || beforeVal;\n              afterVal = afterUser?.displayName || afterVal;\n            }\n            return `<li><strong>${label}:</strong> \"${beforeVal}\" ‚Üí \"${afterVal}\"</li>`;\n          }).join('');\n          await this.firestoreService.addLeadHistory(\n            this.ownerId,\n            this.boardId,\n            this.currentLead.id!,\n            {\n              type: 'update',\n              text: `Formul√°rio da fase salvo:<ul class=\"list-disc ml-4\">${changesList}</ul>`,\n              user: currentUser.displayName || currentUser.email\n            }\n          );\n        }\n      } catch {}\n\n      // Salvar altera√ß√µes\n      await this.firestoreService.updateLead(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        updateData\n      );\n\n      // Atualizar estado local e manter valores selecionados no form\n      this.currentLead.fields = {\n        ...(this.currentLead.fields || {}),\n        ...mapped\n      } as any;\n      const afterValues: any = {};\n      (this.currentFormFields || []).forEach((f: any) => {\n        const key = f.apiFieldName || f.name;\n        afterValues[f.name] = mapped.hasOwnProperty(key) ? mapped[key] : (this.getFieldValue(key) ?? '');\n      });\n      if (Object.keys(afterValues).length) {\n        this.leadForm.patchValue(afterValues, { emitEvent: false });\n      }\n      this.leadUpdated.emit();\n\n    } catch (error: any) {\n      console.error('Erro ao salvar altera√ß√µes:', error);\n      this.errorMessage = 'Erro ao salvar altera√ß√µes. Tente novamente.';\n    } finally {\n      this.isSaving = false;\n    }\n  }\n\n  async moveLead(targetColumnId: string) {\n    if (!this.currentLead) return;\n\n    this.isLoading = true;\n\n    try {\n      const oldColumn = this.getCurrentColumn();\n      const newColumn = this.columns.find(col => col.id === targetColumnId);\n      const currentUser = this.authService.getCurrentUser();\n      \n      if (!oldColumn || !newColumn || !currentUser) return;\n\n      // Validar fluxo\n      const allowed = this.flowConfig.allowed[oldColumn.id!] || [];\n      if (!allowed.includes(targetColumnId)) {\n        this.errorMessage = 'Transi√ß√£o n√£o permitida pelo fluxo.';\n        return;\n      }\n\n      // Atualizar hist√≥rico de fases\n      const now = new Date();\n      const phaseHistory = { ...this.phaseHistory };\n\n      // Finalizar fase atual\n      if (phaseHistory[oldColumn.id!]) {\n        const enteredAt = phaseHistory[oldColumn.id!].enteredAt?.toDate() || new Date();\n        phaseHistory[oldColumn.id!].exitedAt = now;\n        phaseHistory[oldColumn.id!].duration = now.getTime() - enteredAt.getTime();\n      }\n\n      // Iniciar nova fase\n      phaseHistory[targetColumnId] = {\n        phaseId: targetColumnId,\n        enteredAt: now\n      };\n\n      // Salvar movimento\n      await this.firestoreService.moveLead(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        targetColumnId\n      );\n\n      // Adicionar ao hist√≥rico\n      await this.firestoreService.addLeadHistory(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        {\n          type: 'move',\n          text: `Moveu de <strong>${oldColumn.name}</strong> para <strong>${newColumn.name}</strong>`,\n          user: currentUser.displayName || currentUser.email\n        }\n      );\n\n      // Atualizar hist√≥rico de fases\n      await this.firestoreService.updateLead(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        { phaseHistory }\n      );\n\n      this.leadUpdated.emit();\n      this.hide();\n\n    } catch (error) {\n      console.error('Erro ao mover lead:', error);\n      this.errorMessage = 'Erro ao mover lead. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      // Verificar tamanho do arquivo (m√°ximo 10MB)\n      const maxSize = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSize) {\n        this.errorMessage = 'Arquivo muito grande. O tamanho m√°ximo √© 10MB.';\n        event.target.value = ''; // Limpar input\n        return;\n      }\n\n      // Verificar tipos de arquivo permitidos\n      const allowedTypes = [\n        'image/jpeg', 'image/jpg', 'image/png', 'image/gif',\n        'application/pdf', \n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'text/plain',\n        'application/zip',\n        'application/x-rar-compressed'\n      ];\n\n      if (!allowedTypes.includes(file.type)) {\n        this.errorMessage = 'Tipo de arquivo n√£o permitido. Use: PDF, DOC, DOCX, JPG, PNG, GIF, TXT, ZIP, RAR.';\n        event.target.value = ''; // Limpar input\n        return;\n      }\n\n      this.selectedFile = file;\n      this.attachmentPreview = `üìé ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;\n      this.errorMessage = ''; // Limpar erro anterior\n    }\n  }\n\n  clearAttachment() {\n    this.selectedFile = null;\n    this.attachmentPreview = '';\n  }\n\n  async addComment() {\n    if (!this.currentLead || (!this.commentText.trim() && !this.selectedFile)) {\n      this.errorMessage = 'Digite um coment√°rio ou anexe um arquivo.';\n      return;\n    }\n\n    this.isUploadingComment = true;\n    this.errorMessage = '';\n\n    try {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser) {\n        throw new Error('Usu√°rio n√£o autenticado');\n      }\n\n      let attachment = null;\n      \n      // Upload do arquivo se selecionado\n      if (this.selectedFile) {\n        console.log('Iniciando upload do arquivo:', this.selectedFile.name);\n        const filePath = `leads/${this.currentLead.id}/comments/${Date.now()}_${this.selectedFile.name}`;\n        \n        try {\n          const downloadURL = await this.storageService.uploadFile(this.selectedFile, filePath);\n          console.log('Upload conclu√≠do:', downloadURL);\n          \n          attachment = {\n            name: this.selectedFile.name,\n            url: downloadURL,\n            type: this.selectedFile.type,\n            size: this.selectedFile.size\n          };\n        } catch (uploadError) {\n          console.error('Erro no upload:', uploadError);\n          throw new Error('Falha no upload do arquivo. Verifique sua conex√£o.');\n        }\n      }\n\n      // Adicionar coment√°rio ao hist√≥rico\n      const historyData = {\n        type: 'comment' as const,\n        text: this.commentText.trim() || 'Anexou um arquivo',\n        user: currentUser.displayName || currentUser.email,\n        timestamp: new Date(),\n        attachment\n      };\n\n      console.log('Adicionando ao hist√≥rico:', historyData);\n      \n      await this.firestoreService.addLeadHistory(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        historyData\n      );\n\n      console.log('Coment√°rio adicionado com sucesso');\n\n      // Limpar formul√°rio\n      this.commentText = '';\n      this.clearAttachment();\n\n      // Recarregar hist√≥rico\n      await this.loadLeadData();\n\n    } catch (error: any) {\n      console.error('Erro ao adicionar coment√°rio:', error);\n      this.errorMessage = error.message || 'Erro ao adicionar coment√°rio. Tente novamente.';\n    } finally {\n      this.isUploadingComment = false;\n    }\n  }\n\n  async uploadAttachment() {\n    if (!this.currentLead || !this.selectedFile) return;\n    this.isUploadingAttachment = true;\n    this.errorMessage = '';\n    try {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser) throw new Error('Usu√°rio n√£o autenticado');\n\n      const filePath = `leads/${this.currentLead.id}/attachments/${Date.now()}_${this.selectedFile.name}`;\n      const downloadURL = await this.storageService.uploadFile(this.selectedFile, filePath);\n\n      await this.firestoreService.addLeadHistory(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!,\n        {\n          type: 'comment',\n          text: 'Anexou um arquivo',\n          user: currentUser.displayName || currentUser.email,\n          timestamp: new Date(),\n          attachment: {\n            name: this.selectedFile.name,\n            url: downloadURL,\n            type: this.selectedFile.type,\n            size: this.selectedFile.size\n          }\n        }\n      );\n\n      this.clearAttachment();\n      await this.loadLeadData();\n    } catch (e: any) {\n      this.errorMessage = e.message || 'Erro ao anexar arquivo';\n    } finally {\n      this.isUploadingAttachment = false;\n    }\n  }\n\n  private generatePublicLink() {\n    if (!this.currentLead) return;\n\n    const currentColumn = this.getCurrentColumn();\n    if (!currentColumn) return;\n\n    // Gerar link p√∫blico usando o SubdomainService\n    const company = this.subdomainService.getCurrentCompany();\n    if (company) {\n      const isDev = this.subdomainService.isDevelopment();\n      \n      if (isDev) {\n        // Em desenvolvimento: /form?subdomain=X&outros_params\n        const baseUrl = this.subdomainService.getBaseUrl();\n        this.publicLink = `${baseUrl}/form?subdomain=${company.subdomain}&companyId=${company.id}&userId=${this.ownerId}&boardId=${this.boardId}&leadId=${this.currentLead.id}&columnId=${currentColumn.id}`;\n      } else {\n        // Em produ√ß√£o: https://subdomain.taskboard.com.br/form?params\n        this.publicLink = `https://${company.subdomain}.taskboard.com.br/form?companyId=${company.id}&userId=${this.ownerId}&boardId=${this.boardId}&leadId=${this.currentLead.id}&columnId=${currentColumn.id}`;\n      }\n    }\n  }\n\n  copyPublicLink() {\n    if (this.publicLink) {\n      navigator.clipboard.writeText(this.publicLink);\n      // Aqui voc√™ pode adicionar uma notifica√ß√£o de que o link foi copiado\n    }\n  }\n\n  async deleteLead() {\n    if (!this.currentLead) return;\n    // Confirma√ß√£o ser√° exibida via modal estilizado\n    this.isLoading = true;\n\n    try {\n      await this.firestoreService.deleteLead(\n        this.ownerId,\n        this.boardId,\n        this.currentLead.id!\n      );\n\n      this.leadDeleted.emit();\n      this.hide();\n\n    } catch (error) {\n      console.error('Erro ao excluir lead:', error);\n      this.errorMessage = 'Erro ao excluir lead. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  openDeleteConfirm() {\n    this.showDeleteConfirm = true;\n  }\n\n  cancelDelete() {\n    this.showDeleteConfirm = false;\n  }\n\n  async confirmDelete() {\n    await this.deleteLead();\n    this.showDeleteConfirm = false;\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    if (event.target === event.currentTarget) {\n      this.hide();\n    }\n  }\n\n  formatDateTime(timestamp: any): string {\n    const date = timestamp?.toDate ? timestamp.toDate() : new Date(timestamp);\n    return date.toLocaleString('pt-BR');\n  }\n\n  getActivityIcon(type: string): string {\n    switch (type) {\n      case 'move': return 'fas fa-arrow-right';\n      case 'comment': return 'fas fa-comment';\n      case 'update': return 'fas fa-edit';\n      default: return 'fas fa-info-circle';\n    }\n  }\n\n  copyLeadId() {\n    if (this.currentLead?.id) {\n      navigator.clipboard.writeText(this.currentLead.id);\n    }\n  }\n\n  \n\n  private isPlainObject(value: any): boolean {\n    return value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  private flattenObject(source: any, maxDepth: number = 3): Record<string, any> {\n    const out: Record<string, any> = {};\n    if (!this.isPlainObject(source) || maxDepth < 0) return out;\n    for (const [key, val] of Object.entries(source)) {\n      if (this.isPlainObject(val) && maxDepth > 0) {\n        // Pull up nested primitives one level deeper as loose fields as well\n        const nested = this.flattenObject(val, maxDepth - 1);\n        for (const [nk, nv] of Object.entries(nested)) {\n          if (out[nk] === undefined) out[nk] = nv;\n        }\n      } else if (val !== undefined && val !== null) {\n        out[key] = val as any;\n      }\n    }\n    return out;\n  }\n\n  private collectLeadFields(): Record<string, any> {\n    // Accept various shapes produced by different API versions\n    // Examples: { fields: {...} }, { fields: { fields: {...} } }, { fields: { leadData: {...} } }, etc.\n    const base = (this.currentLead?.fields || {}) as any;\n    const containers = ['fields', 'leadData', 'data', 'payload'];\n\n    // Merge shallow base, known containers and a generic recursive flatten (limited depth)\n    const merged: Record<string, any> = {};\n    const candidates: any[] = [base];\n    containers.forEach(k => {\n      if (this.isPlainObject(base[k])) candidates.push(base[k]);\n    });\n    // Common double nesting like fields.fields\n    if (this.isPlainObject(base.fields?.fields)) candidates.push(base.fields.fields);\n\n    for (const obj of candidates) {\n      for (const [k, v] of Object.entries(obj)) {\n        if (merged[k] === undefined && v !== undefined && v !== null && `${v}`.trim?.() !== '') {\n          merged[k] = v;\n        }\n      }\n    }\n\n    // Fallback: recursive pick of primitives inside nested objects\n    const deep = this.flattenObject(base, 3);\n    for (const [k, v] of Object.entries(deep)) {\n      if (merged[k] === undefined && v !== undefined && v !== null && `${v}`.trim?.() !== '') {\n        merged[k] = v;\n      }\n    }\n\n    return merged;\n  }\n\n  private getFieldValue(requestedName: string): any {\n    const fields = this.collectLeadFields();\n    if (!requestedName) return undefined;\n\n    const synonyms: { [canonical: string]: string[] } = {\n      companyName: ['companyName', 'empresa', 'nomeEmpresa', 'nameCompany', 'company', 'company_name', 'empresa_nome', 'nameComapny'],\n      cnpj: ['cnpj', 'cnpjCompany'],\n      contactName: ['contactName', 'name', 'nome', 'nomeLead', 'nameLead', 'leadName'],\n      contactEmail: ['contactEmail', 'email', 'emailLead', 'contatoEmail', 'leadEmail'],\n      contactPhone: ['contactPhone', 'phone', 'telefone', 'celular', 'phoneLead', 'telefoneContato'],\n      temperature: ['temperature', 'temperatura', 'qualificacao', 'leadTemperature']\n    };\n\n    const lowerMap: { [k: string]: string } = Object.keys(fields).reduce((acc: any, k: string) => {\n      acc[k.toLowerCase()] = k;\n      return acc;\n    }, {});\n\n    const req = requestedName.toLowerCase();\n\n    // Construir lista de candidatos: pedido, seus sin√¥nimos e can√¥nicos equivalentes\n    const candidates: string[] = [requestedName];\n\n    // Adicionar sin√¥nimos se o requestedName j√° for can√¥nico\n    if (synonyms[requestedName]) {\n      candidates.push(...synonyms[requestedName]);\n    }\n\n    // Se requestedName √© um alias, adicionar o can√¥nico correspondente e os aliases dele\n    for (const [canonical, aliases] of Object.entries(synonyms)) {\n      if (canonical.toLowerCase() === req || aliases.some(a => a.toLowerCase() === req)) {\n        candidates.push(canonical, ...aliases);\n      }\n    }\n\n    // Remover duplicados preservando ordem\n    const visited = new Set<string>();\n    for (const c of candidates) {\n      const key = c.toLowerCase();\n      if (visited.has(key)) continue;\n      visited.add(key);\n      const original = lowerMap[key];\n      if (original !== undefined) {\n        const val = fields[original];\n        if (val !== undefined && val !== null && (typeof val !== 'string' || val.trim() !== '')) {\n          return val;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private humanizeKey(key: string): string {\n    // Converte camelCase/snake_case para T√≠tulo com espa√ßos\n    const withSpaces = key\n      .replace(/_/g, ' ')\n      .replace(/([a-z])([A-Z])/g, '$1 $2')\n      .replace(/\\s+/g, ' ')\n      .trim();\n    return withSpaces.charAt(0).toUpperCase() + withSpaces.slice(1);\n  }\n\n  private getLabelForOriginalKey(originalKey: string, canonicalKey: string): string {\n    // 1) Se houver configura√ß√£o de formul√°rio inicial, tente achar o label pelo nome original ou can√¥nico\n    const fieldsCfg = (this.initialFormConfig?.fields || []) as any[];\n    if (Array.isArray(fieldsCfg) && fieldsCfg.length) {\n      const found = fieldsCfg.find(f => {\n        const apiName = (f.apiFieldName || '').toString();\n        const name = (f.name || '').toString();\n        return apiName === originalKey || name === originalKey || apiName === canonicalKey || name === canonicalKey;\n      });\n      if (found?.label) return found.label;\n    }\n    // 2) Preferir humanizar a chave original (ex.: nameLead ‚Üí Name Lead)\n    const humanOriginal = this.humanizeKey(originalKey);\n    if (humanOriginal) return humanOriginal;\n    // 3) Fallback: humanizar can√¥nico\n    return this.humanizeKey(canonicalKey);\n  }\n\n  private buildDedupedDisplayFields(): Array<{ name: string; label: string; value: any }> {\n    const raw = this.collectLeadFields();\n\n    const groups: Record<string, string[]> = {\n      companyName: ['companyName', 'empresa', 'nomeEmpresa', 'nameCompany', 'company', 'company_name', 'empresa_nome', 'nameComapny'],\n      cnpj: ['cnpj', 'cnpjCompany'],\n      contactName: ['contactName', 'name', 'nome', 'nomeLead', 'nameLead', 'leadName'],\n      contactEmail: ['contactEmail', 'email', 'emailLead', 'contatoEmail', 'leadEmail'],\n      contactPhone: ['contactPhone', 'phone', 'telefone', 'celular', 'phoneLead', 'telefoneContato'],\n      temperature: ['temperature', 'temperatura', 'qualificacao', 'leadTemperature']\n    };\n\n    const labelMap: Record<string, string> = {\n      companyName: 'Nome da empresa',\n      cnpj: 'CNPJ da empresa',\n      contactName: 'Nome do contato',\n      contactEmail: 'E-mail de contato',\n      contactPhone: 'Telefone',\n      temperature: 'Temperatura'\n    };\n\n    const lowerMap: Record<string, string> = Object.keys(raw).reduce((acc: any, k: string) => {\n      acc[k.toLowerCase()] = k; return acc;\n    }, {});\n\n    const usedOriginalKeys = new Set<string>();\n    const out: Array<{ name: string; label: string; value: any; order: number }> = [];\n\n    const pickFromAliases = (aliases: string[]) => {\n      for (const a of aliases) {\n        const orig = lowerMap[a.toLowerCase()];\n        if (orig && raw[orig] !== undefined && raw[orig] !== null && `${raw[orig]}`.trim() !== '') {\n          usedOriginalKeys.add(orig);\n          return { key: orig, value: raw[orig] };\n        }\n      }\n      return null;\n    };\n\n    const orderMap: Record<string, number> = { companyName: 1, cnpj: 2, contactName: 3, contactEmail: 4, contactPhone: 5, temperature: 6 };\n\n    // Inserir grupos can√¥nicos sem duplicar\n    for (const canonical of Object.keys(groups)) {\n      const found = pickFromAliases(groups[canonical]);\n      if (found) {\n        const label = this.getLabelForOriginalKey(found.key, canonical) || labelMap[canonical] || this.humanizeKey(canonical);\n        out.push({ name: canonical, label, value: found.value, order: orderMap[canonical] || 999 });\n      }\n    }\n\n    // Conjunto com todas as chaves-ali√°s para filtrar duplicados\n    const aliasLowerSet = new Set<string>(\n      Object.values(groups).flat().map(k => k.toLowerCase())\n    );\n\n    // Incluir quaisquer outros campos n√£o cobertos pelos grupos (e n√£o-ali√°s)\n    Object.keys(raw).forEach(orig => {\n      const isAlias = aliasLowerSet.has(orig.toLowerCase());\n      if (!usedOriginalKeys.has(orig) && !isAlias) {\n        out.push({ name: orig, label: this.humanizeKey(orig), value: raw[orig], order: 999 });\n      }\n    });\n\n    return out\n      .filter(item => item.value !== undefined && item.value !== null && `${item.value}`.trim() !== '')\n      .sort((a, b) => a.order - b.order || a.label.localeCompare(b.label))\n      .map(({ order, ...rest }) => rest);\n  }\n}","<div *ngIf=\"isVisible\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\" (click)=\"onBackdropClick($event)\">\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-7xl max-h-[95vh] overflow-hidden\">\n    <!-- Header -->\n    <div class=\"flex justify-between items-center p-6 border-b border-gray-200\">\n      <h2 class=\"text-2xl font-bold text-gray-900\">Dados</h2>\n      <div class=\"flex items-center gap-3\">\n        <button \n          (click)=\"openDeleteConfirm()\"\n          class=\"text-red-500 hover:text-red-600 text-xl\"\n          title=\"Apagar registro\"\n          [disabled]=\"isLoading || isSaving\">\n          <i class=\"fas fa-trash\"></i>\n        </button>\n        <button \n          (click)=\"hide()\" \n          class=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n          [disabled]=\"isLoading\">\n          &times;\n        </button>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"grid grid-cols-12 gap-6 p-6 max-h-[calc(95vh-120px)] overflow-y-auto\">\n      \n      <!-- Left Column: Lead Data -->\n      <div class=\"col-span-12 md:col-span-3 border-r border-gray-200 pr-6\">\n        <!-- Dados -->\n        <div class=\"mb-8\">\n          <div *ngIf=\"currentLead?.id\" class=\"mb-2 text-[11px] text-gray-400 flex items-center gap-2\">\n            <span class=\"truncate\">ID: <span class=\"select-all\">{{ currentLead?.id }}</span></span>\n            <button (click)=\"copyLeadId()\" class=\"text-blue-500 hover:text-blue-700 text-xs\">Copiar</button>\n          </div>\n          <div class=\"space-y-4\">\n            <div *ngFor=\"let field of getInitialFields()\" class=\"text-sm\">\n              <div class=\"text-gray-800 font-semibold\">{{ field.label }}</div>\n              <div class=\"break-all\">{{ field.value }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Hist√≥rico de Fases -->\n        <div class=\"mb-8\">\n          <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Hist√≥rico de Fases</h3>\n          <div *ngIf=\"getPhaseHistoryItems().length > 0; else noPhaseHistory\" class=\"space-y-3\">\n            <div *ngFor=\"let phase of getPhaseHistoryItems(); let i = index; let last = last\" \n                 class=\"relative text-xs p-3 rounded-lg border-l-4 transition-all hover:shadow-sm\"\n                 [style.border-left-color]=\"phase.phaseColor\"\n                 [class.bg-blue-50]=\"phase.isCurrentPhase\"\n                 [class.bg-gray-50]=\"!phase.isCurrentPhase\">\n              \n              <!-- Indicador de posi√ß√£o -->\n              <div class=\"flex items-center justify-between mb-2\">\n                <div class=\"flex items-center gap-2\">\n                  <div class=\"w-3 h-3 rounded-full\" [style.background-color]=\"phase.phaseColor\"></div>\n                  <span class=\"font-semibold text-gray-800\">{{ phase.phaseName }}</span>\n                  <span *ngIf=\"phase.isCurrentPhase\" class=\"px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-[10px] font-medium\">ATUAL</span>\n                </div>\n                <span class=\"text-gray-500 text-[10px]\">#{{ i + 1 }}</span>\n              </div>\n\n              <!-- Detalhes da fase -->\n              <div class=\"space-y-1 text-gray-600\">\n                <div class=\"flex items-center gap-1\">\n                  <i class=\"fas fa-play text-green-500 w-3\"></i>\n                  <span>Entrada: {{ phase.enteredAt }}</span>\n                </div>\n                <div *ngIf=\"phase.exitedAt !== 'Atual'\" class=\"flex items-center gap-1\">\n                  <i class=\"fas fa-stop text-red-500 w-3\"></i>\n                  <span>Sa√≠da: {{ phase.exitedAt }}</span>\n                </div>\n                <div class=\"flex items-center gap-1\">\n                  <i class=\"fas fa-clock text-blue-500 w-3\"></i>\n                  <span>Dura√ß√£o: {{ phase.duration }}</span>\n                </div>\n              </div>\n\n              <!-- Seta para pr√≥xima fase -->\n              <div *ngIf=\"!last\" class=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2\">\n                <i class=\"fas fa-chevron-down text-gray-400 text-xs\"></i>\n              </div>\n            </div>\n          </div>\n          \n          <ng-template #noPhaseHistory>\n            <div class=\"text-sm text-gray-500 bg-gray-50 border border-gray-200 rounded-lg p-4 text-center\">\n              <i class=\"fas fa-info-circle mb-2 text-gray-400\"></i>\n              <div>Nenhum hist√≥rico de fases dispon√≠vel</div>\n              <div class=\"text-xs mt-1\">O hist√≥rico ser√° registrado quando o lead for movido entre as fases</div>\n            </div>\n          </ng-template>\n        </div>\n\n        \n      </div>\n\n      <!-- Middle Column: Form and Comments -->\n      <div class=\"col-span-12 md:col-span-6\">\n        <!-- Formul√°rio da Fase Atual -->\n        <div class=\"mb-8\" *ngIf=\"formReady && (currentFormFields && currentFormFields.length > 0); else noPhaseForm\">\n          <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Formul√°rio da Fase Atual</h3>\n          <form [formGroup]=\"leadForm\" class=\"space-y-4\" (ngSubmit)=\"saveChanges()\">\n            <!-- Campos din√¢micos da fase -->\n            <ng-container *ngFor=\"let field of currentFormFields\">\n              <div class=\"form-group\">\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {{ field.label }}\n                  <span *ngIf=\"field.required\" class=\"text-red-500\">*</span>\n                </label>\n                \n                <!-- Campo de texto -->\n                <input \n                  *ngIf=\"field.type === 'text' || field.type === 'email' || field.type === 'tel' || field.type === 'url' || field.type === 'cpf' || field.type === 'cnpj'\" \n                  [type]=\"field.type\"\n                  [formControlName]=\"field.name\"\n                  [placeholder]=\"field.placeholder || ''\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                \n                <!-- Campo de textarea -->\n                <textarea \n                  *ngIf=\"field.type === 'textarea'\" \n                  [formControlName]=\"field.name\"\n                  [placeholder]=\"field.placeholder || ''\"\n                  rows=\"3\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                </textarea>\n                \n                <!-- Campo de n√∫mero -->\n                <input \n                  *ngIf=\"field.type === 'number'\" \n                  type=\"number\"\n                  [formControlName]=\"field.name\"\n                  [placeholder]=\"field.placeholder || ''\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                \n                <!-- Campo de data -->\n                <input \n                  *ngIf=\"field.type === 'date'\" \n                  type=\"date\"\n                  [formControlName]=\"field.name\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                \n                <!-- Campo select -->\n                <select \n                  *ngIf=\"field.type === 'select' || field.type === 'temperatura'\" \n                  [formControlName]=\"field.name\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <option value=\"\">Selecione...</option>\n                  <option *ngFor=\"let option of (field.type === 'temperatura' && (!field.options || field.options.length === 0) ? ['Quente','Morno','Frio'] : field.options)\" [value]=\"option\">{{ option }}</option>\n                </select>\n\n                <!-- Campo Radio -->\n                <div *ngIf=\"field.type === 'radio'\" class=\"flex flex-wrap gap-4\">\n                  <label *ngFor=\"let opt of (field.options || [])\" class=\"inline-flex items-center gap-2 text-sm text-gray-700\">\n                    <input\n                      type=\"radio\"\n                      [attr.name]=\"field.name\"\n                      [value]=\"opt?.value ?? opt\"\n                      [formControlName]=\"field.name\"\n                      class=\"text-blue-600 focus:ring-blue-500\" />\n                    <span>{{ opt?.label ?? opt }}</span>\n                  </label>\n                </div>\n\n                <!-- Campo Respons√°vel (lista de usu√°rios da empresa) -->\n                <select\n                  *ngIf=\"field.type === 'responsavel'\"\n                  [formControlName]=\"field.name\"\n                  class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <option value=\"\">Selecione o respons√°vel...</option>\n                  <option *ngFor=\"let u of users\" [value]=\"u.uid\">{{ u.displayName || u.email }}</option>\n                </select>\n              </div>\n            </ng-container>\n            <div class=\"flex justify-end pt-2\">\n              <button type=\"submit\"\n                      [disabled]=\"isSaving || isLoading\"\n                      class=\"btn-primary\">\n                {{ isSaving ? 'Salvando...' : 'Salvar altera√ß√µes' }}\n              </button>\n            </div>\n          </form>\n        </div>\n        <ng-template #noPhaseForm>\n          <div class=\"text-sm text-gray-500 bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            Nenhum campo configurado para esta fase.\n          </div>\n        </ng-template>\n\n        <!-- Coment√°rios -->\n        <div>\n          <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Coment√°rios</h3>\n          <div class=\"space-y-4\">\n            <!-- Coment√°rio -->\n            <div>\n              <textarea \n                [(ngModel)]=\"commentText\"\n                [ngModelOptions]=\"{standalone: true}\"\n                class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Escreva um coment√°rio...\"\n                rows=\"3\">\n              </textarea>\n              <div class=\"flex justify-end mt-2\">\n                <button \n                  (click)=\"addComment()\"\n                  [disabled]=\"isUploadingComment || !commentText.trim()\"\n                  class=\"btn-primary flex items-center\">\n                  <div *ngIf=\"isUploadingComment\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  <i class=\"fas fa-paper-plane mr-2\"></i>\n                  {{ isUploadingComment ? 'Enviando...' : 'Enviar coment√°rio' }}\n                </button>\n              </div>\n            </div>\n\n            <!-- Anexo -->\n            <div>\n              <div class=\"flex items-center gap-3\">\n                <button \n                  type=\"button\" \n                  (click)=\"fileInput.click()\"\n                  class=\"btn-secondary text-sm\">\n                  <i class=\"fas fa-paperclip mr-2\"></i>Selecionar arquivo\n                </button>\n                <span class=\"text-sm text-gray-600\" *ngIf=\"attachmentPreview\">{{ attachmentPreview }}</span>\n                <input #fileInput type=\"file\" class=\"hidden\" (change)=\"onFileSelected($event)\" accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.gif,.txt,.zip,.rar\">\n                <button \n                  (click)=\"uploadAttachment()\"\n                  [disabled]=\"isUploadingAttachment || !selectedFile\"\n                  class=\"btn-primary-outline text-sm\">\n                  {{ isUploadingAttachment ? 'Anexando...' : 'Enviar anexo' }}\n                </button>\n                <button *ngIf=\"selectedFile\" (click)=\"clearAttachment()\" class=\"text-gray-500 hover:text-gray-700 text-sm\">Limpar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Atividades Recentes (movido para o centro, abaixo de anexos) -->\n        <div class=\"mt-8\">\n          <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Atividades Recentes</h3>\n          <div class=\"space-y-3 max-h-64 overflow-y-auto\">\n            <div *ngFor=\"let activity of getActivityLog()\" class=\"text-xs p-2 bg-gray-50 rounded\">\n              <div class=\"flex items-center mb-1\">\n                <i [class]=\"getActivityIcon(activity.type)\" class=\"mr-2 text-blue-500\"></i>\n                <span class=\"font-medium\">{{ activity.user }}</span>\n                <span class=\"ml-auto text-gray-500\">{{ formatDateTime(activity.timestamp) }}</span>\n              </div>\n              <div [innerHTML]=\"activity.text\" class=\"text-gray-700\"></div>\n              <div *ngIf=\"activity.attachment\" class=\"mt-2\">\n                <a [href]=\"activity.attachment.url\" target=\"_blank\" class=\"text-blue-600 hover:underline flex items-center\">\n                  <i class=\"fas fa-paperclip mr-1\"></i>\n                  {{ activity.attachment.name }}\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Right Column: Actions -->\n      <div class=\"col-span-12 md:col-span-3 border-l border-gray-200 pl-6 flex flex-col justify-between\">\n        <div>\n          <!-- A√ß√µes -->\n          <div class=\"mb-8\">\n            <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Mover registro</h3>\n            \n            <!-- Fases de Avan√ßo -->\n            <div *ngIf=\"getAdvancePhases().length > 0\" class=\"mb-4\">\n              <h4 class=\"text-sm font-semibold text-green-700 mb-2\">üöÄ Avan√ßar para:</h4>\n              <div class=\"grid grid-cols-1 gap-2\">\n                <button \n                  *ngFor=\"let phase of getAdvancePhases()\" \n                  (click)=\"moveLead(phase.id!)\"\n                  [disabled]=\"isLoading\"\n                  class=\"text-left p-2 border border-green-200 rounded-md hover:bg-green-50 transition-colors flex items-center text-sm bg-white\">\n                  <div class=\"w-3 h-3 rounded-full mr-2\" [style.background-color]=\"phase.color\"></div>\n                  <span class=\"font-medium\">{{ phase.name }}</span>\n                </button>\n              </div>\n            </div>\n\n            <!-- Fases de Retrocesso -->\n            <div *ngIf=\"getRetreatPhases().length > 0\" class=\"mb-4\">\n              <h4 class=\"text-sm font-medium text-orange-600 mb-2\">üîÑ Retornar para:</h4>\n              <div class=\"grid grid-cols-1 gap-1\">\n                <button \n                  *ngFor=\"let phase of getRetreatPhases()\" \n                  (click)=\"moveLead(phase.id!)\"\n                  [disabled]=\"isLoading\"\n                  class=\"text-left p-2 border border-orange-100 rounded-md hover:bg-orange-50 transition-colors flex items-center text-xs bg-orange-25 opacity-75\">\n                  <div class=\"w-2 h-2 rounded-full mr-2\" [style.background-color]=\"phase.color\"></div>\n                  <span>{{ phase.name }}</span>\n                </button>\n              </div>\n            </div>\n            \n            <div *ngIf=\"getAdvancePhases().length === 0 && getRetreatPhases().length === 0\" class=\"text-gray-500 text-sm italic p-3 bg-gray-50 rounded-lg\">\n              <ng-container *ngIf=\"hasRequiredToAdvance(); else finalPhaseMsg\">\n                Para avan√ßar, preencha os campos obrigat√≥rios da fase.\n              </ng-container>\n              <ng-template #finalPhaseMsg>Lead em fase final. N√£o √© poss√≠vel movimentar.</ng-template>\n            </div>\n          </div>\n\n          <!-- Gerador de Link P√∫blico -->\n          <div class=\"mb-8\">\n            <h3 class=\"font-bold text-lg mb-3 text-gray-800\">Link P√∫blico</h3>\n            <div *ngIf=\"publicLink\" class=\"space-y-2\">\n              <p class=\"text-xs text-gray-600\">Compartilhe este link para permitir edi√ß√£o externa:</p>\n              <div class=\"flex\">\n                <input \n                  type=\"text\" \n                  [value]=\"publicLink\" \n                  readonly \n                  class=\"flex-1 p-2 border border-gray-300 rounded-l-lg bg-gray-50 text-xs\">\n                <button \n                  (click)=\"copyPublicLink()\"\n                  class=\"btn-primary rounded-l-none rounded-r-lg px-3\">\n                  <i class=\"fas fa-copy\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Mensagem de erro -->\n        <div *ngIf=\"errorMessage\" class=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-lg text-sm mt-3\">\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal de confirma√ß√£o de exclus√£o -->\n  <div *ngIf=\"showDeleteConfirm\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[60]\" (click)=\"cancelDelete()\">\n    <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md p-6\" (click)=\"$event.stopPropagation()\">\n      <h3 class=\"text-lg font-bold text-gray-900 mb-2\">Confirmar exclus√£o</h3>\n      <p class=\"text-sm text-gray-600 mb-6\">Esta a√ß√£o n√£o pode ser desfeita. Deseja realmente apagar este registro?</p>\n      <div class=\"flex justify-end gap-3\">\n        <button class=\"px-4 py-2 rounded-lg border border-gray-300\" (click)=\"cancelDelete()\">Cancelar</button>\n        <button class=\"px-4 py-2 rounded-lg bg-red-600 text-white\" (click)=\"confirmDelete()\">Apagar</button>\n      </div>\n    </div>\n  </div>\n</div>","import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, takeUntil, first, map, BehaviorSubject, filter, switchMap, shareReplay, Subject } from 'rxjs';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getTinymce = () => {\n  const w = typeof window !== 'undefined' ? window : undefined;\n  return w && w.tinymce ? w.tinymce : null;\n};\nclass Events {\n  onBeforePaste = new EventEmitter();\n  onBlur = new EventEmitter();\n  onClick = new EventEmitter();\n  onCompositionEnd = new EventEmitter();\n  onCompositionStart = new EventEmitter();\n  onCompositionUpdate = new EventEmitter();\n  onContextMenu = new EventEmitter();\n  onCopy = new EventEmitter();\n  onCut = new EventEmitter();\n  onDblclick = new EventEmitter();\n  onDrag = new EventEmitter();\n  onDragDrop = new EventEmitter();\n  onDragEnd = new EventEmitter();\n  onDragGesture = new EventEmitter();\n  onDragOver = new EventEmitter();\n  onDrop = new EventEmitter();\n  onFocus = new EventEmitter();\n  onFocusIn = new EventEmitter();\n  onFocusOut = new EventEmitter();\n  onKeyDown = new EventEmitter();\n  onKeyPress = new EventEmitter();\n  onKeyUp = new EventEmitter();\n  onMouseDown = new EventEmitter();\n  onMouseEnter = new EventEmitter();\n  onMouseLeave = new EventEmitter();\n  onMouseMove = new EventEmitter();\n  onMouseOut = new EventEmitter();\n  onMouseOver = new EventEmitter();\n  onMouseUp = new EventEmitter();\n  onPaste = new EventEmitter();\n  onSelectionChange = new EventEmitter();\n  onActivate = new EventEmitter();\n  onAddUndo = new EventEmitter();\n  onBeforeAddUndo = new EventEmitter();\n  onBeforeExecCommand = new EventEmitter();\n  onBeforeGetContent = new EventEmitter();\n  onBeforeRenderUI = new EventEmitter();\n  onBeforeSetContent = new EventEmitter();\n  onChange = new EventEmitter();\n  onClearUndos = new EventEmitter();\n  onDeactivate = new EventEmitter();\n  onDirty = new EventEmitter();\n  onExecCommand = new EventEmitter();\n  onGetContent = new EventEmitter();\n  onHide = new EventEmitter();\n  onInit = new EventEmitter();\n  onInput = new EventEmitter();\n  onInitNgModel = new EventEmitter();\n  onLoadContent = new EventEmitter();\n  onNodeChange = new EventEmitter();\n  onPostProcess = new EventEmitter();\n  onPostRender = new EventEmitter();\n  onPreInit = new EventEmitter();\n  onPreProcess = new EventEmitter();\n  onProgressState = new EventEmitter();\n  onRedo = new EventEmitter();\n  onRemove = new EventEmitter();\n  onReset = new EventEmitter();\n  onResizeEditor = new EventEmitter();\n  onSaveContent = new EventEmitter();\n  onSetAttrib = new EventEmitter();\n  onObjectResizeStart = new EventEmitter();\n  onObjectResized = new EventEmitter();\n  onObjectSelected = new EventEmitter();\n  onSetContent = new EventEmitter();\n  onShow = new EventEmitter();\n  onSubmit = new EventEmitter();\n  onUndo = new EventEmitter();\n  onVisualAid = new EventEmitter();\n  static …µfac = function Events_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Events)();\n  };\n  static …µdir = /* @__PURE__ */i0.…µ…µdefineDirective({\n    type: Events,\n    outputs: {\n      onBeforePaste: \"onBeforePaste\",\n      onBlur: \"onBlur\",\n      onClick: \"onClick\",\n      onCompositionEnd: \"onCompositionEnd\",\n      onCompositionStart: \"onCompositionStart\",\n      onCompositionUpdate: \"onCompositionUpdate\",\n      onContextMenu: \"onContextMenu\",\n      onCopy: \"onCopy\",\n      onCut: \"onCut\",\n      onDblclick: \"onDblclick\",\n      onDrag: \"onDrag\",\n      onDragDrop: \"onDragDrop\",\n      onDragEnd: \"onDragEnd\",\n      onDragGesture: \"onDragGesture\",\n      onDragOver: \"onDragOver\",\n      onDrop: \"onDrop\",\n      onFocus: \"onFocus\",\n      onFocusIn: \"onFocusIn\",\n      onFocusOut: \"onFocusOut\",\n      onKeyDown: \"onKeyDown\",\n      onKeyPress: \"onKeyPress\",\n      onKeyUp: \"onKeyUp\",\n      onMouseDown: \"onMouseDown\",\n      onMouseEnter: \"onMouseEnter\",\n      onMouseLeave: \"onMouseLeave\",\n      onMouseMove: \"onMouseMove\",\n      onMouseOut: \"onMouseOut\",\n      onMouseOver: \"onMouseOver\",\n      onMouseUp: \"onMouseUp\",\n      onPaste: \"onPaste\",\n      onSelectionChange: \"onSelectionChange\",\n      onActivate: \"onActivate\",\n      onAddUndo: \"onAddUndo\",\n      onBeforeAddUndo: \"onBeforeAddUndo\",\n      onBeforeExecCommand: \"onBeforeExecCommand\",\n      onBeforeGetContent: \"onBeforeGetContent\",\n      onBeforeRenderUI: \"onBeforeRenderUI\",\n      onBeforeSetContent: \"onBeforeSetContent\",\n      onChange: \"onChange\",\n      onClearUndos: \"onClearUndos\",\n      onDeactivate: \"onDeactivate\",\n      onDirty: \"onDirty\",\n      onExecCommand: \"onExecCommand\",\n      onGetContent: \"onGetContent\",\n      onHide: \"onHide\",\n      onInit: \"onInit\",\n      onInput: \"onInput\",\n      onInitNgModel: \"onInitNgModel\",\n      onLoadContent: \"onLoadContent\",\n      onNodeChange: \"onNodeChange\",\n      onPostProcess: \"onPostProcess\",\n      onPostRender: \"onPostRender\",\n      onPreInit: \"onPreInit\",\n      onPreProcess: \"onPreProcess\",\n      onProgressState: \"onProgressState\",\n      onRedo: \"onRedo\",\n      onRemove: \"onRemove\",\n      onReset: \"onReset\",\n      onResizeEditor: \"onResizeEditor\",\n      onSaveContent: \"onSaveContent\",\n      onSetAttrib: \"onSetAttrib\",\n      onObjectResizeStart: \"onObjectResizeStart\",\n      onObjectResized: \"onObjectResized\",\n      onObjectSelected: \"onObjectSelected\",\n      onSetContent: \"onSetContent\",\n      onShow: \"onShow\",\n      onSubmit: \"onSubmit\",\n      onUndo: \"onUndo\",\n      onVisualAid: \"onVisualAid\"\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(Events, [{\n    type: Directive\n  }], null, {\n    onBeforePaste: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onCompositionEnd: [{\n      type: Output\n    }],\n    onCompositionStart: [{\n      type: Output\n    }],\n    onCompositionUpdate: [{\n      type: Output\n    }],\n    onContextMenu: [{\n      type: Output\n    }],\n    onCopy: [{\n      type: Output\n    }],\n    onCut: [{\n      type: Output\n    }],\n    onDblclick: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    onDragDrop: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    onDragGesture: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onFocusIn: [{\n      type: Output\n    }],\n    onFocusOut: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onKeyPress: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onMouseDown: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }],\n    onMouseLeave: [{\n      type: Output\n    }],\n    onMouseMove: [{\n      type: Output\n    }],\n    onMouseOut: [{\n      type: Output\n    }],\n    onMouseOver: [{\n      type: Output\n    }],\n    onMouseUp: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    onActivate: [{\n      type: Output\n    }],\n    onAddUndo: [{\n      type: Output\n    }],\n    onBeforeAddUndo: [{\n      type: Output\n    }],\n    onBeforeExecCommand: [{\n      type: Output\n    }],\n    onBeforeGetContent: [{\n      type: Output\n    }],\n    onBeforeRenderUI: [{\n      type: Output\n    }],\n    onBeforeSetContent: [{\n      type: Output\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClearUndos: [{\n      type: Output\n    }],\n    onDeactivate: [{\n      type: Output\n    }],\n    onDirty: [{\n      type: Output\n    }],\n    onExecCommand: [{\n      type: Output\n    }],\n    onGetContent: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onInit: [{\n      type: Output\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onInitNgModel: [{\n      type: Output\n    }],\n    onLoadContent: [{\n      type: Output\n    }],\n    onNodeChange: [{\n      type: Output\n    }],\n    onPostProcess: [{\n      type: Output\n    }],\n    onPostRender: [{\n      type: Output\n    }],\n    onPreInit: [{\n      type: Output\n    }],\n    onPreProcess: [{\n      type: Output\n    }],\n    onProgressState: [{\n      type: Output\n    }],\n    onRedo: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onReset: [{\n      type: Output\n    }],\n    onResizeEditor: [{\n      type: Output\n    }],\n    onSaveContent: [{\n      type: Output\n    }],\n    onSetAttrib: [{\n      type: Output\n    }],\n    onObjectResizeStart: [{\n      type: Output\n    }],\n    onObjectResized: [{\n      type: Output\n    }],\n    onObjectSelected: [{\n      type: Output\n    }],\n    onSetContent: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onSubmit: [{\n      type: Output\n    }],\n    onUndo: [{\n      type: Output\n    }],\n    onVisualAid: [{\n      type: Output\n    }]\n  });\n})();\nconst validEvents = ['onActivate', 'onAddUndo', 'onBeforeAddUndo', 'onBeforeExecCommand', 'onBeforeGetContent', 'onBeforeRenderUI', 'onBeforeSetContent', 'onBeforePaste', 'onBlur', 'onChange', 'onClearUndos', 'onClick', 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate', 'onContextMenu', 'onCopy', 'onCut', 'onDblclick', 'onDeactivate', 'onDirty', 'onDrag', 'onDragDrop', 'onDragEnd', 'onDragGesture', 'onDragOver', 'onDrop', 'onExecCommand', 'onFocus', 'onFocusIn', 'onFocusOut', 'onGetContent', 'onHide', 'onInit', 'onInput', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onLoadContent', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onNodeChange', 'onObjectResizeStart', 'onObjectResized', 'onObjectSelected', 'onPaste', 'onPostProcess', 'onPostRender', 'onPreProcess', 'onProgressState', 'onRedo', 'onRemove', 'onReset', 'onResizeEditor', 'onSaveContent', 'onSelectionChange', 'onSetAttrib', 'onSetContent', 'onShow', 'onSubmit', 'onUndo', 'onVisualAid'];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\nconst bindHandlers = (ctx, editor, destroy$) => {\n  const allowedEvents = getValidEvents(ctx);\n  allowedEvents.forEach(eventName => {\n    const eventEmitter = ctx[eventName];\n    listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe(event => {\n      // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n      // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n      // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n      // `<editor (onSelectionChange)=\"...\"></editor>`\n      // then it won't be \"observed\", and we won't run \"dead\" change detection.\n      if (isObserved(eventEmitter)) {\n        ctx.ngZone.run(() => eventEmitter.emit({\n          event,\n          editor\n        }));\n      }\n    });\n  });\n};\nconst getValidEvents = ctx => {\n  const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n  const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter(event => validEvents.includes(event) && !ignoredEvents.includes(event));\n  return allowedEvents;\n};\nconst parseStringProperty = (property, defaultValue) => {\n  if (typeof property === 'string') {\n    return property.split(',').map(value => value.trim());\n  }\n  if (Array.isArray(property)) {\n    return property;\n  }\n  return defaultValue;\n};\nlet unique = 0;\nconst uuid = prefix => {\n  const date = new Date();\n  const time = date.getTime();\n  const random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n};\nconst isTextarea = element => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst normalizePluginArray = plugins => {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst isNullOrUndefined = value => value === null || value === undefined;\nconst isObserved = o =>\n// RXJS is making the `observers` property internal in v8. So this is intended as a backwards compatible way of\n// checking if a subject has observers.\no.observed || o.observers?.length > 0;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst firstEmission = () => source => source.pipe(first(), map(() => undefined));\nconst CreateScriptLoader = () => {\n  const params$ = new BehaviorSubject(null);\n  const loaded$ = params$.pipe(filter(Boolean), switchMap(([doc, url]) => {\n    const scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.src = url;\n    doc.head.appendChild(scriptTag);\n    return fromEvent(scriptTag, 'load').pipe(firstEmission());\n  }),\n  // Caretaker note: `loaded$` is a multicast observable since it's piped with `shareReplay`,\n  // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n  // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n  shareReplay({\n    bufferSize: 1,\n    refCount: true\n  }));\n  return {\n    load: (...args) => {\n      if (!params$.getValue()) {\n        params$.next(args);\n      }\n      return loaded$;\n    },\n    reinitialize: () => {\n      params$.next(null);\n    }\n  };\n};\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorComponent),\n  multi: true\n};\n/**\n * @see {@link https://www.tiny.cloud/docs/tinymce/7/angular-ref/} for the TinyMCE Angular Technical Reference\n */\nclass EditorComponent extends Events {\n  cdRef;\n  platformId;\n  tinymceScriptSrc;\n  cloudChannel = '7';\n  apiKey = 'no-api-key';\n  licenseKey;\n  init;\n  id = '';\n  initialValue;\n  outputFormat;\n  inline;\n  tagName;\n  plugins;\n  toolbar;\n  modelEvents = 'change input undo redo';\n  allowedEvents;\n  ignoreEvents;\n  set disabled(val) {\n    this._disabled = val;\n    if (this._editor && this._editor.initialized) {\n      if (typeof this._editor.mode?.set === 'function') {\n        this._editor.mode.set(val ? 'readonly' : 'design');\n      } else {\n        this._editor.setMode(val ? 'readonly' : 'design');\n      }\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  get editor() {\n    return this._editor;\n  }\n  ngZone;\n  _elementRef;\n  _element;\n  _disabled;\n  _editor;\n  onTouchedCallback = noop;\n  onChangeCallback;\n  destroy$ = new Subject();\n  constructor(elementRef, ngZone, cdRef, platformId, tinymceScriptSrc) {\n    super();\n    this.cdRef = cdRef;\n    this.platformId = platformId;\n    this.tinymceScriptSrc = tinymceScriptSrc;\n    this._elementRef = elementRef;\n    this.ngZone = ngZone;\n  }\n  writeValue(value) {\n    if (this._editor && this._editor.initialized) {\n      this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n    } else {\n      this.initialValue = value === null ? undefined : value;\n    }\n  }\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.id = this.id || uuid('tiny-angular');\n      this.inline = this.inline !== undefined ? this.inline !== false : !!this.init?.inline;\n      this.createElement();\n      if (getTinymce() !== null) {\n        this.initialise();\n      } else if (this._element && this._element.ownerDocument) {\n        // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n        // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n        ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc()).pipe(takeUntil(this.destroy$)).subscribe(this.initialise);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    if (getTinymce() !== null) {\n      getTinymce().remove(this._editor);\n    }\n  }\n  createElement() {\n    const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n    this._element = document.createElement(this.inline ? tagName : 'textarea');\n    if (this._element) {\n      const existingElement = document.getElementById(this.id);\n      if (existingElement && existingElement !== this._elementRef.nativeElement) {\n        /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n        console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n      }\n      this._element.id = this.id;\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = 'hidden';\n      }\n      this._elementRef.nativeElement.appendChild(this._element);\n    }\n  }\n  initialise = () => {\n    const finalInit = {\n      ...this.init,\n      selector: undefined,\n      target: this._element,\n      inline: this.inline,\n      readonly: this.disabled,\n      license_key: this.licenseKey,\n      plugins: mergePlugins(this.init && this.init.plugins, this.plugins),\n      toolbar: this.toolbar || this.init && this.init.toolbar,\n      setup: editor => {\n        this._editor = editor;\n        listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n          this.initEditor(editor);\n        });\n        bindHandlers(this, editor, this.destroy$);\n        if (this.init && typeof this.init.setup === 'function') {\n          this.init.setup(editor);\n        }\n      }\n    };\n    if (isTextarea(this._element)) {\n      this._element.style.visibility = '';\n    }\n    this.ngZone.runOutsideAngular(() => {\n      getTinymce().init(finalInit);\n    });\n  };\n  getScriptSrc() {\n    return isNullOrUndefined(this.tinymceScriptSrc) ? `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` : this.tinymceScriptSrc;\n  }\n  initEditor(editor) {\n    listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n      this.cdRef.markForCheck();\n      this.ngZone.run(() => this.onTouchedCallback());\n    });\n    listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n      this.cdRef.markForCheck();\n      this.ngZone.run(() => this.emitOnChange(editor));\n    });\n    if (typeof this.initialValue === 'string') {\n      this.ngZone.run(() => {\n        editor.setContent(this.initialValue);\n        if (editor.getContent() !== this.initialValue) {\n          this.emitOnChange(editor);\n        }\n        if (this.onInitNgModel !== undefined) {\n          this.onInitNgModel.emit(editor);\n        }\n      });\n    }\n  }\n  emitOnChange(editor) {\n    if (this.onChangeCallback) {\n      this.onChangeCallback(editor.getContent({\n        format: this.outputFormat\n      }));\n    }\n  }\n  static …µfac = function EditorComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || EditorComponent)(i0.…µ…µdirectiveInject(i0.ElementRef), i0.…µ…µdirectiveInject(i0.NgZone), i0.…µ…µdirectiveInject(i0.ChangeDetectorRef), i0.…µ…µdirectiveInject(PLATFORM_ID), i0.…µ…µdirectiveInject(TINYMCE_SCRIPT_SRC, 8));\n  };\n  static …µcmp = /* @__PURE__ */i0.…µ…µdefineComponent({\n    type: EditorComponent,\n    selectors: [[\"editor\"]],\n    inputs: {\n      cloudChannel: \"cloudChannel\",\n      apiKey: \"apiKey\",\n      licenseKey: \"licenseKey\",\n      init: \"init\",\n      id: \"id\",\n      initialValue: \"initialValue\",\n      outputFormat: \"outputFormat\",\n      inline: \"inline\",\n      tagName: \"tagName\",\n      plugins: \"plugins\",\n      toolbar: \"toolbar\",\n      modelEvents: \"modelEvents\",\n      allowedEvents: \"allowedEvents\",\n      ignoreEvents: \"ignoreEvents\",\n      disabled: \"disabled\"\n    },\n    features: [i0.…µ…µProvidersFeature([EDITOR_COMPONENT_VALUE_ACCESSOR]), i0.…µ…µInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function EditorComponent_Template(rf, ctx) {},\n    dependencies: [CommonModule, FormsModule],\n    styles: [\"[_nghost-%COMP%]{display:block}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(EditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'editor',\n      template: '',\n      providers: [EDITOR_COMPONENT_VALUE_ACCESSOR],\n      standalone: true,\n      imports: [CommonModule, FormsModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{display:block}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TINYMCE_SCRIPT_SRC]\n    }]\n  }], {\n    cloudChannel: [{\n      type: Input\n    }],\n    apiKey: [{\n      type: Input\n    }],\n    licenseKey: [{\n      type: Input\n    }],\n    init: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: Input\n    }],\n    modelEvents: [{\n      type: Input\n    }],\n    allowedEvents: [{\n      type: Input\n    }],\n    ignoreEvents: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nclass EditorModule {\n  static …µfac = function EditorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || EditorModule)();\n  };\n  static …µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n    type: EditorModule,\n    imports: [EditorComponent],\n    exports: [EditorComponent]\n  });\n  static …µinj = /* @__PURE__ */i0.…µ…µdefineInjector({\n    imports: [EditorComponent]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.…µsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [EditorComponent],\n      exports: [EditorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };\n","import { Component, inject, Input, Output, EventEmitter, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EditorModule, TINYMCE_SCRIPT_SRC } from '@tinymce/tinymce-angular';\nimport { FirestoreService } from '../../services/firestore.service';\n\n@Component({\n  selector: 'app-template-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, EditorModule],\n  providers: [\n    { provide: TINYMCE_SCRIPT_SRC, useValue: 'tinymce/tinymce.min.js' }\n  ],\n  templateUrl: './template-modal.component.html',\n  styleUrls: ['./template-modal.component.scss']\n})\nexport class TemplateModalComponent implements AfterViewInit {\n  private firestoreService = inject(FirestoreService);\n  private fb = inject(FormBuilder);\n\n  @Input() ownerId: string = '';\n  @Input() boardId: string = '';\n  \n  @Output() templateSaved = new EventEmitter<void>();\n  @Output() closeModal = new EventEmitter<void>();\n\n  isVisible = false;\n  isEditing = false;\n  isLoading = false;\n  errorMessage = '';\n  currentTemplate: any = null;\n  \n  public tinymceEditor: any = null;\n  \n  // Configura√ß√£o do TinyMCE\n  public tinymceConfig = {\n    height: 400,\n    menubar: false,\n    plugins: [\n      'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n      'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n      'insertdatetime', 'media', 'table', 'help', 'wordcount'\n    ],\n    toolbar: 'undo redo | blocks | ' +\n      'bold italic backcolor | alignleft aligncenter ' +\n      'alignright alignjustify | bullist numlist outdent indent | ' +\n      'removeformat | code | help',\n    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n    placeholder: 'Digite o conte√∫do do seu template de email aqui...',\n    branding: false,\n    code_dialog_width: 800,\n    code_dialog_height: 600\n  };\n\n  templateForm: FormGroup = this.fb.group({\n    name: ['', [Validators.required]],\n    subject: ['', [Validators.required]],\n    recipients: [''],\n    body: ['', [Validators.required]]\n  });\n\n  variables: { name: string; value: string }[] = [];\n\n  ngAfterViewInit() {\n    console.log('Template modal inicializado');\n  }\n\n  // M√©todo para inserir vari√°veis no TinyMCE na posi√ß√£o do cursor\n  insertVariable(variable: string) {\n    if (this.tinymceEditor) {\n      try {\n        // Inserir vari√°vel na posi√ß√£o do cursor no TinyMCE\n        this.tinymceEditor.insertContent(variable);\n        this.tinymceEditor.focus();\n        return;\n      } catch (error) {\n        console.warn('Falha ao inserir no TinyMCE, usando fallback:', error);\n      }\n    }\n\n    // Fallback: inserir no final do conte√∫do atual\n    const currentContent = this.templateForm.get('body')?.value || '';\n    const newContent = currentContent + ' ' + variable;\n    this.templateForm.patchValue({ body: newContent });\n  }\n\n  // M√©todo chamado quando TinyMCE √© inicializado\n  onEditorInit(editor: any) {\n    this.tinymceEditor = editor;\n    console.log('TinyMCE Editor inicializado e pronto');\n  }\n\n  showCreateModal() {\n    this.isEditing = false;\n    this.currentTemplate = null;\n    this.isVisible = true;\n    this.resetForm();\n    this.loadDynamicVariables();\n  }\n\n  showEditModal(template: any) {\n    this.isEditing = true;\n    this.currentTemplate = template;\n    this.isVisible = true;\n    this.populateForm(template);\n    this.loadDynamicVariables();\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.resetForm();\n    this.closeModal.emit();\n  }\n\n  private resetForm() {\n    this.templateForm.reset({\n      name: '',\n      subject: '',\n      recipients: '',\n      body: ''\n    });\n    this.errorMessage = '';\n    this.isLoading = false;\n  }\n\n  private populateForm(template: any) {\n    console.log('Carregando template:', template);\n    this.templateForm.patchValue({\n      name: template.name || '',\n      subject: template.subject || '',\n      recipients: template.recipients || '',\n      body: template.body || ''\n    });\n\n    // TinyMCE ser√° preenchido automaticamente atrav√©s do modelo do formul√°rio\n    console.log('Template carregado:', template.body);\n  }\n\n  private async loadDynamicVariables() {\n    try {\n      // Come√ßa com vari√°veis padr√£o do sistema\n      const base: { name: string; value: string }[] = [\n        { name: 'Nome do Respons√°vel', value: '{{nomeResponsavel}}' },\n        { name: 'Email do Respons√°vel', value: '{{emailResponsavel}}' },\n        { name: 'Nome da Fase Atual', value: '{{currentPhaseName}}' },\n        { name: 'Data Atual', value: '{{currentDate}}' },\n        { name: 'Link do Registro', value: '{{leadLink}}' }\n      ];\n\n      // Tenta carregar campos do formul√°rio inicial para gerar vari√°veis din√¢micas\n      const initial = await this.firestoreService.getInitialFormConfig(this.boardId);\n      const dynamic: { name: string; value: string }[] = [];\n      const pushField = (f: any) => {\n        const key = f.apiFieldName?.trim() || f.name?.trim();\n        if (!key) return;\n        dynamic.push({ name: f.label || key, value: `{{${key}}}` });\n      };\n      if (initial?.fields && Array.isArray(initial.fields)) {\n        initial.fields.forEach(pushField);\n      }\n\n      // Fallback: alguns campos comuns\n      if (dynamic.length === 0) {\n        dynamic.push(\n          { name: 'Nome', value: '{{name}}' },\n          { name: 'Email', value: '{{email}}' },\n          { name: 'Telefone', value: '{{phone}}' }\n        );\n      }\n\n      this.variables = [...dynamic, ...base];\n    } catch {\n      this.variables = [\n        { name: 'Nome', value: '{{name}}' },\n        { name: 'Email', value: '{{email}}' },\n        { name: 'Telefone', value: '{{phone}}' },\n        { name: 'Data Atual', value: '{{currentDate}}' }\n      ];\n    }\n  }\n\n\n\n\n  async saveTemplate() {\n    if (!this.templateForm.valid) {\n      this.errorMessage = 'Por favor, preencha todos os campos obrigat√≥rios.';\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    try {\n      const formData = this.templateForm.value;\n      \n      const templateData = {\n        name: formData.name,\n        subject: formData.subject,\n        recipients: formData.recipients || '',\n        body: formData.body || ''\n      };\n\n      if (this.isEditing && this.currentTemplate) {\n        // Atualizar template existente\n        await this.firestoreService.updateEmailTemplate(\n          this.ownerId,\n          this.boardId,\n          this.currentTemplate.id,\n          templateData\n        );\n      } else {\n        // Criar novo template\n        await this.firestoreService.createEmailTemplate(\n          this.ownerId,\n          this.boardId,\n          templateData\n        );\n      }\n\n      this.templateSaved.emit();\n      this.hide();\n    } catch (error: any) {\n      console.error('Erro ao salvar template:', error);\n      this.errorMessage = 'Erro ao salvar template. Tente novamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    if (event.target === event.currentTarget) {\n      this.hide();\n    }\n  }\n}","<div *ngIf=\"isVisible\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\" (click)=\"onBackdropClick($event)\">\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[95vh] overflow-hidden\">\n    <!-- Header -->\n    <div class=\"flex justify-between items-center p-6 border-b border-gray-200\">\n      <h2 class=\"text-2xl font-bold text-gray-900\">\n        {{ isEditing ? 'Editar Template' : 'Criar Novo Template' }}\n      </h2>\n      <button \n        (click)=\"hide()\" \n        class=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n        [disabled]=\"isLoading\">\n        &times;\n      </button>\n    </div>\n\n    <!-- Modal Body -->\n    <form [formGroup]=\"templateForm\" (ngSubmit)=\"saveTemplate()\" class=\"p-6 max-h-[calc(95vh-120px)] overflow-y-auto\">\n      \n      <!-- Campos b√°sicos -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        <div class=\"form-group\">\n          <label for=\"templateName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Nome do Template\n            <span class=\"text-red-500\">*</span>\n          </label>\n          <input \n            type=\"text\"\n            id=\"templateName\"\n            formControlName=\"name\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            [disabled]=\"isLoading\"\n            placeholder=\"Ex: Template de boas-vindas, email promocional, etc.\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"templateRecipients\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Destinat√°rios\n          </label>\n          <input \n            type=\"text\"\n            id=\"templateRecipients\"\n            formControlName=\"recipients\"\n            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            [disabled]=\"isLoading\"\n            placeholder=\"Ex: {{'{{'}}contactEmail{{'}}'}}\">\n        </div>\n      </div>\n\n      <!-- Assunto -->\n      <div class=\"form-group mb-4\">\n        <label for=\"templateSubject\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n          Assunto\n          <span class=\"text-red-500\">*</span>\n        </label>\n        <input \n          type=\"text\"\n          id=\"templateSubject\"\n          formControlName=\"subject\"\n          class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          [disabled]=\"isLoading\"\n          placeholder=\"Ex: Obrigado por entrar em contato\">\n      </div>\n\n      <!-- Editor de corpo -->\n      <div class=\"mb-4\">\n        <div class=\"flex justify-between items-center mb-2\">\n          <label class=\"block text-sm font-medium text-gray-700\">\n            Corpo do Email\n            <span class=\"text-red-500\">*</span>\n          </label>\n        </div>\n\n        <!-- Vari√°veis dispon√≠veis -->\n        <div class=\"bg-gray-50 p-3 rounded-md mb-3\">\n          <p class=\"text-xs text-gray-600 mb-2\">Clique para inserir vari√°veis:</p>\n          <div class=\"flex flex-wrap gap-1\">\n            <button\n              *ngFor=\"let variable of variables\"\n              type=\"button\"\n              (click)=\"insertVariable(variable.value)\"\n              class=\"variable-tag px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded hover:bg-blue-200 transition-colors\"\n              [disabled]=\"isLoading\">\n              {{ variable.value }}\n            </button>\n          </div>\n          <p class=\"text-xs text-gray-500 mt-2\">\n            As vari√°veis ser√£o substitu√≠das automaticamente pelos dados reais do lead quando o email for enviado.\n          </p>\n        </div>\n\n        <!-- Editor TinyMCE -->\n        <div class=\"mb-4\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Corpo do E-mail\n            <span class=\"text-red-500\">*</span>\n          </label>\n          \n          <div class=\"border border-gray-300 rounded-lg overflow-hidden\">\n            <editor\n              [init]=\"tinymceConfig\"\n              formControlName=\"body\"\n              (onInit)=\"onEditorInit($event.editor)\">\n            </editor>\n          </div>\n        </div>\n      </div>\n\n      <!-- Mensagem de erro -->\n      <div *ngIf=\"errorMessage\" class=\"mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\n        {{ errorMessage }}\n      </div>\n\n\n      <!-- Bot√µes de a√ß√£o -->\n      <div class=\"flex justify-end gap-3 pt-4 border-t border-gray-200\">\n        <button \n          type=\"button\" \n          (click)=\"hide()\"\n          class=\"px-6 py-3 text-gray-700 bg-gray-200 hover:bg-gray-300 rounded-lg font-medium transition-colors\"\n          [disabled]=\"isLoading\">\n          Cancelar\n        </button>\n        \n        <button \n          type=\"submit\" \n          [disabled]=\"isLoading || !templateForm.valid\"\n          class=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white rounded-lg font-medium transition-colors flex items-center\">\n          <div *ngIf=\"isLoading\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n          {{ isLoading ? 'Salvando...' : (isEditing ? 'Atualizar Template' : 'Criar Template') }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-automation-modal',\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './automation-modal.html',\n  styleUrls: ['./automation-modal.scss']\n})\nexport class AutomationModal implements OnInit {\n  @Input() isVisible = false;\n  @Input() automation: any = null;\n  @Input() phases: any[] = [];\n  @Input() emailTemplates: any[] = [];\n  @Input() users: any[] = [];\n  @Input() allowedTriggerTypes: string[] | null = null; // se null, usa padr√£o\n  @Input() fixedPhaseId: string | null = null;\n  @Input() allowedTransitions: Record<string, string[]> = {};\n  @Output() closeModalEvent = new EventEmitter<void>();\n  @Output() saveAutomation = new EventEmitter<any>();\n\n  automationForm: FormGroup;\n  modalTitle = 'Criar Automa√ß√£o';\n  isEditing = false;\n  showTriggerPhase = false;\n  showTriggerTime = false;\n\n  constructor(private fb: FormBuilder) {\n    this.automationForm = this.createForm();\n  }\n\n  getFixedPhaseName(): string {\n    if (!this.fixedPhaseId || !Array.isArray(this.phases)) return 'Fase selecionada';\n    const found = this.phases.find((p: any) => p && p.id === this.fixedPhaseId);\n    return (found && found.name) ? found.name : 'Fase selecionada';\n  }\n\n  ngOnInit() {\n    if (this.automation) {\n      this.isEditing = true;\n      this.modalTitle = 'Editar Automa√ß√£o';\n      this.loadAutomationData();\n    }\n    // Se veio atrelado a uma fase fixa, predefinir a fase\n    if (this.fixedPhaseId) {\n      this.automationForm.get('triggerPhase')?.setValue(this.fixedPhaseId);\n    }\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      id: [''],\n      // Nome opcional (gera autom√°tico no submit caso vazio)\n      name: [''],\n      triggerType: ['new-lead-created', Validators.required],\n      triggerPhase: [''],\n      triggerDays: [1],\n      actions: this.fb.array([])\n    });\n  }\n\n  private createActionGroup(existing?: any): FormGroup {\n    const group = this.fb.group({\n      type: ['send-email'],\n      templateId: [''],\n      phaseId: [''],\n      userId: [''],\n      note: ['']\n    });\n    if (existing) {\n      group.patchValue(existing);\n    }\n    return group;\n  }\n\n  loadAutomationData() {\n    if (this.automation) {\n      this.automationForm.patchValue({\n        id: this.automation.id,\n        name: this.automation.name,\n        triggerType: this.automation.triggerType,\n        triggerPhase: this.automation.triggerPhase,\n        triggerDays: this.automation.triggerDays\n      });\n\n      const actionsArray = this.automationForm.get('actions') as FormArray;\n      actionsArray.clear();\n      \n      if (this.automation.actions) {\n        this.automation.actions.forEach((action: any) => {\n          actionsArray.push(this.createActionGroup(action));\n        });\n      }\n\n      this.onTriggerTypeChange();\n    }\n  }\n\n  onTriggerTypeChange() {\n    const triggerType = this.automationForm.get('triggerType')?.value;\n    \n    this.showTriggerPhase = triggerType === 'card-enters-phase' || \n                           triggerType === 'card-in-phase-for-time' || \n                           triggerType === 'form-not-answered' ||\n                           triggerType === 'sla-overdue';\n    \n    this.showTriggerTime = triggerType === 'card-in-phase-for-time' || triggerType === 'form-not-answered';\n\n    const triggerPhaseCtrl = this.automationForm.get('triggerPhase');\n    const triggerDaysCtrl = this.automationForm.get('triggerDays');\n\n    if (this.showTriggerPhase) {\n      triggerPhaseCtrl?.setValidators([Validators.required]);\n      const currentVal = triggerPhaseCtrl?.value;\n      const desired = this.fixedPhaseId || currentVal || (this.phases && this.phases[0]?.id) || '';\n      if (desired) triggerPhaseCtrl?.setValue(desired);\n    } else {\n      triggerPhaseCtrl?.clearValidators();\n      triggerPhaseCtrl?.setValue('');\n    }\n    triggerPhaseCtrl?.updateValueAndValidity({ emitEvent: false });\n    \n    if (this.showTriggerTime) {\n      triggerDaysCtrl?.setValidators([Validators.required, Validators.min(1)]);\n    } else {\n      triggerDaysCtrl?.clearValidators();\n      triggerDaysCtrl?.setValue(1);\n    }\n    triggerDaysCtrl?.updateValueAndValidity({ emitEvent: false });\n  }\n\n  // Lista de fases permitidas para a a√ß√£o \"mover para fase\"\n  getAllowedPhasesForMoveAction(): any[] {\n    try {\n      const fromPhaseId = this.fixedPhaseId || this.automationForm.get('triggerPhase')?.value || '';\n      if (!fromPhaseId) {\n        // Sem fase definida ainda, n√£o listar nada para evitar confus√£o\n        return [];\n      }\n      const allowedIds = (this.allowedTransitions && this.allowedTransitions[fromPhaseId]) || [];\n      if (Array.isArray(allowedIds) && allowedIds.length > 0) {\n        return (this.phases || []).filter((p: any) => allowedIds.includes(p.id));\n      }\n      // Fallback: sem configura√ß√£o de fluxo, listar todas exceto a pr√≥pria fase\n      return (this.phases || []).filter((p: any) => p.id !== fromPhaseId);\n    } catch {\n      return (this.phases || []);\n    }\n  }\n\n  get actionsFormArray(): FormArray {\n    return this.automationForm.get('actions') as FormArray;\n  }\n\n  addAction() {\n    this.actionsFormArray.push(this.createActionGroup());\n  }\n\n  removeAction(index: number) {\n    this.actionsFormArray.removeAt(index);\n  }\n\n  onSubmit() {\n    if (this.automationForm.valid) {\n      const formValue = this.automationForm.value;\n      \n      const automationData = {\n        ...formValue,\n        name: formValue.name || `Automa√ß√£o ${this.getAutomationTypeName(formValue.triggerType)}`,\n        actions: formValue.actions.filter((action: any) => this.isValidAction(action))\n      };\n\n      this.saveAutomation.emit(automationData);\n      this.closeModal();\n    }\n  }\n\n  isValidAction(action: any): boolean {\n    switch (action.type) {\n      case 'send-email':\n        return !!action.templateId;\n      case 'move-to-phase':\n        return !!action.phaseId;\n      case 'assign-user':\n        return !!action.userId;\n      case 'add-note':\n        return !!action.note && action.note.trim().length > 0;\n      default:\n        return false;\n    }\n  }\n\n  canSubmit(): boolean {\n    if (!this.automationForm.valid) return false;\n    // Exigir ao menos 1 a√ß√£o v√°lida\n    const actions = (this.actionsFormArray?.value || []) as any[];\n    return actions.some(a => this.isValidAction(a));\n  }\n\n  getAutomationTypeName(triggerType: string): string {\n    const types: { [key: string]: string } = {\n      'new-lead-created': 'Criar novo registro (apenas fase inicial)',\n      'card-enters-phase': 'Um card entrou na fase',\n      'card-in-phase-for-time': 'Um card est√° na fase por um tempo',\n      'form-not-answered': 'Formul√°rio da fase n√£o respondido',\n      'sla-overdue': 'SLA Vencido'\n    };\n    return types[triggerType] || 'Sem Nome';\n  }\n\n  closeModal() {\n    this.automationForm.reset();\n    this.actionsFormArray.clear();\n    this.isEditing = false;\n    this.modalTitle = 'Criar Automa√ß√£o';\n    this.showTriggerPhase = false;\n    this.showTriggerTime = false;\n    this.closeModalEvent.emit();\n  }\n}\n","<div class=\"modal-overlay\" (click)=\"closeModal()\">\n  <div class=\"modal-content modal-content-md p-6\" (click)=\"$event.stopPropagation()\">\n    <div class=\"flex justify-between items-center mb-4\">\n      <h2 class=\"text-2xl font-bold\">{{ modalTitle }}</h2>\n      <button class=\"text-gray-500 hover:text-gray-800 text-2xl\" (click)=\"closeModal()\">&times;</button>\n    </div>\n    \n    <form [formGroup]=\"automationForm\" (ngSubmit)=\"onSubmit()\" class=\"modal-body space-y-6\">\n      <div class=\"border rounded-lg p-4\">\n        <h3 class=\"font-semibold text-md mb-3 text-gray-700\">Gatilho (Quando...)</h3>\n        <select formControlName=\"triggerType\" class=\"w-full p-2 border rounded-md mb-2 bg-white\" (change)=\"onTriggerTypeChange()\">\n          <ng-container *ngIf=\"!allowedTriggerTypes\">\n            <option value=\"new-lead-created\">Criar novo registro (apenas fase inicial)</option>\n            <option value=\"card-enters-phase\">Um card entrou na fase</option>\n            <option value=\"card-in-phase-for-time\">Um card est√° na fase por um tempo</option>\n            <option value=\"form-not-answered\">Formul√°rio da fase n√£o respondido</option>\n            <option value=\"sla-overdue\">SLA da fase venceu</option>\n          </ng-container>\n          <ng-container *ngIf=\"allowedTriggerTypes\">\n            <option *ngIf=\"allowedTriggerTypes.includes('new-lead-created')\" value=\"new-lead-created\">Criar novo registro (apenas fase inicial)</option>\n            <option *ngIf=\"allowedTriggerTypes.includes('card-enters-phase')\" value=\"card-enters-phase\">Um card entrou na fase</option>\n            <option *ngIf=\"allowedTriggerTypes.includes('card-in-phase-for-time')\" value=\"card-in-phase-for-time\">Um card est√° na fase por um tempo</option>\n            <option *ngIf=\"allowedTriggerTypes.includes('form-not-answered')\" value=\"form-not-answered\">Formul√°rio da fase n√£o respondido</option>\n            <option *ngIf=\"allowedTriggerTypes.includes('sla-overdue')\" value=\"sla-overdue\">SLA da fase venceu</option>\n          </ng-container>\n        </select>\n        \n        <div [class.hidden]=\"!showTriggerPhase\">\n          <label for=\"triggerPhase\" class=\"text-sm font-medium text-gray-700\">Fase:</label>\n          <ng-container *ngIf=\"!fixedPhaseId; else fixedPhase\">\n            <select formControlName=\"triggerPhase\" class=\"w-full p-2 border rounded-md mt-1 bg-white\">\n              <option *ngFor=\"let phase of phases\" [value]=\"phase.id\">{{ phase.name }}</option>\n            </select>\n          </ng-container>\n          <ng-template #fixedPhase>\n            <div class=\"mt-1 p-2 bg-gray-50 border rounded text-sm\">\n              {{ getFixedPhaseName() }}\n            </div>\n          </ng-template>\n        </div>\n        \n        <div [class.hidden]=\"!showTriggerTime\" class=\"mt-2\">\n          <label for=\"triggerDays\" class=\"text-sm font-medium text-gray-700\" *ngIf=\"automationForm.get('triggerType')?.value === 'card-in-phase-for-time'\">Por (dias):</label>\n          <label for=\"triggerDays\" class=\"text-sm font-medium text-gray-700\" *ngIf=\"automationForm.get('triggerType')?.value === 'form-not-answered'\">Aguardar (dias):</label>\n          <input type=\"number\" formControlName=\"triggerDays\" min=\"1\" class=\"w-full p-2 border rounded-md mt-1\" placeholder=\"Ex: 3\">\n          <div class=\"text-xs text-gray-500 mt-1\" *ngIf=\"automationForm.get('triggerType')?.value === 'form-not-answered'\">\n            Se, ap√≥s esse prazo, nenhum campo do formul√°rio da fase tiver sido preenchido, a automa√ß√£o ser√° executada.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"border rounded-lg p-4\">\n        <h3 class=\"font-semibold text-md mb-3 text-gray-700\">A√ß√µes (Fa√ßa isso...)</h3>\n        <div class=\"space-y-3\">\n          <div *ngFor=\"let action of automationForm.get('actions')?.value; let i = index\" class=\"border rounded-lg p-3 bg-gray-50\">\n            <div class=\"flex justify-between items-start mb-2\">\n              <select [(ngModel)]=\"action.type\" [ngModelOptions]=\"{standalone: true}\" class=\"p-2 border rounded-md bg-white flex-1 mr-2\">\n                <option value=\"send-email\">Enviar e-mail</option>\n                <option value=\"move-to-phase\">Mover para fase</option>\n                <option value=\"assign-user\">Atribuir usu√°rio</option>\n                <option value=\"add-note\">Adicionar nota</option>\n              </select>\n              <button type=\"button\" (click)=\"removeAction(i)\" class=\"text-red-500 hover:text-red-700\">\n                <i class=\"fas fa-trash\"></i>\n              </button>\n            </div>\n            \n            <div [ngSwitch]=\"action.type\" class=\"mt-2\">\n              <div *ngSwitchCase=\"'send-email'\">\n                <select [(ngModel)]=\"action.templateId\" [ngModelOptions]=\"{standalone: true}\" class=\"w-full p-2 border rounded-md bg-white\">\n                  <option value=\"\">Selecione um template</option>\n                  <option *ngFor=\"let template of emailTemplates\" [value]=\"template.id\">{{ template.name }}</option>\n                </select>\n              </div>\n              \n              <div *ngSwitchCase=\"'move-to-phase'\">\n                <select [(ngModel)]=\"action.phaseId\" [ngModelOptions]=\"{standalone: true}\" class=\"w-full p-2 border rounded-md bg-white\">\n                  <option value=\"\">Selecione a fase de destino</option>\n                  <option *ngFor=\"let phase of getAllowedPhasesForMoveAction()\" [value]=\"phase.id\">{{ phase.name }}</option>\n                </select>\n                <div class=\"text-xs text-gray-500 mt-1\" *ngIf=\"fixedPhaseId || automationForm.get('triggerPhase')?.value\">\n                  Origem: {{ getFixedPhaseName() }}\n                </div>\n              </div>\n              \n              <div *ngSwitchCase=\"'assign-user'\">\n                <select [(ngModel)]=\"action.userId\" [ngModelOptions]=\"{standalone: true}\" class=\"w-full p-2 border rounded-md bg-white\">\n                  <option value=\"\">Selecione um usu√°rio</option>\n                  <option *ngFor=\"let user of users\" [value]=\"user.id\">{{ user.name }}</option>\n                </select>\n              </div>\n              \n              <div *ngSwitchCase=\"'add-note'\">\n                <textarea [(ngModel)]=\"action.note\" [ngModelOptions]=\"{standalone: true}\" class=\"w-full p-2 border rounded-md\" rows=\"3\" placeholder=\"Digite a nota...\"></textarea>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <button type=\"button\" (click)=\"addAction()\" class=\"mt-4 bg-gray-200 hover:bg-gray-300 text-gray-700 font-semibold py-2 px-4 rounded-lg text-sm\">\n          <i class=\"fas fa-plus mr-2\"></i>Adicionar A√ß√£o\n        </button>\n      </div>\n      \n      <div class=\"mt-6 flex justify-end gap-4\">\n        <button type=\"button\" class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-lg\" (click)=\"closeModal()\">Cancelar</button>\n        <button type=\"submit\" [disabled]=\"!canSubmit()\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg disabled:bg-gray-400\">\n          {{ isEditing ? 'Atualizar' : 'Salvar' }} Automa√ß√£o\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FirestoreService } from '../../services/firestore.service';\n\n@Component({\n  selector: 'app-automation-history-modal',\n  imports: [CommonModule],\n  templateUrl: './automation-history-modal.html',\n  styleUrl: './automation-history-modal.scss'\n})\nexport class AutomationHistoryModal implements OnInit, OnDestroy {\n  private firestoreService = inject(FirestoreService);\n\n  @Input() isVisible = false;\n  @Input() automationId = '';\n  @Input() automationName = '';\n  @Input() ownerId = '';\n  @Input() boardId = '';\n  @Input() leads: any[] = [];\n  @Output() closeModalEvent = new EventEmitter<void>();\n\n  historyItems: any[] = [];\n  paginatedItems: any[] = [];\n  isLoading = false;\n  currentPage = 1;\n  itemsPerPage = 10;\n  totalPages = 0;\n\n  private subscription?: () => void;\n\n  ngOnInit() {\n    if (this.isVisible && this.automationId) {\n      this.loadHistory();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n\n  ngOnChanges() {\n    if (this.isVisible && this.automationId) {\n      this.loadHistory();\n    } else if (!this.isVisible) {\n      this.unsubscribe();\n    }\n  }\n\n  private unsubscribe() {\n    if (this.subscription) {\n      this.subscription();\n      this.subscription = undefined;\n    }\n  }\n\n  async loadHistory() {\n    this.isLoading = true;\n    this.unsubscribe();\n\n    try {\n      this.subscription = this.firestoreService.subscribeToAutomationHistory(\n        this.ownerId,\n        this.boardId,\n        this.automationId,\n        (historyData) => {\n          this.historyItems = historyData.sort((a, b) => {\n            const timeA = a.timestamp?.toMillis ? a.timestamp.toMillis() : 0;\n            const timeB = b.timestamp?.toMillis ? b.timestamp.toMillis() : 0;\n            return timeB - timeA;\n          });\n          this.currentPage = 1;\n          this.updatePagination();\n          this.isLoading = false;\n        }\n      );\n    } catch (error) {\n      console.error('Erro ao carregar hist√≥rico de automa√ß√£o:', error);\n      this.isLoading = false;\n    }\n  }\n\n  updatePagination() {\n    this.totalPages = Math.ceil(this.historyItems.length / this.itemsPerPage);\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.paginatedItems = this.historyItems.slice(startIndex, endIndex);\n  }\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.updatePagination();\n    }\n  }\n\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.updatePagination();\n    }\n  }\n\n  getLeadName(leadId: string): string {\n    const lead = this.leads.find(l => l.id === leadId);\n    return lead ? (lead.fields?.companyName || lead.fields?.title || 'Lead sem nome') : 'Lead removido';\n  }\n\n  formatDate(timestamp: any): string {\n    if (!timestamp) return 'N/A';\n    \n    let date: Date;\n    if (timestamp.toDate) {\n      date = timestamp.toDate();\n    } else if (timestamp instanceof Date) {\n      date = timestamp;\n    } else {\n      return 'N/A';\n    }\n\n    return date.toLocaleString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  getStatusText(status: string): string {\n    const statusMap: { [key: string]: string } = {\n      'success': 'Sucesso',\n      'error': 'Erro',\n      'pending': 'Pendente',\n      'scheduled': 'Agendada'\n    };\n    return statusMap[status] || 'Desconhecido';\n  }\n\n  closeModal() {\n    this.unsubscribe();\n    this.closeModalEvent.emit();\n  }\n}\n","<div class=\"modal-overlay\" *ngIf=\"isVisible\" (click)=\"closeModal()\">\n  <div class=\"modal-content modal-content-lg p-6\" (click)=\"$event.stopPropagation()\">\n    <div class=\"flex justify-between items-center mb-4\">\n      <h2 class=\"text-2xl font-bold\">Hist√≥rico: {{ automationName }}</h2>\n      <button class=\"text-gray-500 hover:text-gray-800 text-2xl\" (click)=\"closeModal()\">&times;</button>\n    </div>\n    \n    <div class=\"overflow-x-auto\">\n      <table class=\"min-w-full bg-white\">\n        <thead class=\"bg-gray-50\">\n          <tr>\n            <th class=\"text-left py-3 px-4 uppercase font-semibold text-sm text-gray-600\">Data</th>\n            <th class=\"text-left py-3 px-4 uppercase font-semibold text-sm text-gray-600\">Lead Afetado</th>\n            <th class=\"text-left py-3 px-4 uppercase font-semibold text-sm text-gray-600\">Status</th>\n            <th class=\"text-left py-3 px-4 uppercase font-semibold text-sm text-gray-600\">A√ß√£o Executada</th>\n          </tr>\n        </thead>\n        <tbody class=\"text-gray-700 divide-y divide-gray-200\">\n          <tr *ngIf=\"isLoading\">\n            <td colspan=\"4\" class=\"text-center p-6 text-gray-500\">\n              <i class=\"fas fa-spinner fa-spin mr-2\"></i>Carregando hist√≥rico...\n            </td>\n          </tr>\n          <tr *ngIf=\"!isLoading && historyItems.length === 0\">\n            <td colspan=\"4\" class=\"text-center p-6 text-gray-500\">Nenhuma execu√ß√£o registrada.</td>\n          </tr>\n          <tr *ngFor=\"let item of paginatedItems\" class=\"hover:bg-gray-50\">\n            <td class=\"py-3 px-4\">{{ formatDate(item.timestamp) }}</td>\n            <td class=\"py-3 px-4\">{{ getLeadName(item.leadId) }}</td>\n            <td class=\"py-3 px-4\">\n              <span \n                class=\"px-2 py-1 text-xs font-medium rounded-full\"\n                [class.bg-green-100]=\"item.status === 'success'\"\n                [class.text-green-800]=\"item.status === 'success'\"\n                [class.bg-red-100]=\"item.status === 'error'\"\n                [class.text-red-800]=\"item.status === 'error'\"\n                [class.bg-yellow-100]=\"item.status === 'pending'\"\n                [class.text-yellow-800]=\"item.status === 'pending'\">\n                {{ getStatusText(item.status) }}\n              </span>\n            </td>\n            <td class=\"py-3 px-4\">{{ item.text || item.action || 'A√ß√£o executada' }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    \n    <!-- Pagina√ß√£o -->\n    <div *ngIf=\"totalPages > 1\" class=\"p-4 flex justify-between items-center\">\n      <button \n        (click)=\"previousPage()\" \n        [disabled]=\"currentPage === 1\"\n        class=\"bg-gray-200 hover:bg-gray-300 disabled:bg-gray-100 disabled:text-gray-400 text-gray-700 font-medium py-2 px-4 rounded-lg\">\n        <i class=\"fas fa-chevron-left mr-1\"></i>Anterior\n      </button>\n      \n      <span class=\"text-sm text-gray-600\">\n        P√°gina {{ currentPage }} de {{ totalPages }} ({{ historyItems.length }} registros)\n      </span>\n      \n      <button \n        (click)=\"nextPage()\" \n        [disabled]=\"currentPage === totalPages\"\n        class=\"bg-gray-200 hover:bg-gray-300 disabled:bg-gray-100 disabled:text-gray-400 text-gray-700 font-medium py-2 px-4 rounded-lg\">\n        Pr√≥xima<i class=\"fas fa-chevron-right ml-1\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, inject, OnInit, OnDestroy, ViewChild, HostListener, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { FirestoreService, Board, Column, Lead } from '../../services/firestore.service';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { AutomationService } from '../../services/automation.service';\nimport { ApiService } from '../../services/api.service';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, DragDropModule } from '@angular/cdk/drag-drop';\nimport { LeadModalComponent } from '../lead-modal/lead-modal.component';\nimport { ColumnModalComponent } from '../column-modal/column-modal.component';\nimport { PhaseFormModalComponent } from '../phase-form-modal/phase-form-modal.component';\nimport { LeadDetailModalComponent } from '../lead-detail-modal/lead-detail-modal.component';\nimport { TemplateModalComponent } from '../template-modal/template-modal.component';\nimport { AutomationModal } from '../automation-modal/automation-modal';\nimport { AutomationHistoryModal } from '../automation-history-modal/automation-history-modal';\nimport { MainLayoutComponent } from '../main-layout/main-layout.component';\nimport { VisualFormBuilderComponent } from '../visual-form-builder/visual-form-builder';\nimport { ReportsComponent } from '../reports/reports.component';\nimport { AdvancedFiltersComponent } from '../advanced-filters/advanced-filters.component';\nimport { ToastService } from '../toast/toast.service';\n\n@Component({\n  selector: 'app-kanban',\n  standalone: true,\n  imports: [CommonModule, FormsModule, DragDropModule, LeadModalComponent, ColumnModalComponent, PhaseFormModalComponent, LeadDetailModalComponent, TemplateModalComponent, AutomationModal, AutomationHistoryModal, MainLayoutComponent, VisualFormBuilderComponent, ReportsComponent],\n  templateUrl: './kanban.component.html',\n  styleUrls: ['./kanban.component.scss']\n})\nexport class KanbanComponent implements OnInit, OnDestroy {\n  private authService = inject(AuthService);\n  private firestoreService = inject(FirestoreService);\n  private subdomainService = inject(SubdomainService);\n  private automationService = inject(AutomationService);\n  private apiService = inject(ApiService);\n  private toast = inject(ToastService);\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private ngZone = inject(NgZone);\n  private cdr = inject(ChangeDetectorRef);\n\n  @ViewChild(LeadModalComponent) leadModal!: LeadModalComponent;\n  @ViewChild(ColumnModalComponent) columnModal!: ColumnModalComponent;\n  @ViewChild(PhaseFormModalComponent) phaseFormModal!: PhaseFormModalComponent;\n  @ViewChild(LeadDetailModalComponent) leadDetailModal!: LeadDetailModalComponent;\n  @ViewChild(TemplateModalComponent) templateModal!: TemplateModalComponent;\n  @ViewChild(AutomationModal) automationModal!: AutomationModal;\n  @ViewChild('flowScroller') flowScrollerRef!: ElementRef<HTMLDivElement>;\n  flowThumbPercent = 10;\n  flowThumbLeftPercent = 0;\n  private isDraggingFlowBar = false;\n  private isManualReorder = false;\n\n  board: Board | null = null;\n  columns: Column[] = [];\n  leads: Lead[] = [];\n  isDraggingLead = false;\n  // Arrays est√°veis por coluna para drag & drop e render\n  displayedLeadsByColumn: Record<string, Lead[]> = {};\n  // Ordem local por coluna (ids) ‚Äì persistido em localStorage por board\n  leadOrderByColumn: Record<string, string[]> = {};\n  // Controle de mover cards\n  cardMoveEnabled = true;\n  currentUser: any = null;\n  boardId: string = '';\n  ownerId: string = '';\n  // Campos configurados para exibir no card por fase\n  phaseCardFields: Record<string, any[]> = {};\n  \n  private subscriptions: Subscription[] = [];\n  isLoading = true;\n  \n  // Abas\n  activeTab: string = 'kanban';\n  tabs = [\n    { id: 'kanban', name: 'Kanban', icon: 'fa-columns' },\n    { id: 'initial-form', name: 'Formul√°rio inicial', icon: 'fa-list' },\n    { id: 'flow', name: 'Fluxo', icon: 'fa-project-diagram' },\n    { id: 'reports', name: 'Relat√≥rios', icon: 'fa-chart-bar' },\n    { id: 'outbox', name: 'Caixa de Sa√≠da', icon: 'fa-paper-plane' },\n    { id: 'templates', name: 'Templates', icon: 'fa-envelope' },\n    { id: 'api', name: 'API', icon: 'fa-code' }\n  ];\n\n  // API Configuration\n  apiEndpoint = '';\n  apiToken = 'KzB47@p!qR9$tW2m&e*J';\n\n  private timeAutomationIntervalId: any = null;\n\n  ngOnInit() {\n    this.currentUser = this.authService.getCurrentUser();\n    this.boardId = this.route.snapshot.paramMap.get('boardId') || '';\n    try { localStorage.setItem('last-board-id', this.boardId); } catch {}\n    this.ownerId = this.route.snapshot.queryParamMap.get('ownerId') || this.currentUser?.uid || '';\n    \n    \n    // Definir contexto da empresa no FirestoreService\n    const company = this.subdomainService.getCurrentCompany();\n    if (company) {\n      this.firestoreService.setCompanyContext(company);\n    } else {\n      console.warn('Empresa n√£o encontrada no contexto');\n    }\n    \n    if (this.currentUser && this.boardId && this.ownerId) {\n      // Load saved filters first\n      this.loadFilterState();\n      this.loadBoardData();\n      this.subscribeToRealtimeUpdates();\n      this.initializeApiEndpoint();\n      // Carregar formul√°rio inicial do board\n      this.loadInitialForm();\n      // Carregar fluxo de transi√ß√µes\n      this.loadFlowConfig();\n      // Agendador peri√≥dico para automa√ß√µes de tempo (a cada 60s)\n      // Apenas uma inst√¢ncia por board deve executar as automa√ß√µes\n      try {\n        this.timeAutomationIntervalId = setInterval(async () => {\n          try {\n            // S√≥ executar se tiver leads carregados e dados v√°lidos\n            if (this.leads && this.leads.length > 0 && this.columns && this.columns.length > 0) {\n              await this.automationService.processTimeBasedAutomations(this.leads, this.columns, this.boardId, this.ownerId);\n            }\n          } catch (error) {\n            console.warn('Erro nas automa√ß√µes de tempo:', error);\n          }\n        }, 60000);\n      } catch (error) {\n        console.error('Erro ao configurar automa√ß√µes de tempo:', error);\n      }\n    } else {\n      console.error('Par√¢metros faltando:', { currentUser: !!this.currentUser, boardId: this.boardId, ownerId: this.ownerId });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.timeAutomationIntervalId) {\n      try { clearInterval(this.timeAutomationIntervalId); } catch {}\n      this.timeAutomationIntervalId = null;\n    }\n  }\n\n  private initializeApiEndpoint() {\n    // Exibir sempre a URL correta da Cloud Function (dev/prod)\n    const company = this.subdomainService.getCurrentCompany();\n    const companyId = company?.id || '{COMPANY_ID}';\n    this.apiEndpoint = this.apiService.getLeadIntakeUrl(companyId, this.boardId);\n  }\n\n  private getFunctionsPort(): number {\n    // 1. Verificar localStorage (configura√ß√£o salva pelo usu√°rio)\n    const storedPort = localStorage.getItem('firebase-functions-port');\n    if (storedPort) {\n      return parseInt(storedPort, 10);\n    }\n    \n    // 2. Tentar detectar pela configura√ß√£o do Firebase (se dispon√≠vel)\n    try {\n      const firebaseConfig = (window as any).__FIREBASE_DEFAULTS__;\n      if (firebaseConfig?.emulatorHosts?.functions) {\n        const functionsHost = firebaseConfig.emulatorHosts.functions;\n        const portMatch = functionsHost.match(/:(\\d+)$/);\n        if (portMatch) {\n          return parseInt(portMatch[1], 10);\n        }\n      }\n    } catch (error) {\n      // Ignorar erro se n√£o conseguir detectar\n    }\n    \n    // 3. Usar porta padr√£o (3001 √© onde o server.js est√° rodando)\n    return 3001;\n  }\n\n  // Company logo methods\n  hasCompanyLogo(): boolean {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Se tem logo customizado\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return true;\n    }\n    \n    // Se √© a Gobuyer, sempre tem logo\n    if (company?.subdomain === 'gobuyer') {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getCompanyLogo(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    \n    // Se tem logo customizado, usar ele\n    if (company?.brandingConfig?.logo && company.brandingConfig.logo.trim() !== '') {\n      return company.brandingConfig.logo;\n    }\n    \n    // Se √© a Gobuyer, usar logo padr√£o da Gobuyer\n    if (company?.subdomain === 'gobuyer') {\n      return 'https://apps.gobuyer.com.br/sso/assets/images/logos/logo-gobuyer.png';\n    }\n    \n    return '';\n  }\n\n  getPrimaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n\n  getCompanyInitials(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    const name = company?.name || 'Task Board';\n    \n    if (!name || name === 'Task Board') return 'TB';\n    \n    const words = name.split(' ').filter(word => word.length > 0);\n    if (words.length === 1) {\n      return words[0].charAt(0).toUpperCase();\n    } else if (words.length >= 2) {\n      return words[0].charAt(0).toUpperCase() + words[1].charAt(0).toUpperCase();\n    }\n    \n    return 'TB';\n  }\n\n  private async loadBoardData() {\n    try {\n      // Carregar dados do quadro (implementar se necess√°rio)\n      await this.loadUsers();\n      await this.debugFirestoreCollections();\n      this.isLoading = false;\n    } catch (error) {\n      console.error('Erro ao carregar dados do quadro:', error);\n      this.isLoading = false;\n    }\n  }\n\n  private async debugFirestoreCollections() {\n    try {\n      \n      // Testar estrutura atual\n      const templates = await this.firestoreService.getEmailTemplates(this.ownerId, this.boardId);\n      \n      const automations = await this.firestoreService.getAutomations(this.ownerId, this.boardId);\n\n      // Testar estrutura alternativa - talvez os dados estejam direto na cole√ß√£o boards/{boardId}/\n      try {\n        const alternativeTemplates = await this.firestoreService.getEmailTemplates('', this.boardId);\n      } catch (error) {\n      }\n\n      // Debug removal - method was removed\n      \n    } catch (error) {\n      console.error('Erro no debug das cole√ß√µes:', error);\n    }\n  }\n\n  private async loadUsers() {\n    try {\n      // Simular carregamento de usu√°rios - em um caso real, voc√™ buscaria do Firestore\n      this.users = [\n        {\n          uid: this.currentUser?.uid,\n          displayName: this.currentUser?.displayName,\n          email: this.currentUser?.email\n        }\n      ];\n    } catch (error) {\n      console.error('Erro ao carregar usu√°rios:', error);\n    }\n  }\n\n  private subscribeToRealtimeUpdates() {\n    \n    // Subscrever colunas\n    const columnsUnsub = this.firestoreService.subscribeToColumns(\n      this.ownerId,\n      this.boardId,\n      (columns) => {\n        this.columns = columns;\n        this.loadCardFieldConfigs();\n        // Carregar configura√ß√µes de formul√°rios de todas as fases\n        this.loadAllPhaseFormConfigs();\n        // Sincronizar editor de fluxo: garantir que novas fases entrem na ordem\n        try { \n          // Sync flow order with columns\n          this.syncFlowOrderWithColumns(); \n        } catch {}\n      }\n    );\n    this.subscriptions.push({ unsubscribe: columnsUnsub } as Subscription);\n\n    // Subscrever leads\n    const leadsUnsub = this.firestoreService.subscribeToLeads(\n      this.ownerId,\n      this.boardId,\n      async (leads) => {\n        // Detectar novos leads e mudan√ßas de fase para acionar automa√ß√µes\n        const currentById: Record<string, Lead> = Object.create(null);\n        for (const l of leads as any) currentById[l.id!] = l as any;\n\n        if (!this._leadsStreamInitialized) {\n          // Primeira carga: somente inicializa o snapshot anterior\n          this._lastLeadsById = currentById;\n          this._leadsStreamInitialized = true;\n        } else {\n          // Novos leads\n          const newLeads: Lead[] = [];\n          // Movidos de fase\n          const moved: Array<{ lead: Lead; from: string; to: string }> = [];\n\n          const prev = this._lastLeadsById || {};\n          // Detect additions and moves\n          for (const [id, lead] of Object.entries(currentById)) {\n            const prevLead = prev[id];\n            if (!prevLead) {\n              newLeads.push(lead as Lead);\n            } else if (prevLead.columnId !== (lead as Lead).columnId) {\n              moved.push({ lead: lead as Lead, from: prevLead.columnId, to: (lead as Lead).columnId });\n            }\n          }\n\n          // Atualizar snapshot anterior antes de executar para evitar reentr√¢ncia\n          this._lastLeadsById = currentById;\n\n          try {\n            // Processar automa√ß√µes fora do ciclo de render\n            for (const nl of newLeads) {\n              try {\n                await this.automationService.processNewLeadAutomations(nl, this.boardId, this.ownerId);\n              } catch (e) { console.warn('Falha ao processar automa√ß√£o de novo lead:', e); }\n            }\n            for (const mv of moved) {\n              try {\n                await this.automationService.processPhaseChangeAutomations(mv.lead, mv.to, mv.from, this.boardId, this.ownerId);\n              } catch (e) { console.warn('Falha ao processar automa√ß√£o de mudan√ßa de fase:', e); }\n            }\n          } catch {}\n        }\n\n        // Enriquecer contadores simples com base no hist√≥rico (se dispon√≠vel em cache ou structure) ‚Äî placeholder 0\n        this.leads = (leads as any).map((l: any) => ({\n          ...l,\n          historyCommentsCount: l.historyCommentsCount ?? 0,\n          attachmentsCount: l.attachmentsCount ?? 0\n        }));\n        \n        this.isLoading = false;\n        this.ensureLeadOrderLoaded();\n        this.rebuildDisplayedLeads();\n      }\n    );\n    this.subscriptions.push({ unsubscribe: leadsUnsub } as Subscription);\n\n    // Subscrever emails da caixa de sa√≠da\n    const outboxUnsub = this.firestoreService.subscribeToOutboxEmails(\n      this.ownerId,\n      this.boardId,\n      (emails) => {\n        this.outboxEmails = emails;\n        this.updateEmailStatusCounts();\n      }\n    );\n    this.subscriptions.push({ unsubscribe: outboxUnsub } as Subscription);\n\n    // Subscrever templates de email\n    const templatesUnsub = this.firestoreService.subscribeToEmailTemplates(\n      this.ownerId,\n      this.boardId,\n      (templates) => {\n        this.emailTemplates = templates;\n      }\n    );\n    this.subscriptions.push({ unsubscribe: templatesUnsub } as Subscription);\n\n    // Subscrever automa√ß√µes\n    \n    const automationsUnsub = this.firestoreService.subscribeToAutomations(\n      this.ownerId,\n      this.boardId,\n      (automations) => {\n        \n        if (automations && automations.length > 0) {\n        } else {\n        }\n        \n        // Atribuir as automa√ß√µes (mesmo se for array vazio)\n        this.automations = automations || [];\n        \n        // Limpar automa√ß√µes inv√°lidas se existirem\n        this.cleanupInvalidAutomations();\n        \n        // Automa√ß√µes carregadas do banco de dados\n        \n      }\n    );\n    this.subscriptions.push({ unsubscribe: automationsUnsub } as Subscription);\n  }\n\n  private async loadCardFieldConfigs() {\n    try {\n      const map: Record<string, any[]> = {};\n      for (const col of this.columns) {\n        try {\n          const cfg = await this.firestoreService.getPhaseFormConfig(this.ownerId, this.boardId, col.id!);\n          const fields = (cfg as any)?.fields || [];\n          const filteredFields = fields.filter((f: any) => !!f?.showInCard || !!f?.showInAllPhases);\n          map[col.id!] = filteredFields.sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n        } catch (error) {\n          map[col.id!] = [];\n        }\n      }\n      this.phaseCardFields = map;\n    } catch {\n      this.phaseCardFields = {};\n    }\n  }\n\n  private isPlainObject(value: any): boolean {\n    return value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  private flattenObject(source: any, maxDepth: number = 3): Record<string, any> {\n    const out: Record<string, any> = {};\n    if (!this.isPlainObject(source) || maxDepth < 0) return out;\n    for (const [key, val] of Object.entries(source)) {\n      if (this.isPlainObject(val) && maxDepth > 0) {\n        const nested = this.flattenObject(val, maxDepth - 1);\n        for (const [nk, nv] of Object.entries(nested)) {\n          if (out[nk] === undefined) out[nk] = nv;\n        }\n      } else if (val !== undefined && val !== null) {\n        out[key] = val as any;\n      }\n    }\n    return out;\n  }\n\n  private collectLeadFields(lead: Lead): Record<string, any> {\n    const base = ((lead as any).fields || {}) as any;\n    const containers = ['fields', 'leadData', 'data', 'payload'];\n    const merged: Record<string, any> = {};\n    const candidates: any[] = [base];\n    containers.forEach(k => { if (this.isPlainObject(base[k])) candidates.push(base[k]); });\n    if (this.isPlainObject(base.fields?.fields)) candidates.push(base.fields.fields);\n    for (const obj of candidates) {\n      for (const [k, v] of Object.entries(obj)) {\n        if (merged[k] === undefined && v !== undefined && v !== null && `${v}`.trim?.() !== '') merged[k] = v;\n      }\n    }\n    const deep = this.flattenObject(base, 3);\n    for (const [k, v] of Object.entries(deep)) {\n      if (merged[k] === undefined && v !== undefined && v !== null && `${v}`.trim?.() !== '') merged[k] = v;\n    }\n    return merged;\n  }\n\n  private readFieldValue(lead: Lead, key: string, labelHint?: string): any {\n    const fields: any = this.collectLeadFields(lead);\n    if (!key && !labelHint) return undefined;\n    const candidates: string[] = [];\n    if (key) candidates.push(key);\n    const synonymsGroup: Record<string, string[]> = {\n      companyName: ['companyName','empresa','nomeEmpresa','nameCompany','company','company_name','empresa_nome','nameComapny'],\n      contactName: ['contactName','name','nome','nomeLead','nameLead','leadName'],\n      contactEmail: ['contactEmail','email','emailLead','contatoEmail','leadEmail'],\n      contactPhone: ['contactPhone','phone','telefone','celular','phoneLead','telefoneContato'],\n      cnpj: ['cnpj','cnpjCompany','cnpjEmpresa','companyCnpj']\n    };\n    const keyLower = (key || '').toLowerCase();\n    // If key is a canonical or one of its synonyms, include the whole group (both directions)\n    Object.values(synonymsGroup).forEach(group => {\n      if (group.some(g => g.toLowerCase() === keyLower)) {\n        group.forEach(k => { if (!candidates.includes(k)) candidates.push(k); });\n      }\n    });\n    // If label hints the semantic, include the corresponding group\n    const hint = (labelHint || '').toLowerCase();\n    const labelMapHints: Array<{ words: string[]; groupKey: keyof typeof synonymsGroup }> = [\n      { words: ['empresa'], groupKey: 'companyName' },\n      { words: ['contato','nome do contato','respons√°vel','responsavel'], groupKey: 'contactName' },\n      { words: ['email','e-mail'], groupKey: 'contactEmail' },\n      { words: ['telefone','celular','whatsapp','whats'], groupKey: 'contactPhone' },\n      { words: ['cnpj'], groupKey: 'cnpj' }\n    ];\n    for (const m of labelMapHints) {\n      if (m.words.some(w => hint.includes(w))) {\n        synonymsGroup[m.groupKey].forEach(k => { if (!candidates.includes(k)) candidates.push(k); });\n      }\n    }\n    const lowerMap: Record<string, string> = Object.keys(fields).reduce((acc: any, k: string) => { acc[k.toLowerCase()] = k; return acc; }, {});\n    // Normalized map (remove non-alphanumerics) for fuzzy matching\n    const normalize = (s: string) => s.toLowerCase().replace(/[^a-z0-9]/g, '');\n    const normalizedMap: Record<string, string> = Object.keys(fields).reduce((acc: any, k: string) => { acc[normalize(k)] = k; return acc; }, {});\n    const visited = new Set<string>();\n    for (const k of candidates) {\n      const lk = k.toLowerCase();\n      if (visited.has(lk)) continue; visited.add(lk);\n      const original = lowerMap[lk] || normalizedMap[normalize(k)] || k;\n      const v = fields[original];\n      if (v !== undefined && v !== null && `${v}`.trim?.() !== '') return v;\n    }\n    return undefined;\n  }\n\n  async loadAllPhaseFormConfigs() {\n    for (const column of this.columns) {\n      try {\n        const config = await this.firestoreService.getPhaseFormConfig(this.ownerId, this.boardId, column.id!);\n        if (config?.fields) {\n          this.phaseFormConfigs[column.id!] = config;\n        }\n      } catch (e) {\n        // Ignorar erro se n√£o houver configura√ß√£o para esta fase\n      }\n    }\n    \n    // Recarregar campos dispon√≠veis para filtro ap√≥s carregar configura√ß√µes de fases\n    this.loadAvailableFilterFields();\n  }\n\n  getAllFieldsForDisplay(): any[] {\n    const initialFields: any[] = [];\n    const phaseFields: any[] = [];\n    \n    // 1. Campos do formul√°rio inicial (aparecem primeiro)\n    (this.initialFormFields || []).forEach(f => {\n      const showInCard = f?.showInCard;\n      const showInAllPhases = f?.showInAllPhases;\n      \n      // Filtrar nameContact e emailContact que podem ter valores antigos no banco\n      if (f.name === 'nameContact' || f.name === 'emailContact') {\n        return;\n      }\n      \n      if (showInCard === true || showInAllPhases === true) {\n        initialFields.push(f);\n      }\n    });\n    \n    // 2. Campos de configura√ß√µes de fases (aparecem depois)\n    Object.values(this.phaseFormConfigs).forEach((config: any) => {\n      if (config?.fields) {\n        config.fields.forEach((f: any) => {\n          if (f?.showInAllPhases === true) {\n            phaseFields.push(f);\n          }\n        });\n      }\n    });\n    \n    // 3. Remover duplicatas (manter a primeira ocorr√™ncia)\n    const allFields = [...initialFields, ...phaseFields];\n    const uniqueFields = allFields.filter((field, index, array) => \n      array.findIndex(f => f.name === field.name) === index\n    );\n    \n    return uniqueFields;\n  }\n\n  getCardFieldsForLead(lead: Lead): Array<{ label: string; value: any; type?: string }> {\n    // NOVA SOLU√á√ÉO: Buscar campos globais + campos espec√≠ficos da fase atual\n    const allFieldsForDisplay = this.getAllFieldsForDisplay();\n    \n    // Adicionar campos espec√≠ficos da fase atual com showInCard\n    const currentPhaseFields: any[] = [];\n    if (lead.columnId && this.phaseFormConfigs[lead.columnId]) {\n      const phaseConfig = this.phaseFormConfigs[lead.columnId];\n      if (phaseConfig?.fields) {\n        phaseConfig.fields.forEach((f: any) => {\n          if (f?.showInCard === true) {\n            currentPhaseFields.push(f);\n          }\n        });\n      }\n    }\n    \n    // Combinar campos globais e da fase atual\n    const allFields = [...allFieldsForDisplay, ...currentPhaseFields];\n    \n    // Remover duplicatas (manter a primeira ocorr√™ncia)\n    const uniqueFields = allFields.filter((field, index, array) => \n      array.findIndex(f => f.name === field.name) === index\n    );\n    \n    const fieldsToShow = uniqueFields.sort((a: any, b: any) => (a.order || 0) - (b.order || 0));\n\n    console.log(`üÉè Debug Card Fields - Lead ${lead.id} (Column: ${lead.columnId})`, {\n      globalFields: allFieldsForDisplay.length,\n      currentPhaseFields: currentPhaseFields.length,\n      totalUnique: uniqueFields.length,\n      fieldsToShow: fieldsToShow.map(f => ({ \n        name: f.name, \n        label: f.label, \n        showInCard: f.showInCard, \n        showInAllPhases: f.showInAllPhases \n      }))\n    });\n\n    const out: Array<{ label: string; value: any; type?: string }> = [];\n    const isTitleField = (f: any): boolean => {\n      const key = (f.apiFieldName || f.name || '').toLowerCase();\n      const lbl = (f.label || f.name || '').toLowerCase();\n      const norm = (s: string) => s.replace(/[^a-z0-9]/g, '');\n      const companyGroup = ['companyname','empresa','nomeempresa','namecompany','company','company_name','empresa_nome','namecomapny'];\n      const cnpjGroup = ['cnpj','cnpjcompany','cnpjempresa','companycnpj'];\n      const k = norm(key); const l = norm(lbl);\n      return companyGroup.includes(k) || companyGroup.includes(l) || cnpjGroup.includes(k) || cnpjGroup.includes(l);\n    };\n    \n    for (const f of fieldsToShow) {\n      const isTitle = isTitleField(f);\n      const value = this.readFieldValue(lead, f.apiFieldName || f.name, f.label || f.name);\n      const hasValue = value !== undefined && value !== null && `${value}`.trim() !== '';\n      \n      if (!isTitle && hasValue) {\n        const item = { label: f.label || f.name || f.apiFieldName, value, type: (f.type || '').toLowerCase() };\n        out.push(item);\n      }\n    }\n    return out;\n  }\n\n  // Exibir temperatura em todas as fases quando marcada em qualquer config\n  getTemperatureGlobalItem(lead: Lead): { label: string; value: any } | null {\n    try {\n      // Buscar campo temperatura em TODAS as configura√ß√µes poss√≠veis\n      const allSources = [\n        // Campos do formul√°rio inicial\n        ...(this.initialFormFields || []),\n        // Campos da fase atual\n        ...(this.phaseCardFields[lead.columnId] || [])\n      ];\n      \n      // Adicionar campos de todas as outras fases que t√™m showInAllPhases\n      Object.values(this.phaseFormConfigs).forEach((config: any) => {\n        if (config?.fields) {\n          config.fields.forEach((f: any) => {\n            if (f?.showInAllPhases === true) {\n              allSources.push(f);\n            }\n          });\n        }\n      });\n      \n      console.log('üå°Ô∏è Debug Temperature Search:', {\n        leadId: lead.id,\n        columnId: lead.columnId,\n        totalSources: allSources.length,\n        temperatureFields: allSources.filter(f => (f.type || '').toLowerCase() === 'temperatura')\n      });\n      \n      const tempField = (allSources as any[]).find(f => {\n        const isTemperatura = (f.type || '').toLowerCase() === 'temperatura';\n        const hasVisibilityFlag = f.showInCard || f.showInAllPhases;\n        return isTemperatura && hasVisibilityFlag;\n      });\n      \n      if (!tempField) {\n        console.log('üå°Ô∏è No temperature field found with visibility flags');\n        return null;\n      }\n      \n      console.log('üå°Ô∏è Found temperature field:', {\n        name: tempField.name,\n        label: tempField.label,\n        showInCard: tempField.showInCard,\n        showInAllPhases: tempField.showInAllPhases\n      });\n      \n      const val = this.readFieldValue(lead, tempField.apiFieldName || tempField.name, tempField.label || tempField.name);\n      if (val === undefined || val === null || `${val}`.trim() === '') {\n        console.log('üå°Ô∏è Temperature field has no value');\n        return null;\n      }\n      \n      const result = { label: tempField.label || 'Temperatura', value: val };\n      console.log('üå°Ô∏è Temperature result:', result);\n      return result;\n    } catch (error) {\n      console.error('üå°Ô∏è getTemperatureGlobalItem error:', error);\n      return null;\n    }\n  }\n\n  // Recupera o item de temperatura apenas se estiver marcado para exibir no card\n  getTemperatureCardItem(lead: Lead): { label: string; value: any } | null {\n    try {\n      const items = this.getCardFieldsForLead(lead);\n      const temp = (items as any[]).find(i => (i.type || '').toLowerCase() === 'temperatura');\n      return temp ? { label: temp.label, value: temp.value } : null;\n    } catch {\n      return null;\n    }\n  }\n\n  getLeadsForColumn(columnId: string): Lead[] {\n    // m√©todo legado ‚Äì manter compatibilidade, mas preferimos displayedLeadsByColumn no template\n    const all = this.leads.filter(lead => lead.columnId === columnId);\n    const filtered = all.filter(lead => this.leadMatchesFilters ? this.leadMatchesFilters(lead) : true);\n    const order = this.leadOrderByColumn[columnId] || [];\n    return filtered.sort((a, b) => (order.indexOf(a.id!) - order.indexOf(b.id!)) || 0);\n  }\n\n  getColumnConnectedTo(): string[] {\n    return this.columns.map(col => `column-${col.id}`);\n  }\n\n  async onLeadDrop(event: CdkDragDrop<Lead[]>) {\n    // garantir t√©rmino de estado de arraste\n    this.isDraggingLead = false;\n    const leadId = event.item.data;\n    const targetColumnId = event.container.id.replace('column-', '');\n    const previousColumnId = event.previousContainer.id.replace('column-', '');\n    \n    if (event.previousContainer === event.container) {\n      // Reordenar dentro da mesma coluna\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      // Atualizar ordem local dessa coluna (considerando apenas vis√≠veis)\n      const visibleIds = (event.container.data as Lead[]).map(l => l.id!);\n      const currentOrder = this.leadOrderByColumn[targetColumnId] || [];\n      const remaining = currentOrder.filter(id => !visibleIds.includes(id));\n      this.leadOrderByColumn[targetColumnId] = [...visibleIds, ...remaining];\n      this.saveLeadOrder();\n      return;\n    } else {\n      // Mover para outra coluna\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n\n      // Buscar dados completos do lead\n      const lead = this.leads.find(l => l.id === leadId);\n      // Validar campos obrigat√≥rios para avan√ßar (da fase de origem)\n      try {\n        const missing = await this.getRequiredToAdvanceMissing(lead as Lead, previousColumnId);\n        if (missing.length > 0) {\n          // Reverter visualmente\n          transferArrayItem(\n            event.container.data,\n            event.previousContainer.data,\n            event.currentIndex,\n            event.previousIndex\n          );\n          this.toast.error(`Preencha os campos obrigat√≥rios para avan√ßar: ${missing.join(', ')}`);\n          return;\n        }\n      } catch {}\n      \n      // Validar fluxo de transi√ß√£o\n      const allowedFrom = this.flowConfig.allowed[previousColumnId] || [];\n      if (!allowedFrom.includes(targetColumnId)) {\n        // Reverter visualmente\n        transferArrayItem(\n          event.container.data,\n          event.previousContainer.data,\n          event.currentIndex,\n          event.previousIndex\n        );\n        this.toast.error('Transi√ß√£o n√£o permitida pelo fluxo.');\n        return;\n      }\n\n      // Atualizar no Firestore\n      try {\n        await this.firestoreService.moveLead(\n          this.ownerId,\n          this.boardId,\n          leadId,\n          targetColumnId\n        );\n\n        // Ajustar ordens locais das duas colunas\n        const targetVisibleIds = (event.container.data as Lead[]).map(l => l.id!);\n        const sourceVisibleIds = (event.previousContainer.data as Lead[]).map(l => l.id!);\n        const sourceOrder = this.leadOrderByColumn[previousColumnId] || [];\n        const targetOrder = this.leadOrderByColumn[targetColumnId] || [];\n        const leadIdStr = String(leadId);\n        // remover do source\n        const sourceRemaining = sourceOrder.filter(id => id !== leadIdStr);\n        // inserir no target respeitando posi√ß√£o vis√≠vel\n        const targetRemaining = targetOrder.filter(id => !targetVisibleIds.includes(id) && id !== leadIdStr);\n        this.leadOrderByColumn[previousColumnId] = [...sourceVisibleIds, ...sourceRemaining.filter(id => !sourceVisibleIds.includes(id))];\n        this.leadOrderByColumn[targetColumnId] = [...targetVisibleIds, ...targetRemaining];\n        this.saveLeadOrder();\n\n        // Atualizar hist√≥rico de fases do lead (para exibi√ß√£o no detalhe)\n        try {\n          if (lead) {\n            const now = new Date();\n            const phaseHistory: any = { ...(lead as any).phaseHistory || {} };\n            // finalizar fase anterior\n            if (phaseHistory[previousColumnId]) {\n              const enteredAt = (phaseHistory[previousColumnId].enteredAt?.toDate && phaseHistory[previousColumnId].enteredAt.toDate()) || new Date(phaseHistory[previousColumnId].enteredAt || now);\n              phaseHistory[previousColumnId].exitedAt = now;\n              phaseHistory[previousColumnId].duration = now.getTime() - enteredAt.getTime();\n            }\n            // iniciar nova fase\n            phaseHistory[targetColumnId] = {\n              phaseId: targetColumnId,\n              enteredAt: now\n            };\n            await this.firestoreService.updateLead(this.ownerId, this.boardId, lead.id!, { phaseHistory } as any);\n          }\n        } catch {}\n      } catch (error) {\n        console.error('Erro ao mover lead:', error);\n        // Reverter a mudan√ßa visual se houver erro\n        this.subscribeToRealtimeUpdates();\n      }\n    }\n  }\n\n  // Verifica campos requiredToAdvance n√£o preenchidos da fase sourceColumnId do lead\n  private async getRequiredToAdvanceMissing(lead: Lead, sourceColumnId?: string): Promise<string[]> {\n    try {\n      const colId = sourceColumnId || lead.columnId;\n      const cfg = await this.firestoreService.getPhaseFormConfig(this.ownerId, this.boardId, colId);\n      const fields = (cfg as any)?.fields || [];\n      const required = fields.filter((f: any) => !!f?.requiredToAdvance);\n      const missing: string[] = [];\n      for (const f of required) {\n        const key = f.apiFieldName || f.name;\n        const value = this.readFieldValue(lead, key, f.label || f.name);\n        const empty = value === undefined || value === null || (typeof value === 'string' && value.trim() === '');\n        if (empty) missing.push(f.label || f.name || key);\n      }\n      return missing;\n    } catch {\n      return [];\n    }\n  }\n\n  // trackBy para manter estabilidade dos itens\n  trackByLeadId(index: number, lead: Lead) { return lead.id; }\n\n  private ensureLeadOrderLoaded() {\n    const key = `lead-order-${this.boardId}`;\n    try {\n      const raw = localStorage.getItem(key);\n      if (raw) {\n        this.leadOrderByColumn = JSON.parse(raw) || {};\n      }\n    } catch {}\n  }\n\n  private saveLeadOrder() {\n    const key = `lead-order-${this.boardId}`;\n    try { localStorage.setItem(key, JSON.stringify(this.leadOrderByColumn)); } catch {}\n  }\n\n  private rebuildDisplayedLeads() {\n    const map: Record<string, Lead[]> = {};\n    for (const col of this.columns) {\n      const all = this.leads.filter(l => l.columnId === col.id);\n      const filtered = all.filter(l => this.leadMatchesFilters ? this.leadMatchesFilters(l) : true);\n      const order = this.leadOrderByColumn[col.id!] || [];\n      const withKnown = filtered.filter(l => order.includes(l.id!)).sort((a, b) => order.indexOf(a.id!) - order.indexOf(b.id!));\n      const without = filtered.filter(l => !order.includes(l.id!));\n      map[col.id!] = [...withKnown, ...without];\n      // se n√£o h√° ordem para a coluna, inicializar\n      if (!this.leadOrderByColumn[col.id!]) {\n        this.leadOrderByColumn[col.id!] = map[col.id!].map(l => l.id!);\n      }\n    }\n    this.displayedLeadsByColumn = map;\n    this.saveLeadOrder();\n  }\n\n  async logout() {\n    const result = await this.authService.logout();\n    if (result.success) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  goToDashboard() {\n    this.router.navigate(['/dashboard']);\n  }\n\n  formatDate(timestamp: any): string {\n    if (!timestamp) {\n      console.log('formatDate: timestamp is null/undefined');\n      return 'Data n√£o dispon√≠vel';\n    }\n    \n    try {\n      // Firebase Timestamp format\n      if (timestamp.seconds) {\n        return new Date(timestamp.seconds * 1000).toLocaleDateString('pt-BR');\n      }\n      // Firebase serverTimestamp format\n      if (timestamp.toDate) {\n        return timestamp.toDate().toLocaleDateString('pt-BR');\n      }\n      // Regular Date format\n      if (timestamp instanceof Date) {\n        return timestamp.toLocaleDateString('pt-BR');\n      }\n      // String or number format\n      return new Date(timestamp).toLocaleDateString('pt-BR');\n    } catch (error) {\n      return 'Data inv√°lida';\n    }\n  }\n\n  // Data e hora (pt-BR) ‚Äì aceita Timestamp do Firestore, Date, string ou number\n  formatDateTime(timestamp: any): string {\n    if (!timestamp) {\n      return '‚Äî';\n    }\n    try {\n      // Firestore Timestamp com seconds\n      if (timestamp.seconds) {\n        return new Date(timestamp.seconds * 1000).toLocaleString('pt-BR');\n      }\n      // serverTimestamp / Timestamp com toDate\n      if (timestamp.toDate) {\n        return timestamp.toDate().toLocaleString('pt-BR');\n      }\n      // Date\n      if (timestamp instanceof Date) {\n        return timestamp.toLocaleString('pt-BR');\n      }\n      // String/number\n      return new Date(timestamp).toLocaleString('pt-BR');\n    } catch {\n      return '‚Äî';\n    }\n  }\n\n  // Para a Caixa de Sa√≠da: priorizar hora de envio (delivery.endTime) e cair para createdAt\n  getEmailDisplayDate(email: any): any {\n    const sent = email?.delivery?.endTime;\n    if (sent) return sent;\n    return email?.createdAt || null;\n  }\n\n  getColumnBorderColor(column: Column): string {\n    return column.color || '#e5e7eb';\n  }\n\n  getLeadPriorityClass(lead: Lead): string {\n    const temperature = lead.fields?.['temperature'];\n    if (temperature === 'quente') return 'border-l-red-500';\n    if (temperature === 'morno') return 'border-l-yellow-500';\n    return 'border-l-transparent';\n  }\n\n  getLeadInitials(lead: Lead): string {\n    const name = lead.fields?.['companyName'] || lead.fields?.['contactName'] || '';\n    return name.split(' ').map(word => word.charAt(0)).join('').substring(0, 2).toUpperCase();\n  }\n\n  getCompanyName(lead: Lead): string {\n    const val = this.readFieldValue(lead, 'companyName');\n    return (val !== undefined && val !== null && `${val}`.trim() !== '') ? `${val}` : 'Empresa n√£o informada';\n  }\n\n  getCnpj(lead: Lead): string | null {\n    const val = this.readFieldValue(lead, 'cnpj', 'CNPJ');\n    if (val === undefined || val === null) return null;\n    const s = `${val}`.trim();\n    return s ? s : null;\n  }\n\n  showCreateLeadModal() {\n    this.leadModal.showCreateModal();\n  }\n\n  showEditLeadModal(lead: Lead) {\n    this.leadModal.showEditModal(lead);\n  }\n\n  showLeadDetailModal(lead: Lead) {\n    this.leadDetailModal.show(lead);\n  }\n\n  onCardClick(lead: Lead, evt?: MouseEvent) {\n    if (this.isDraggingLead) return; // evita abrir modal se estava arrastando\n    this.showLeadDetailModal(lead);\n  }\n\n  onLeadDragStarted() {\n    this.isDraggingLead = true;\n  }\n\n  onLeadDragEnded() {\n    // pequena defasagem para n√£o considerar o click ap√≥s o drop como click do card\n    setTimeout(() => { this.isDraggingLead = false; }, 0);\n  }\n\n  toggleCardMove() {\n    this.cardMoveEnabled = !this.cardMoveEnabled;\n    if (!this.cardMoveEnabled) this.isDraggingLead = false;\n  }\n\n  @HostListener('window:mouseup')\n  onWindowMouseUpForCards() {\n    // Garante t√©rmino do drag do card caso mouseup ocorra fora da lista\n    this.isDraggingLead = false;\n  }\n\n  @HostListener('window:touchend')\n  onWindowTouchEndForCards() {\n    this.isDraggingLead = false;\n  }\n\n  async onLeadCreated() {\n    // Os leads ser√£o atualizados automaticamente via real-time subscription\n    console.log('Novo lead criado!');\n  }\n\n  onLeadUpdated() {\n    // Os leads ser√£o atualizados automaticamente via real-time subscription\n    console.log('Lead atualizado!');\n  }\n\n  onLeadDeleted() {\n    // Os leads ser√£o atualizados automaticamente via real-time subscription\n    console.log('Lead exclu√≠do!');\n  }\n\n  switchTab(tabId: string) {\n    this.activeTab = tabId;\n  }\n\n  getActiveLeads(): Lead[] {\n    return this.leads.filter(lead => {\n      const column = this.columns.find(col => col.id === lead.columnId);\n      return column && (!column.endStageType || column.endStageType === 'none');\n    });\n  }\n\n  // Propriedades para Caixa de Sa√≠da\n  outboxEmails: any[] = [];\n  activeEmailStatus: string = 'all';\n  emailStatuses = [\n    { id: 'all', name: 'Todos', count: 0 },\n    { id: 'scheduled', name: 'Agendados', count: 0 },\n    { id: 'success', name: 'Enviados', count: 0 },\n    { id: 'error', name: 'Com Erro', count: 0 }\n  ];\n\n  // Propriedades para Templates\n  emailTemplates: any[] = [];\n\n  // Propriedades para Automa√ß√µes\n  automations: any[] = [];\n  private _leadsStreamInitialized = false;\n  private _lastLeadsById: Record<string, Lead> = {};\n\n  // Formul√°rio inicial (aba nova)\n  initialFormFields: any[] = [];\n  phaseFormConfigs: {[key: string]: any} = {};\n  apiExampleJson: string = '';\n\n  // Fluxo (transitions) config\n  flowConfig: { allowed: Record<string, string[]> } = { allowed: {} };\n  // Novo layout do fluxo: ordem horizontal e toggles adjacentes\n  flowOrder: string[] = [];\n  flowTogglesByPhase: Record<string, { allowNext: boolean; allowPrev: boolean }> = {};\n  // Editor manual de conex√µes\n  flowEdges: Array<{ fromId: string; toId: string }> = [];\n  connectMode = false;\n  pendingFromId: string | null = null;\n\n  private async loadFlowConfig() {\n    try {\n      const cfg = await this.firestoreService.getFlowConfig(this.boardId);\n      this.flowConfig = (cfg as any) || { allowed: {} };\n      // Sempre sincronizar com a ordem atual das colunas do banco\n      const currentColumnOrder = [...this.columns].sort((a,b)=>(a.order||0)-(b.order||0)).map(c=>c.id!);\n      \n      // Checking flow initialization\n      \n      // N√£o sobrescrever flowOrder durante reordena√ß√£o manual\n      if (!this.isManualReorder) {\n        this.flowOrder = currentColumnOrder;\n      } else {\n      }\n      // Inicializar toggles a partir do allowed atual\n      this.flowTogglesByPhase = {};\n      for (let i = 0; i < this.flowOrder.length; i++) {\n        const id = this.flowOrder[i];\n        const prevId = this.flowOrder[i-1];\n        const nextId = this.flowOrder[i+1];\n        const allowedFrom = this.flowConfig.allowed[id] || [];\n        this.flowTogglesByPhase[id] = {\n          allowNext: !!(nextId && allowedFrom.includes(nextId)),\n          allowPrev: !!(prevId && allowedFrom.includes(prevId))\n        };\n      }\n      // Converter allowed -> edges para exibir\n      const edges: Array<{ fromId: string; toId: string }> = [];\n      const allowed = this.flowConfig.allowed || {};\n      Object.keys(allowed).forEach(fromId => {\n        (allowed[fromId] || []).forEach(toId => edges.push({ fromId, toId }));\n      });\n      this.flowEdges = edges;\n    } catch {\n      this.flowConfig = { allowed: {} };\n      // N√£o sobrescrever flowOrder durante reordena√ß√£o manual\n      if (!this.isManualReorder) {\n        this.flowOrder = [...this.columns].sort((a,b)=>(a.order||0)-(b.order||0)).map(c=>c.id!);\n      }\n    }\n  }\n\n  async saveFlowConfig() {\n    try {\n      // Construir allowed com base nas conex√µes manuais, sanitizando IDs\n      const normalizeId = (v: any) => (typeof v === 'string' ? v.trim() : String(v || '').trim());\n      const allowed: Record<string, string[]> = {};\n      for (const edge of (this.flowEdges || [])) {\n        const fromId = normalizeId(edge.fromId);\n        const toId = normalizeId(edge.toId);\n        if (!fromId || !toId) continue;\n        if (!allowed[fromId]) allowed[fromId] = [];\n        if (!allowed[fromId].includes(toId)) allowed[fromId].push(toId);\n      }\n      // Manter apenas IDs existentes\n      const validIds = new Set(this.columns.map(c => c.id));\n      Object.keys(allowed).forEach(fromId => {\n        if (!validIds.has(fromId)) delete allowed[fromId];\n        else allowed[fromId] = (allowed[fromId] || []).filter(toId => validIds.has(toId));\n      });\n      const orderClean = (this.flowOrder || []).map(normalizeId).filter(id => validIds.has(id));\n\n      this.flowConfig = { allowed };\n      await this.firestoreService.saveFlowConfig(this.boardId, { allowed, order: orderClean });\n      this.toast.success('Fluxo salvo.');\n    } catch (error: any) {\n      console.error('Erro ao salvar fluxo', { error });\n      const message = error?.message || 'Erro ao salvar fluxo.';\n      this.toast.error(message);\n    }\n  }\n\n  // Novo m√©todo para salvar o estado atual das conex√µes (sem reconstruir)\n  async saveCurrentFlowConfig() {\n    try {\n      console.log('üíæ Salvando configura√ß√£o atual do fluxo:', {\n        allowed: this.flowConfig.allowed,\n        order: this.flowOrder\n      });\n\n      // Sanitizar IDs e validar\n      const normalizeId = (v: any) => (typeof v === 'string' ? v.trim() : String(v || '').trim());\n      const validIds = new Set(this.columns.map(c => c.id));\n      \n      // Limpar conex√µes inv√°lidas\n      const cleanedAllowed: Record<string, string[]> = {};\n      Object.entries(this.flowConfig.allowed || {}).forEach(([fromId, toIds]) => {\n        const cleanFromId = normalizeId(fromId);\n        if (validIds.has(cleanFromId)) {\n          cleanedAllowed[cleanFromId] = (toIds || [])\n            .map(id => normalizeId(id))\n            .filter(id => validIds.has(id));\n        }\n      });\n\n      const orderClean = (this.flowOrder || []).map(normalizeId).filter(id => validIds.has(id));\n\n      // Salvar no banco\n      await this.firestoreService.saveFlowConfig(this.boardId, { \n        allowed: cleanedAllowed, \n        order: orderClean \n      });\n      \n      console.log('‚úÖ Configura√ß√£o do fluxo salva com sucesso');\n      \n    } catch (error: any) {\n      console.error('‚ùå Erro ao salvar configura√ß√£o do fluxo:', error);\n      throw error; // Re-throw para que as fun√ß√µes chamadoras possam tratar\n    }\n  }\n\n  // Flow helpers (UI)\n  getAllowedTargets(fromId: string): Column[] {\n    const ids = this.flowConfig.allowed[fromId] || [];\n    return this.columns.filter(c => ids.includes(c.id!));\n  }\n\n  getAvailableTargets(fromId: string): Column[] {\n    const ids = this.flowConfig.allowed[fromId] || [];\n    return this.columns.filter(c => c.id !== fromId && !ids.includes(c.id!));\n  }\n\n  async onFlowDropToAllowed(fromId: string, event: CdkDragDrop<Column[]>) {\n    const dropped: Column = event.item.data as Column;\n    const list = this.flowConfig.allowed[fromId] || (this.flowConfig.allowed[fromId] = []);\n    \n    if (!list.includes(dropped.id!)) {\n      console.log('‚ûï Adicionando conex√£o:', {\n        from: this.getColumnById(fromId)?.name,\n        to: dropped.name,\n        beforeAdd: [...list]\n      });\n      \n      list.push(dropped.id!);\n      \n      console.log('‚ûï Ap√≥s adi√ß√£o:', {\n        newList: [...list]\n      });\n      \n      // Salvar a configura√ß√£o ap√≥s adicionar\n      try {\n        await this.saveCurrentFlowConfig();\n        console.log('‚úÖ Configura√ß√£o salva ap√≥s adi√ß√£o da conex√£o');\n      } catch (error) {\n        console.error('‚ùå Erro ao salvar configura√ß√£o ap√≥s adi√ß√£o:', error);\n      }\n    }\n  }\n\n  async onFlowDropToAvailable(fromId: string, event: CdkDragDrop<Column[]>) {\n    const dropped: Column = event.item.data as Column;\n    const list = this.flowConfig.allowed[fromId] || [];\n    \n    console.log('üóëÔ∏è Removendo conex√£o:', {\n      from: this.getColumnById(fromId)?.name,\n      to: dropped.name,\n      beforeRemoval: [...list],\n      droppedId: dropped.id\n    });\n    \n    this.flowConfig.allowed[fromId] = list.filter(id => id !== dropped.id);\n    \n    console.log('üóëÔ∏è Ap√≥s remo√ß√£o:', {\n      newList: [...this.flowConfig.allowed[fromId]]\n    });\n    \n    // Salvar a configura√ß√£o ap√≥s remover\n    try {\n      await this.saveCurrentFlowConfig();\n      console.log('‚úÖ Configura√ß√£o salva ap√≥s remo√ß√£o da conex√£o');\n    } catch (error) {\n      console.error('‚ùå Erro ao salvar configura√ß√£o ap√≥s remo√ß√£o:', error);\n    }\n  }\n\n  // Reordena√ß√£o horizontal dos cart√µes de fases no editor de fluxo\n  async onFlowReorder(event: CdkDragDrop<string[]>) {\n    console.log('üéØ onFlowReorder CHAMADO!', {\n      previousIndex: event.previousIndex,\n      currentIndex: event.currentIndex,\n      isEqual: event.previousIndex === event.currentIndex,\n      movedPhaseId: this.flowOrder[event.previousIndex],\n      allPhases: this.flowOrder.map((id, index) => ({ index, id, name: this.getColumnById(id)?.name })),\n      containerData: event.container.data,\n      previousContainer: event.previousContainer.data\n    });\n    \n    if (event.previousIndex === event.currentIndex) {\n      console.log('‚ùå onFlowReorder - Movimento aparentemente para o mesmo √≠ndice');\n      console.log('‚ö†Ô∏è Vamos investigar se realmente √© o mesmo local...');\n      \n      // Verificar se h√° diferen√ßa real nos dados do container\n      const containerIds = event.container.data;\n      const previousContainerIds = event.previousContainer.data;\n      \n      console.log('üîç Container atual:', containerIds);\n      console.log('üîç Container anterior:', previousContainerIds);\n      console.log('üîç Fases com nomes:', containerIds.map((id, index) => `${index}: ${this.getColumnById(id)?.name}`));\n      \n      // Se os containers s√£o diferentes ou se h√° mudan√ßa real, continuar\n      if (event.container !== event.previousContainer || \n          JSON.stringify(containerIds) !== JSON.stringify(previousContainerIds)) {\n        console.log('‚úÖ Detectada mudan√ßa real, continuando reordena√ß√£o...');\n      } else {\n        console.log('‚ùå Nenhuma mudan√ßa real detectada');\n        console.log('üí° Tentativa: Vou tentar for√ßar o movimento manualmente...');\n        \n        // Tentar detectar se h√° inten√ß√£o de movimento baseado no local do mouse\n        // Se o usu√°rio arrastou para uma posi√ß√£o diferente, vamos tentar processar\n        console.log('‚ö†Ô∏è FOR√áANDO movimento para testar...');\n        // N√£o retornar aqui, deixar continuar para testar\n      }\n    }\n    \n    // Sinalizar que estamos fazendo reordena√ß√£o manual\n    this.isManualReorder = true;\n    \n    console.log('üîÑ Flow Reorder - Iniciando reordena√ß√£o', {\n      from: event.previousIndex,\n      to: event.currentIndex,\n      previousOrder: [...this.flowOrder],\n      movedColumnId: this.flowOrder[event.previousIndex],\n      targetPosition: event.currentIndex\n    });\n    \n    // Criar uma c√≥pia para compara√ß√£o\n    const originalOrder = [...this.flowOrder];\n    \n    // Atualizar ordem local\n    moveItemInArray(this.flowOrder, event.previousIndex, event.currentIndex);\n    \n    console.log('üîÑ Flow Reorder - flowOrder imediatamente ap√≥s moveItemInArray:', [...this.flowOrder]);\n    \n    // For√ßar detec√ß√£o de mudan√ßas para atualizar DOM\n    this.cdr.detectChanges();\n    console.log('üîÑ Flow Reorder - DOM atualizado, ordem visual deve refletir:', [...this.flowOrder]);\n    \n    console.log('üîÑ Flow Reorder - Nova ordem local:', {\n      newOrder: [...this.flowOrder],\n      changes: this.flowOrder.map((id, index) => {\n        const originalIndex = originalOrder.indexOf(id);\n        return { id, from: originalIndex, to: index, changed: originalIndex !== index };\n      })\n    });\n    \n    try {\n      // Persistir nova ordem no banco de dados - atualizar TODOS os √≠ndices\n      const updatePromises = this.flowOrder.map(async (columnId, newIndex) => {\n        const column = this.columns.find(c => c.id === columnId);\n        const originalIndex = originalOrder.indexOf(columnId);\n        \n        if (column && originalIndex !== newIndex) {\n          console.log(`üîÑ Atualizando coluna \"${column.name}\" - posi√ß√£o: ${originalIndex} ‚Üí ${newIndex}`);\n          await this.firestoreService.updateColumn(this.ownerId, this.boardId, columnId, { order: newIndex });\n          // Atualizar tamb√©m o objeto local\n          column.order = newIndex;\n        }\n      });\n      \n      await Promise.all(updatePromises);\n      \n      // Reordenar array de colunas localmente para manter consist√™ncia\n      this.columns.sort((a, b) => (a.order || 0) - (b.order || 0));\n      \n      console.log('‚úÖ Flow Reorder - Reordena√ß√£o salva com sucesso', {\n        finalOrder: this.columns.map(c => ({ id: c.id, name: c.name, order: c.order }))\n      });\n      \n      console.log('‚úÖ Flow Reorder - Aguardando para resetar flag isManualReorder');\n      // Aguardar menos tempo para permitir que subscriptions sejam processadas\n      setTimeout(() => {\n        console.log('üîÑ Flow Reorder - Resetando flag isManualReorder para false');\n        this.isManualReorder = false;\n      }, 500);\n      \n    } catch (error) {\n      console.error('‚ùå Flow Reorder - Erro ao salvar nova ordem:', error);\n      \n      // Reverter mudan√ßas locais em caso de erro\n      this.flowOrder = originalOrder;\n      this.isManualReorder = false;\n      \n      // Mostrar erro para o usu√°rio\n      alert('Erro ao reordenar fases. Tente novamente.');\n    }\n  }\n\n  private syncFlowOrderWithColumns() {\n    // N√£o interferir durante reordena√ß√£o manual\n    if (this.isManualReorder) {\n      console.log('üîÑ syncFlowOrderWithColumns - Pulando sincroniza√ß√£o durante reordena√ß√£o manual');\n      return;\n    }\n    \n    const sortedIds = [...this.columns].sort((a,b)=>(a.order||0)-(b.order||0)).map(c=>c.id!);\n    \n    // Checking synchronization\n    \n    if (!Array.isArray(this.flowOrder) || this.flowOrder.length === 0) {\n      this.flowOrder = sortedIds;\n      return;\n    }\n    \n    // Verificar se flowOrder est√° sincronizado com a ordem atual das colunas\n    const flowOrderMatchesColumnOrder = this.flowOrder.every((id, index) => sortedIds[index] === id);\n    \n    if (flowOrderMatchesColumnOrder) {\n      console.log('üîÑ syncFlowOrderWithColumns - FlowOrder j√° est√° sincronizado, n√£o alterando');\n      return;\n    }\n    \n    // Apenas adicionar novas fases ou remover fases deletadas, preservando ordem existente\n    const existing = new Set(this.flowOrder);\n    const validIds = new Set(sortedIds);\n    \n    // Remover fases que foram apagadas\n    this.flowOrder = this.flowOrder.filter(id => validIds.has(id));\n    \n    // Inserir novas fases que n√£o est√£o na ordem ainda (no final)\n    for (const id of sortedIds) {\n      if (!existing.has(id)) {\n        const phaseName = this.getColumnById(id)?.name || 'Nome n√£o encontrado';\n        this.flowOrder.push(id);\n        console.log(`üîÑ syncFlowOrderWithColumns - Adicionada nova fase: ${id} (${phaseName})`);\n      }\n    }\n    \n    // For√ßar atualiza√ß√£o visual se houve mudan√ßas\n    if (this.flowOrder.length !== existing.size) {\n      console.log('üîÑ syncFlowOrderWithColumns - For√ßando atualiza√ß√£o visual ap√≥s mudan√ßas');\n      this.cdr.detectChanges();\n    }\n    \n    console.log('üîÑ syncFlowOrderWithColumns - Sincroniza√ß√£o conclu√≠da', {\n      finalFlowOrder: [...this.flowOrder]\n    });\n  }\n\n  // Fluxo: scroll helpers\n  scrollFlowBy(delta: number) {\n    try {\n      const el = this.flowScrollerRef?.nativeElement;\n      if (el) el.scrollBy({ left: delta, behavior: 'smooth' });\n    } catch {}\n  }\n\n  // Atualiza o tamanho e posi√ß√£o do thumb customizado\n  private updateFlowThumb() {\n    try {\n      const el = this.flowScrollerRef?.nativeElement;\n      if (!el) return;\n      const total = el.scrollWidth;\n      const viewport = el.clientWidth;\n      const scrollLeft = el.scrollLeft;\n      const percent = Math.max(5, Math.min(100, (viewport / total) * 100));\n      const left = Math.max(0, Math.min(100 - percent, (scrollLeft / (total - viewport)) * 100));\n      this.flowThumbPercent = percent;\n      this.flowThumbLeftPercent = isFinite(left) ? left : 0;\n      this.cdr.markForCheck();\n    } catch {}\n  }\n\n  @HostListener('window:resize')\n  onWindowResizeFlow() { this.updateFlowThumb(); }\n\n  ngAfterViewInit() {\n    // Atualizar thumb quando a view estiver pronta\n    setTimeout(() => this.updateFlowThumb(), 0);\n    try {\n      const el = this.flowScrollerRef?.nativeElement;\n      if (el) {\n        this.ngZone.runOutsideAngular(() => {\n          el.addEventListener('scroll', () => {\n            this.ngZone.run(() => this.updateFlowThumb());\n          }, { passive: true });\n        });\n      }\n    } catch {}\n  }\n\n  // Click/drag na barra personalizada\n  onFlowBarPointerDown(evt: MouseEvent) {\n    evt.preventDefault();\n    const el = this.flowScrollerRef?.nativeElement;\n    const bar = (evt.currentTarget as HTMLElement);\n    if (!el || !bar) return;\n    const rect = bar.getBoundingClientRect();\n    const moveTo = (clientX: number) => {\n      const ratio = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));\n      el.scrollLeft = (el.scrollWidth - el.clientWidth) * ratio;\n      this.updateFlowThumb();\n    };\n    moveTo(evt.clientX);\n    this.isDraggingFlowBar = true;\n    const onMove = (e: MouseEvent) => moveTo(e.clientX);\n    const onUp = () => {\n      this.isDraggingFlowBar = false;\n      window.removeEventListener('mousemove', onMove);\n      window.removeEventListener('mouseup', onUp);\n    };\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('mousemove', onMove, { passive: true });\n      window.addEventListener('mouseup', onUp, { once: true });\n    });\n  }\n\n  onFlowBarTouchStart(evt: TouchEvent) {\n    const el = this.flowScrollerRef?.nativeElement;\n    const bar = (evt.currentTarget as HTMLElement);\n    if (!el || !bar || evt.touches.length === 0) return;\n    const rect = bar.getBoundingClientRect();\n    const moveTo = (clientX: number) => {\n      const ratio = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));\n      el.scrollLeft = (el.scrollWidth - el.clientWidth) * ratio;\n      this.updateFlowThumb();\n    };\n    moveTo(evt.touches[0].clientX);\n    const onMove = (e: TouchEvent) => {\n      if (e.touches.length > 0) moveTo(e.touches[0].clientX);\n    };\n    const onEnd = () => {\n      window.removeEventListener('touchmove', onMove);\n      window.removeEventListener('touchend', onEnd);\n    };\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('touchmove', onMove, { passive: true });\n      window.addEventListener('touchend', onEnd, { once: true });\n    });\n  }\n\n  toggleConnectMode() { this.connectMode = !this.connectMode; this.pendingFromId = null; }\n  beginEdge(fromId: string) {\n    // Conectores sempre ativos: iniciar conex√£o sem depender de modo\n    this.pendingFromId = fromId;\n  }\n  completeEdge(toId: string) {\n    if (!this.pendingFromId) return;\n    const fromId = this.pendingFromId;\n    if (fromId !== toId && !this.flowEdges.some(e => e.fromId === fromId && e.toId === toId)) {\n      this.flowEdges.push({ fromId, toId });\n    }\n    this.pendingFromId = null;\n  }\n  removeEdge(edge: { fromId: string; toId: string }) {\n    this.flowEdges = this.flowEdges.filter(e => !(e.fromId === edge.fromId && e.toId === edge.toId));\n  }\n\n  // Helpers para template (evitam fun√ß√µes inline no HTML)\n  hasOutgoingConnections(phaseId: string): boolean {\n    return Array.isArray(this.flowEdges) && this.flowEdges.some(e => e.fromId === phaseId);\n  }\n  getOutgoingConnections(phaseId: string): Array<{ fromId: string; toId: string }> {\n    return (this.flowEdges || []).filter(e => e.fromId === phaseId);\n  }\n\n  getEdgeArrow(edge: { fromId: string; toId: string }): string {\n    const from = this.columns.find(c => c.id === edge.fromId);\n    const to = this.columns.find(c => c.id === edge.toId);\n    if (!from || !to) return '‚Üí';\n    return (to.order > from.order) ? '‚Üí' : '‚Üê';\n  }\n\n  // legacy handlers removed (no-op to satisfy template references if any remain)\n  onFlowMouseMove(evt: MouseEvent) { /* no-op */ }\n\n  startConnect(fromId: string, evt: MouseEvent) { /* no-op */ }\n\n  endConnect(toId: string, evt: MouseEvent) { /* no-op */ }\n\n  cancelConnect() { /* no-op */ }\n\n  getNodeById(id: string) { return { id, name: '', x: 0, y: 0 } as any; }\n\n  buildCurvePath(fromId: string, toId: string): string {\n    const a = this.getNodeById(fromId);\n    const b = this.getNodeById(toId);\n    if (!a || !b) return '';\n    const startX = a.x + 120; // right side\n    const startY = a.y + 30;\n    const endX = b.x;\n    const endY = b.y + 30;\n    const dx = Math.max(40, Math.abs(endX - startX) * 0.5);\n    const c1x = startX + dx, c1y = startY;\n    const c2x = endX - dx, c2y = endY;\n    return `M ${startX},${startY} C ${c1x},${c1y} ${c2x},${c2y} ${endX},${endY}`;\n  }\n\n  buildTempCurve(): string { return ''; }\n\n  getEdgeColor(fromId: string, toId: string): string {\n    // verde para avan√ßo (order cresce), laranja para retrocesso\n    const from = this.columns.find(c => c.id === fromId);\n    const to = this.columns.find(c => c.id === toId);\n    if (!from || !to) return '#9CA3AF';\n    return (to.order > from.order) ? '#16a34a' : '#ea580c';\n  }\n\n  getEdgeMarker(fromId: string, toId: string): string {\n    const from = this.columns.find(c => c.id === fromId);\n    const to = this.columns.find(c => c.id === toId);\n    if (!from || !to) return '';\n    return (to.order > from.order) ? 'url(#arrow-green)' : 'url(#arrow-orange)';\n  }\n\n  onNodeDragStart(node: { id: string; x: number; y: number }, evt: MouseEvent) { /* no-op */ }\n\n  onFlowMouseUp(evt: MouseEvent) { /* no-op */ }\n\n  @HostListener('window:mouseup', ['$event'])\n  onWindowMouseUp(evt: MouseEvent) { /* no-op */ }\n\n  @HostListener('window:touchend', ['$event'])\n  onWindowTouchEnd(evt: TouchEvent) { /* no-op */ }\n\n  onNodeMouseEnter(node: { id: string }) { /* no-op */ }\n\n  onNodeMouseLeave(node: { id: string }) { /* no-op */ }\n\n  autoAlignFlow() { this.toast.success('Fluxo alinhado'); }\n\n  toggleFlowMove() { /* no-op */ }\n\n  getColumnById(columnId: string): Column | undefined {\n    return this.columns.find(c => c.id === columnId);\n  }\n\n  // Quantidade de automa√ß√µes ativas associadas a uma fase\n  getAutomationCount(columnId: string): number {\n    try {\n      const isInitial = this.isInitialPhaseId(columnId);\n      return (this.automations || []).filter((a: any) => {\n        const active = a?.active !== false;\n        if (!active) return false;\n        const trigger = a?.trigger || {};\n        const type = a?.triggerType ?? trigger.type;\n        const phase = a?.triggerPhase ?? trigger.phase;\n        if (type === 'new-lead-created') {\n          // Se n√£o tem fase vinculada, considerar como da fase inicial\n          if (!phase) return isInitial;\n          return phase === columnId;\n        }\n        return phase === columnId;\n      }).length;\n    } catch {\n      return 0;\n    }\n  }\n\n  isInitialPhaseId(phaseId: string): boolean {\n    const col = this.getColumnById(phaseId);\n    if (!col) return false;\n    // considerar flag expl√≠cita ou menor ordem como inicial\n    const minOrder = Math.min(...this.columns.map(c => c.order || 0));\n    return !!col.isInitialPhase || (col.order || 0) === minOrder;\n  }\n\n  getAllowedTriggerTypesForPhase(phaseId: string): string[] {\n    const base = ['new-lead-created', 'card-enters-phase', 'card-in-phase-for-time', 'form-not-answered', 'sla-overdue'];\n    return base;\n  }\n\n  // Automa√ß√µes por fase (na aba Fluxo)\n  selectedPhaseIdForAutomations: string | null = null;\n  openPhaseAutomations(phaseId: string) {\n    this.selectedPhaseIdForAutomations = phaseId;\n  }\n  closePhaseAutomations() { this.selectedPhaseIdForAutomations = null; }\n  getAutomationsForPhase(phaseId: string) {\n    return (this.automations || []).filter(a => {\n      const trigger = a?.trigger || {};\n      const type = a?.triggerType ?? trigger.type;\n      const phase = a?.triggerPhase ?? trigger.phase;\n      if (type === 'new-lead-created') {\n        // Se a automa√ß√£o n√£o estiver vinculada a uma fase espec√≠fica,\n        // exibir na fase inicial; se estiver, exibir na fase vinculada\n        if (!phase) return this.isInitialPhaseId(phaseId);\n        return phase === phaseId;\n      }\n      return phase === phaseId;\n    });\n  }\n  createAutomationForPhase(phaseId: string) {\n    const defaultType = this.isInitialPhaseId(phaseId) ? 'new-lead-created' : 'card-enters-phase';\n    this.selectedAutomation = {\n      name: 'Automa√ß√£o da fase',\n      active: true,\n      trigger: { type: defaultType, phase: phaseId },\n      triggerType: defaultType,\n      triggerPhase: phaseId,\n      actions: []\n    } as any;\n    this.showAutomationModal = true;\n  }\n\n  private async loadInitialForm() {\n    try {\n      const cfg = await this.firestoreService.getInitialFormConfig(this.boardId);\n      \n      this.initialFormFields = (cfg as any)?.fields || [];\n      \n      // Process loaded fields\n      \n      // Verificar especificamente por campos de temperatura\n      const tempFields = this.initialFormFields.filter(f => f.type === 'temperatura' || f.name?.toLowerCase().includes('temp'));\n      \n      this.buildApiExampleFromFields();\n      \n      // Carregar campos dispon√≠veis para filtro\n      this.loadAvailableFilterFields();\n    } catch (error) {\n      this.initialFormFields = [];\n      this.buildApiExampleFromFields();\n    }\n  }\n\n  async saveInitialForm() {\n    try {\n      console.log('üíæ saveInitialForm INICIADO');\n      console.log('üíæ this.initialFormFields antes de salvar:', this.initialFormFields);\n      \n      // Log detalhado de cada campo que ser√° salvo\n      this.initialFormFields?.forEach((field, index) => {\n        console.log(`üíæ Campo ${index + 1} a ser salvo:`, {\n          name: field.name,\n          type: field.type,\n          showInFilters: field.showInFilters,\n          hasShowInFilters: 'showInFilters' in field,\n          completeField: field\n        });\n      });\n      \n      const dataToSave = { fields: this.initialFormFields };\n      console.log('üíæ Dados que ser√£o enviados ao Firestore:', dataToSave);\n      \n      await this.firestoreService.saveInitialFormConfig(this.boardId, dataToSave);\n      \n      // Recarregar campos dispon√≠veis para filtro ap√≥s salvar\n      console.log('üíæ Recarregando filtros ap√≥s salvar formul√°rio inicial...');\n      this.loadAvailableFilterFields();\n      \n      this.toast.success('Formul√°rio inicial salvo.');\n    } catch (error) {\n      console.error('üíæ saveInitialForm ERRO:', error);\n      this.toast.error('Erro ao salvar formul√°rio inicial.');\n    }\n  }\n\n  onInitialFieldsChanged(fields: any[]) {\n    console.log('üîÑ onInitialFieldsChanged CHAMADO com:', fields);\n    \n    // Log detalhado de cada campo recebido\n    fields.forEach((field, index) => {\n      console.log(`üîÑ Campo recebido ${index + 1}:`, {\n        name: field.name,\n        label: field.label,\n        type: field.type,\n        showInFilters: field.showInFilters,\n        completeField: field\n      });\n    });\n    \n    this.initialFormFields = fields;\n    \n    // Recarregar filtros quando campos mudam\n    console.log('üîÑ Recarregando filtros ap√≥s mudan√ßa de campos...');\n    this.loadAvailableFilterFields();\n    \n    this.buildApiExampleFromFields();\n  }\n\n  private buildApiExampleFromFields() {\n    const body: any = {};\n    for (const field of this.initialFormFields || []) {\n      const key = (field.apiFieldName && field.apiFieldName.trim()) ? field.apiFieldName.trim() : (field.name || 'campo');\n      body[key] = this.getSampleForField(field);\n    }\n    this.apiExampleJson = JSON.stringify(body, null, 2);\n  }\n\n  private getSampleForField(field: any): any {\n    const type = (field.type || 'text').toLowerCase();\n    if (type === 'email') return 'email@exemplo.com';\n    if (type === 'tel' || type === 'phone') return '(11) 99999-9999';\n    if (type === 'number') return 123;\n    if (type === 'select' && Array.isArray(field.options) && field.options.length) return field.options[0];\n    if (type === 'temperatura') return 'Quente';\n    if (type === 'textarea') return 'Texto livre';\n    return 'Valor de exemplo';\n  }\n\n  // Configura√ß√£o de formul√°rio da fase permanece no menu/√≠cone da pr√≥pria fase via modal\n\n\n  // Lista de usu√°rios para o modal de detalhes\n  users: any[] = [];\n\n  // Estado para acorde√£o mobile\n  expandedMobileColumnId: string | null = null;\n\n  toggleMobileColumn(columnId: string) {\n    this.expandedMobileColumnId = this.expandedMobileColumnId === columnId ? null : columnId;\n  }\n\n  isMobileColumnOpen(columnId: string): boolean {\n    return this.expandedMobileColumnId === columnId;\n  }\n\n  // Filtros\n  filterQuery: string = '';\n  filterOnlyMine: boolean = false;\n  // Novos filtros din√¢micos baseados em campos do formul√°rio\n  dynamicFilters: Record<string, any> = {};\n  availableFilterFields: any[] = [];\n  showAdvancedFilters: boolean = false;\n\n\n  toggleOnlyMine() {\n    this.filterOnlyMine = !this.filterOnlyMine;\n    this.applyFilters();\n  }\n\n  clearFilters() {\n    this.filterQuery = '';\n    this.filterOnlyMine = false;\n    this.dynamicFilters = {};\n    this.applyFilters();\n  }\n\n  // Migrar campos existentes para incluir showInFilters\n  private migrateFieldsToIncludeShowInFilters() {\n    console.log('üîß Migrando campos para incluir showInFilters...');\n    \n    // Migrar campos do formul√°rio inicial\n    if (this.initialFormFields) {\n      let needsMigration = false;\n      this.initialFormFields.forEach(field => {\n        if (!('showInFilters' in field)) {\n          field.showInFilters = false;\n          needsMigration = true;\n          console.log(`üîß Adicionado showInFilters: false ao campo ${field.name} (campo antigo)`);\n        } else {\n          console.log(`‚úÖ Campo ${field.name} j√° tem showInFilters: ${field.showInFilters}`);\n        }\n      });\n      \n      if (needsMigration) {\n        console.log('üîß Alguns campos do formul√°rio inicial foram migrados em mem√≥ria');\n      } else {\n        console.log('‚úÖ Todos os campos do formul√°rio inicial j√° t√™m showInFilters');\n      }\n    }\n    \n    // Migrar campos das fases\n    Object.entries(this.phaseFormConfigs || {}).forEach(([phaseId, config]: [string, any]) => {\n      if (config?.fields) {\n        let needsMigration = false;\n        config.fields.forEach((field: any) => {\n          if (!('showInFilters' in field)) {\n            field.showInFilters = false;\n            needsMigration = true;\n            console.log(`üîß Adicionado showInFilters: false ao campo ${field.name} da fase ${phaseId} (campo antigo)`);\n          } else {\n            console.log(`‚úÖ Campo ${field.name} da fase ${phaseId} j√° tem showInFilters: ${field.showInFilters}`);\n          }\n        });\n        \n        if (needsMigration) {\n          console.log(`üîß Alguns campos da fase ${phaseId} foram migrados em mem√≥ria`);\n        } else {\n          console.log(`‚úÖ Todos os campos da fase ${phaseId} j√° t√™m showInFilters`);\n        }\n      }\n    });\n  }\n\n  // Carregar campos dispon√≠veis para filtro\n  private loadAvailableFilterFields() {\n    console.log('üîç loadAvailableFilterFields INICIADO');\n    console.log('üîç initialFormFields:', this.initialFormFields);\n    console.log('üîç phaseFormConfigs:', this.phaseFormConfigs);\n    \n    // Executar migra√ß√£o primeiro\n    this.migrateFieldsToIncludeShowInFilters();\n    \n    const allFields: any[] = [];\n    \n    // Adicionar campos do formul√°rio inicial que t√™m showInFilters = true\n    if (this.initialFormFields) {\n      console.log('üîç Processando campos do formul√°rio inicial...');\n      this.initialFormFields.forEach((field, index) => {\n        console.log(`üîç Campo inicial ${index + 1}:`, field);\n        console.log(`üîç Campo inicial ${index + 1} - Detalhes:`, {\n          name: field.name,\n          type: field.type,\n          showInFilters: field.showInFilters,\n          hasShowInFilters: 'showInFilters' in field,\n          keys: Object.keys(field)\n        });\n        \n        if (field.name && field.type && field.showInFilters) {\n          const filterField = {\n            name: field.name,\n            label: field.label || field.name,\n            type: field.type,\n            source: 'initial'\n          };\n          allFields.push(filterField);\n          console.log('‚úÖ Campo adicionado aos filtros:', filterField);\n        } else {\n          console.log('‚ùå Campo N√ÉO adicionado aos filtros (falta name, type ou showInFilters = false)');\n        }\n      });\n    } else {\n      console.log('‚ö†Ô∏è Nenhum initialFormFields encontrado');\n    }\n    \n    // Adicionar campos de fases que t√™m showInFilters = true\n    console.log('üîç Processando campos das fases...');\n    Object.entries(this.phaseFormConfigs || {}).forEach(([phaseId, config]: [string, any]) => {\n      console.log(`üîç Fase ${phaseId}:`, config);\n      if (config?.fields) {\n        config.fields.forEach((field: any, index: number) => {\n          console.log(`üîç Campo da fase ${phaseId} - ${index + 1}:`, field);\n          console.log(`üîç Campo da fase ${phaseId} - ${index + 1} - Detalhes:`, {\n            name: field.name,\n            type: field.type,\n            showInFilters: field.showInFilters,\n            hasShowInFilters: 'showInFilters' in field,\n            keys: Object.keys(field)\n          });\n          \n          if (field.name && field.type && field.showInFilters && !allFields.find(f => f.name === field.name)) {\n            const filterField = {\n              name: field.name,\n              label: field.label || field.name,\n              type: field.type,\n              source: 'phase',\n              phaseId: phaseId\n            };\n            allFields.push(filterField);\n            console.log('‚úÖ Campo da fase adicionado aos filtros:', filterField);\n          } else {\n            console.log('‚ùå Campo da fase N√ÉO adicionado (falta name, type, showInFilters = false, ou j√° existe)');\n          }\n        });\n      }\n    });\n    \n    console.log('üîç Todos os campos coletados:', allFields);\n    \n    // Filtrar apenas campos apropriados para filtro\n    this.availableFilterFields = allFields.filter(field => {\n      const supportedTypes = ['text', 'email', 'select', 'radio', 'checkbox', 'date', 'number', 'tel', 'cnpj', 'cpf', 'temperatura'];\n      const isSupported = supportedTypes.includes(field.type.toLowerCase());\n      console.log(`üîç Campo ${field.name} (${field.type}) - Suportado: ${isSupported}`);\n      return isSupported;\n    });\n    \n    console.log('üîç Campos filtrados finais (availableFilterFields):', this.availableFilterFields);\n    console.log('üîç availableFilterFields.length:', this.availableFilterFields.length);\n    console.log('üîç showAdvancedFilters:', this.showAdvancedFilters);\n  }\n\n  // Obter op√ß√µes dispon√≠veis para um campo\n  getFieldOptions(field: any): string[] {\n    // Para campos select, radio e temperatura, verificar se h√° op√ß√µes definidas\n    if (field.type === 'select' || field.type === 'radio') {\n      // Buscar o campo original para obter as op√ß√µes\n      const originalField = this.findOriginalField(field.name, field.source);\n      if (originalField && originalField.options && Array.isArray(originalField.options)) {\n        return originalField.options;\n      }\n    }\n    \n    // Para temperatura, sempre retornar as op√ß√µes padr√£o se n√£o encontrar definidas\n    if (field.type === 'temperatura') {\n      const originalField = this.findOriginalField(field.name, field.source);\n      if (originalField && originalField.options && Array.isArray(originalField.options)) {\n        return originalField.options;\n      }\n      // Op√ß√µes padr√£o para temperatura\n      return ['Quente', 'Morno', 'Frio'];\n    }\n    \n    // Para outros tipos, buscar valores √∫nicos nos leads existentes\n    return this.getUniqueValuesFromLeads(field.name);\n  }\n\n  // Encontrar campo original baseado no nome e fonte\n  private findOriginalField(fieldName: string, source: string): any {\n    if (source === 'initial') {\n      return this.initialFormFields?.find(f => f.name === fieldName);\n    } else if (source === 'phase') {\n      // Buscar em todas as fases\n      for (const config of Object.values(this.phaseFormConfigs || {})) {\n        const field = (config as any)?.fields?.find((f: any) => f.name === fieldName);\n        if (field) return field;\n      }\n    }\n    return null;\n  }\n\n  // Buscar valores √∫nicos de um campo nos leads\n  private getUniqueValuesFromLeads(fieldName: string): string[] {\n    const values = new Set<string>();\n    \n    this.leads.forEach(lead => {\n      const value = this.getLeadFieldValue(lead, fieldName);\n      if (value != null && value !== '') {\n        values.add(String(value));\n      }\n    });\n    \n    return Array.from(values).sort();\n  }\n\n  private leadMatchesFilters(lead: Lead): boolean {\n    // Only mine filter\n    if (this.filterOnlyMine) {\n      const currentUserEmail = this.currentUser?.email;\n      const currentUserId = this.currentUser?.uid;\n      const leadResponsibleEmail = lead.responsibleUserEmail;\n      const leadResponsibleId = (lead as any).responsibleUserId;\n      \n      // Check if lead is assigned to current user by email or ID\n      const isAssignedToMe = \n        (currentUserEmail && leadResponsibleEmail && leadResponsibleEmail.toLowerCase() === currentUserEmail.toLowerCase()) ||\n        (currentUserId && leadResponsibleId && leadResponsibleId === currentUserId);\n      \n      if (!isAssignedToMe) return false;\n    }\n    \n    // Text query filter\n    if (this.filterQuery && this.filterQuery.trim()) {\n      const q = this.filterQuery.toLowerCase().trim();\n      const fields = (lead as any).fields || {};\n      \n      // Build searchable text from all relevant fields\n      const searchableFields = [\n        // Fixed lead properties\n        lead.responsibleUserName,\n        lead.responsibleUserEmail\n      ];\n      \n      // Add all dynamic field values from lead.fields\n      if (fields && typeof fields === 'object') {\n        Object.values(fields).forEach(value => {\n          if (value != null && value !== '') {\n            searchableFields.push(String(value));\n          }\n        });\n      }\n      \n      // Also search in phaseHistory if exists\n      if (lead.phaseHistory && typeof lead.phaseHistory === 'object') {\n        Object.values(lead.phaseHistory).forEach(phaseData => {\n          if (phaseData && typeof phaseData === 'object') {\n            Object.values(phaseData).forEach(value => {\n              if (value != null && value !== '') {\n                searchableFields.push(String(value));\n              }\n            });\n          }\n        });\n      }\n      \n      const haystack = searchableFields\n        .filter(field => field != null && field !== '')\n        .map(field => String(field).toLowerCase())\n        .join(' ');\n      \n      // Split query into words for better matching\n      const queryWords = q.split(' ').filter(word => word.length > 0);\n      const matchesAll = queryWords.every(word => haystack.includes(word));\n      \n      if (!matchesAll) return false;\n    }\n    \n    \n    // Filtros din√¢micos baseados em campos do formul√°rio\n    for (const [fieldName, filterValue] of Object.entries(this.dynamicFilters)) {\n      if (!filterValue || filterValue === '') continue;\n      \n      const leadValue = this.getLeadFieldValue(lead, fieldName);\n      \n      // Se o lead n√£o tem o campo, excluir do resultado\n      if (leadValue === undefined || leadValue === null || leadValue === '') {\n        return false;\n      }\n      \n      const field = this.availableFilterFields.find(f => f.name === fieldName);\n      if (!field) continue;\n      \n      // Aplicar filtro baseado no tipo do campo\n      if (!this.matchesDynamicFilter(leadValue, filterValue, field.type)) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n  // Obter valor de um campo espec√≠fico do lead\n  private getLeadFieldValue(lead: Lead, fieldName: string): any {\n    if (!lead || !fieldName) return undefined;\n    \n    // Verificar em fields (campos do formul√°rio)\n    if (lead.fields && lead.fields[fieldName] !== undefined) {\n      return lead.fields[fieldName];\n    }\n    \n    // Verificar em phaseHistory (dados de fases espec√≠ficas)\n    if (lead.phaseHistory) {\n      for (const [phaseId, phaseData] of Object.entries(lead.phaseHistory)) {\n        if (phaseData && typeof phaseData === 'object' && phaseData[fieldName] !== undefined) {\n          return phaseData[fieldName];\n        }\n      }\n    }\n    \n    // Verificar campos diretos do lead\n    const leadAsAny = lead as any;\n    if (leadAsAny[fieldName] !== undefined) {\n      return leadAsAny[fieldName];\n    }\n    \n    return undefined;\n  }\n\n  // Verificar se um valor corresponde ao filtro din√¢mico\n  private matchesDynamicFilter(leadValue: any, filterValue: any, fieldType: string): boolean {\n    if (!leadValue && !filterValue) return true;\n    if (!leadValue || !filterValue) return false;\n    \n    const leadStr = String(leadValue).toLowerCase();\n    const filterStr = String(filterValue).toLowerCase();\n    \n    switch (fieldType.toLowerCase()) {\n      case 'text':\n      case 'email':\n      case 'tel':\n        // Busca parcial (cont√©m)\n        return leadStr.includes(filterStr);\n        \n      case 'select':\n      case 'radio':\n        // Correspond√™ncia exata\n        return leadStr === filterStr;\n        \n      case 'checkbox':\n        // Para checkbox, verificar se est√° marcado\n        return filterValue === true ? (leadValue === true || leadValue === 'true' || leadValue === 'on') : true;\n        \n      case 'number':\n        // Compara√ß√£o num√©rica\n        const leadNum = parseFloat(leadValue);\n        const filterNum = parseFloat(filterValue);\n        return !isNaN(leadNum) && !isNaN(filterNum) && leadNum === filterNum;\n        \n      case 'date':\n        // Compara√ß√£o de data (apenas dia)\n        try {\n          const leadDate = new Date(leadValue).toDateString();\n          const filterDate = new Date(filterValue).toDateString();\n          return leadDate === filterDate;\n        } catch {\n          return false;\n        }\n        \n      default:\n        // Fallback para busca parcial\n        return leadStr.includes(filterStr);\n    }\n  }\n\n  /**\n   * Apply filters and update the displayed leads\n   */\n  applyFilters() {\n    // Rebuild displayed leads with current filters\n    this.rebuildDisplayedLeads();\n    \n    // Trigger change detection to update the UI\n    this.cdr.detectChanges();\n    \n    // Save filter state to localStorage\n    this.saveFilterState();\n  }\n\n  /**\n   * Save filter state to localStorage\n   */\n  private saveFilterState() {\n    if (!this.boardId) return;\n    \n    try {\n      const filterState = {\n        filterQuery: this.filterQuery,\n        filterOnlyMine: this.filterOnlyMine,\n        dynamicFilters: this.dynamicFilters\n      };\n      localStorage.setItem(`kanban-filters-${this.boardId}`, JSON.stringify(filterState));\n    } catch (error) {\n      console.warn('Could not save filter state to localStorage:', error);\n    }\n  }\n\n  /**\n   * Load filter state from localStorage\n   */\n  private loadFilterState() {\n    if (!this.boardId) return;\n    \n    try {\n      const saved = localStorage.getItem(`kanban-filters-${this.boardId}`);\n      if (saved) {\n        const filterState = JSON.parse(saved);\n        this.filterQuery = filterState.filterQuery || '';\n        this.filterOnlyMine = filterState.filterOnlyMine || false;\n        this.dynamicFilters = filterState.dynamicFilters || {};\n      }\n    } catch (error) {\n      console.warn('Could not load filter state from localStorage:', error);\n    }\n  }\n\n  /**\n   * Check if any filters are active\n   */\n  hasActiveFilters(): boolean {\n    const hasDynamicFilters = Object.keys(this.dynamicFilters).some(key => this.dynamicFilters[key] && this.dynamicFilters[key] !== '');\n    return !!(this.filterQuery || this.filterOnlyMine || hasDynamicFilters);\n  }\n\n  // M√©todos para filtros din√¢micos\n  setDynamicFilter(fieldName: string, value: any) {\n    if (value === null || value === undefined || value === '') {\n      delete this.dynamicFilters[fieldName];\n    } else {\n      this.dynamicFilters[fieldName] = value;\n    }\n    this.applyFilters();\n  }\n\n  onDynamicFilterChange(fieldName: string, event: Event) {\n    const value = (event.target as HTMLSelectElement).value;\n    this.setDynamicFilter(fieldName, value);\n  }\n\n  getDynamicFilterValue(fieldName: string): any {\n    return this.dynamicFilters[fieldName] || '';\n  }\n\n  removeDynamicFilter(fieldName: string) {\n    delete this.dynamicFilters[fieldName];\n    this.applyFilters();\n  }\n\n  getActiveDynamicFiltersCount(): number {\n    return Object.keys(this.dynamicFilters).filter(key => this.dynamicFilters[key] && this.dynamicFilters[key] !== '').length;\n  }\n\n  // (mantido apenas a vers√£o acima)\n\n  // M√©todos para Caixa de Sa√≠da\n  updateEmailStatusCounts() {\n    // Contar emails baseado na estrutura original: delivery.state\n    const statusCounts = {\n      all: this.outboxEmails.length,\n      scheduled: this.outboxEmails.filter(email => !email.delivery || email.delivery.state === 'PENDING').length,\n      success: this.outboxEmails.filter(email => email.delivery?.state === 'SUCCESS').length,\n      error: this.outboxEmails.filter(email => email.delivery?.state === 'ERROR').length\n    };\n\n    this.emailStatuses = [\n      { id: 'all', name: 'Todos', count: statusCounts.all },\n      { id: 'scheduled', name: 'Na Fila', count: statusCounts.scheduled },\n      { id: 'success', name: 'Enviados', count: statusCounts.success },\n      { id: 'error', name: 'Com Erro', count: statusCounts.error }\n    ];\n  }\n\n  getFilteredEmails(): any[] {\n    if (this.activeEmailStatus === 'all') {\n      return this.outboxEmails;\n    }\n    \n    return this.outboxEmails.filter(email => {\n      switch (this.activeEmailStatus) {\n        case 'scheduled':\n          return !email.delivery || email.delivery.state === 'PENDING';\n        case 'success':\n          return email.delivery?.state === 'SUCCESS';\n        case 'error':\n          return email.delivery?.state === 'ERROR';\n        default:\n          return false;\n      }\n    });\n  }\n\n  getEmailStatusLabel(email: any): string {\n    if (!email.delivery) {\n      return 'Na Fila';\n    }\n    \n    switch (email.delivery.state) {\n      case 'SUCCESS':\n        return 'Enviado';\n      case 'ERROR':\n        return 'Erro';\n      case 'PENDING':\n        return 'Na Fila';\n      default:\n        return email.delivery.state || 'Desconhecido';\n    }\n  }\n\n  viewEmail(email: any) {\n    const sentAt = email.delivery?.endTime ? new Date(email.delivery.endTime.seconds * 1000).toLocaleString('pt-BR') : '---';\n    const createdAt = email.createdAt ? new Date(email.createdAt.seconds * 1000).toLocaleString('pt-BR') : '---';\n    \n    alert(`Visualizar Email:\\n\\nPara: ${email.to || 'N√£o especificado'}\\nAssunto: ${email.subject || 'Sem assunto'}\\nStatus: ${this.getEmailStatusLabel(email)}\\nCriado em: ${createdAt}\\nEnviado em: ${sentAt}\\n\\nConte√∫do:\\n${email.html || email.text || 'Sem conte√∫do dispon√≠vel'}`);\n  }\n\n  async retryEmail(email: any) {\n    try {\n      await this.firestoreService.updateOutboxEmail(\n        this.ownerId,\n        this.boardId,\n        email.id,\n        { \n          status: 'scheduled',\n          scheduledAt: new Date(),\n          retryCount: (email.retryCount || 0) + 1\n        }\n      );\n      console.log('Email reagendado para reenvio');\n      try { this.toast.success('Email reagendado para reenvio.'); } catch {}\n    } catch (error) {\n      console.error('Erro ao reenviar email:', error);\n      try { this.toast.error('Erro ao reenviar email. Tente novamente.'); } catch {}\n    }\n  }\n\n  // Outbox delete confirmation modal\n  showOutboxDeleteConfirm = false;\n  emailPendingDelete: any = null;\n\n  openOutboxDeleteConfirm(email: any, event?: Event) {\n    if (event) { event.preventDefault(); event.stopPropagation(); }\n    this.emailPendingDelete = email;\n    this.showOutboxDeleteConfirm = true;\n  }\n\n  cancelOutboxDelete() {\n    this.showOutboxDeleteConfirm = false;\n    this.emailPendingDelete = null;\n  }\n\n  async confirmOutboxDelete() {\n    if (!this.emailPendingDelete) return;\n    try {\n      const email = this.emailPendingDelete;\n      await this.firestoreService.deleteOutboxEmail(this.ownerId, this.boardId, email.id);\n      console.log('Email exclu√≠do com sucesso');\n      try { this.toast.success('Mensagem exclu√≠da.'); } catch {}\n    } catch (error) {\n      console.error('Erro ao excluir email:', error);\n      try { this.toast.error('Erro ao excluir mensagem. Tente novamente.'); } catch {}\n    } finally {\n      this.cancelOutboxDelete();\n    }\n  }\n\n  // M√©todos para gerenciar colunas\n\n  showCreateColumnModal() {\n    this.columnModal.showCreateModal();\n  }\n\n  editColumn(column: Column) {\n    this.columnModal.showEditModal(column);\n  }\n\n  onPhaseCardClick(phaseId: string, evt?: MouseEvent) {\n    // Abrir edi√ß√£o da fase ao clicar no card do fluxo\n    const col = this.getColumnById(phaseId);\n    if (col) {\n      this.editColumn(col);\n    }\n  }\n\n\n  async deleteColumn(column: Column) {\n    if (confirm(`Tem certeza que deseja excluir a fase \"${column.name}\"? Esta a√ß√£o n√£o pode ser desfeita.`)) {\n      try {\n        await this.firestoreService.deleteColumn(this.ownerId, this.boardId, column.id!);\n        console.log('Fase exclu√≠da com sucesso');\n      } catch (error) {\n        console.error('Erro ao excluir fase:', error);\n        alert('Erro ao excluir fase. Tente novamente.');\n      }\n    }\n  }\n\n  onColumnCreated() {\n    console.log('Nova fase criada!');\n  }\n\n  onColumnUpdated() {\n    console.log('Fase atualizada!');\n  }\n\n  onColumnDeleted() {\n    console.log('Fase exclu√≠da!');\n    // Ap√≥s exclus√£o, sincronizar ordem do fluxo para refletir a mudan√ßa\n    try { this.syncFlowOrderWithColumns(); this.updateFlowThumb(); } catch {}\n  }\n\n  // M√©todos para debugging de drag\n  onDragEntered() {\n    console.log('üîÑ Drag entered flow area');\n  }\n\n  onDragExited() {\n    console.log('üîÑ Drag exited flow area');\n  }\n\n  onDragStarted(phaseId: string) {\n    const phaseName = this.getColumnById(phaseId)?.name;\n    const currentIndex = this.flowOrder.indexOf(phaseId);\n    console.log('üîÑ Drag started for phase:', phaseName, 'at index:', currentIndex);\n  }\n\n  onDragEnded(phaseId: string) {\n    console.log('üîÑ Drag ended for phase:', this.getColumnById(phaseId)?.name);\n  }\n\n  // Fun√ß√µes de reordena√ß√£o com bot√µes\n  async movePhaseUp(currentIndex: number, event: Event) {\n    event.stopPropagation(); // Prevenir click na fase\n    \n    if (currentIndex <= 0) return;\n    \n    console.log('‚¨ÖÔ∏è Movendo fase para esquerda:', {\n      from: currentIndex,\n      to: currentIndex - 1,\n      phaseName: this.getColumnById(this.flowOrder[currentIndex])?.name\n    });\n    \n    await this.movePhase(currentIndex, currentIndex - 1);\n  }\n\n  async movePhaseDown(currentIndex: number, event: Event) {\n    event.stopPropagation(); // Prevenir click na fase\n    \n    if (currentIndex >= this.flowOrder.length - 1) return;\n    \n    console.log('‚û°Ô∏è Movendo fase para direita:', {\n      from: currentIndex,\n      to: currentIndex + 1,\n      phaseName: this.getColumnById(this.flowOrder[currentIndex])?.name\n    });\n    \n    await this.movePhase(currentIndex, currentIndex + 1);\n  }\n\n  private async movePhase(fromIndex: number, toIndex: number) {\n    this.isManualReorder = true;\n    \n    const originalOrder = [...this.flowOrder];\n    \n    // Mover no array local\n    const movedPhase = this.flowOrder.splice(fromIndex, 1)[0];\n    this.flowOrder.splice(toIndex, 0, movedPhase);\n    \n    console.log('üîÑ Movimento executado:', {\n      originalOrder: originalOrder.map((id, i) => `${i}: ${this.getColumnById(id)?.name}`),\n      newOrder: this.flowOrder.map((id, i) => `${i}: ${this.getColumnById(id)?.name}`)\n    });\n    \n    // For√ßar atualiza√ß√£o visual\n    this.cdr.detectChanges();\n    \n    try {\n      // Salvar nova ordem no banco\n      const updatePromises = this.flowOrder.map(async (columnId, newIndex) => {\n        const column = this.columns.find(c => c.id === columnId);\n        if (column && column.order !== newIndex) {\n          console.log(`üíæ Salvando ${column.name} na posi√ß√£o ${newIndex}`);\n          await this.firestoreService.updateColumn(this.ownerId, this.boardId, columnId, { order: newIndex });\n          column.order = newIndex;\n        }\n      });\n      \n      await Promise.all(updatePromises);\n      \n      console.log('‚úÖ Reordena√ß√£o salva com sucesso!');\n      \n      setTimeout(() => {\n        this.isManualReorder = false;\n      }, 500);\n      \n    } catch (error) {\n      console.error('‚ùå Erro ao salvar reordena√ß√£o:', error);\n      // Reverter em caso de erro\n      this.flowOrder = originalOrder;\n      this.isManualReorder = false;\n      this.cdr.detectChanges();\n    }\n  }\n\n  async showColumnForm(column: Column) {\n    try {\n      const existingConfig = await this.firestoreService.getPhaseFormConfig(this.ownerId, this.boardId, column.id!);\n      this.phaseFormModal.showModal(column, existingConfig as any || undefined);\n    } catch (error) {\n      console.error('Erro ao carregar configura√ß√£o do formul√°rio:', error);\n      this.phaseFormModal.showModal(column, undefined);\n    }\n  }\n\n  onPhaseFormConfigSaved() {\n    console.log('Configura√ß√£o de formul√°rio salva! Recarregando campos de card por fase...');\n    this.loadCardFieldConfigs();\n    try { this.toast.success('Configura√ß√£o salva. Cards atualizados.'); } catch {}\n  }\n\n\n  // M√©todos para SLA\n  getSlaStatus(lead: Lead): { status: string; text: string; colorClass: string; borderClass: string } {\n    const column = this.columns.find(col => col.id === lead.columnId);\n    \n    if (!column || !column.slaDays || column.slaDays <= 0 || !lead.movedToCurrentColumnAt) {\n      return { status: 'none', text: '', colorClass: '', borderClass: '' };\n    }\n\n    const movedDate = lead.movedToCurrentColumnAt.seconds \n      ? new Date(lead.movedToCurrentColumnAt.seconds * 1000)\n      : new Date(lead.movedToCurrentColumnAt);\n    \n    const now = new Date();\n    const slaDeadline = new Date(movedDate.getTime() + column.slaDays * 24 * 60 * 60 * 1000);\n    const diffMillis = slaDeadline.getTime() - now.getTime();\n    const diffDays = diffMillis / (1000 * 60 * 60 * 24);\n\n    if (diffDays < 0) {\n      // SLA vencido\n      const overdueDays = Math.abs(Math.floor(diffDays));\n      return {\n        status: 'overdue',\n        text: `Atrasado ${overdueDays}d`,\n        colorClass: 'text-red-600',\n        borderClass: 'border-l-red-500'\n      };\n    } else if (diffDays < column.slaDays * 0.25) {\n      // SLA em risco (menos de 25% do tempo restante)\n      const remainingHours = Math.ceil(diffMillis / (1000 * 60 * 60));\n      return {\n        status: 'at-risk',\n        text: `${remainingHours}h restantes`,\n        colorClass: 'text-yellow-600',\n        borderClass: 'border-l-yellow-500'\n      };\n    } else {\n      // SLA OK\n      const remainingDays = Math.ceil(diffDays);\n      return {\n        status: 'ok',\n        text: `${remainingDays}d restantes`,\n        colorClass: 'text-green-600',\n        borderClass: 'border-l-green-500'\n      };\n    }\n  }\n\n  getLeadStatusColor(lead: Lead): string {\n    const temperature = lead.fields?.['temperature'];\n    if (temperature === 'quente') return 'bg-red-100 text-red-800';\n    if (temperature === 'morno') return 'bg-yellow-100 text-yellow-800';\n    return 'bg-blue-100 text-blue-800';\n  }\n\n  // Cor do √≠cone de temperatura para valores din√¢micos (ex.: 'Quente', 'Morno', 'Frio')\n  getTemperatureColorClass(value: any): string {\n    const norm = (v: string) => v\n      .toLowerCase()\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    const s = norm(String(value || ''));\n    if (s.includes('quente') || s.includes('hot')) return 'text-red-600';\n    if (s.includes('morno') || s.includes('morna') || s.includes('warm')) return 'text-yellow-600';\n    if (s.includes('frio') || s.includes('fria') || s.includes('cold')) return 'text-blue-600';\n    return 'text-blue-600';\n  }\n\n  // Helpers para layout mobile\n  getDaysSince(dateLike: any): number {\n    if (!dateLike) return 0;\n    let d: Date;\n    if ((dateLike as any).seconds) d = new Date((dateLike as any).seconds * 1000);\n    else if ((dateLike as any).toDate) d = (dateLike as any).toDate();\n    else if (dateLike instanceof Date) d = dateLike as Date;\n    else d = new Date(dateLike);\n    const diffMs = Date.now() - d.getTime();\n    return Math.max(0, Math.floor(diffMs / (1000 * 60 * 60 * 24)));\n  }\n\n  getLeadResponsibleName(lead: Lead): string {\n    return (lead.responsibleUserName || lead.responsibleUserEmail || '').toString();\n  }\n\n  getLeadDueDateLabel(lead: Lead): string | null {\n    const due = (lead as any).fields?.dueDate || (lead as any).dueDate;\n    if (!due) return null;\n    try {\n      if ((due as any).seconds) return new Date((due as any).seconds * 1000).toLocaleDateString('pt-BR');\n      if ((due as any).toDate) return (due as any).toDate().toLocaleDateString('pt-BR');\n      const d = new Date(due);\n      return isNaN(d.getTime()) ? null : d.toLocaleDateString('pt-BR');\n    } catch { return null; }\n  }\n\n  // M√©todos para Templates e Automa√ß√µes\n  getTriggerDescription(automationOrTrigger: any): string {\n    if (!automationOrTrigger) return 'N√£o especificado';\n\n    // Aceita tanto o objeto automa√ß√£o completo quanto apenas o trigger\n    const trigger = automationOrTrigger.trigger ? automationOrTrigger.trigger : automationOrTrigger;\n\n    const descriptions: any = {\n      'new-lead-created': 'Quando um novo lead √© criado',\n      'card-enters-phase': 'Quando lead entra em uma fase',\n      'card-in-phase-for-time': 'Quando lead fica muito tempo na fase',\n      'form-not-answered': 'Quando formul√°rio n√£o √© respondido',\n      'sla-overdue': 'Quando SLA da fase vence'\n    };\n\n    const type = trigger.type || automationOrTrigger.triggerType;\n    let description = descriptions[type] || type || 'N√£o especificado';\n\n    const phaseId = trigger.phase || automationOrTrigger.triggerPhase;\n    if (phaseId && this.columns.length > 0) {\n      const column = this.columns.find(col => col.id === phaseId);\n      if (column) description += ` (${column.name})`;\n    }\n\n    const days = trigger.days || automationOrTrigger.triggerDays;\n    if (days) description += ` (${days} dias)`;\n\n    return description;\n  }\n\n  async toggleAutomationStatus(automationId: string, currentStatus: boolean) {\n    try {\n      await this.firestoreService.updateAutomation(\n        this.ownerId, \n        this.boardId, \n        automationId, \n        { active: !currentStatus }\n      );\n    } catch (error) {\n      console.error('Erro ao alterar status da automa√ß√£o:', error);\n    }\n  }\n\n  // Modal de exclus√£o de automa√ß√£o\n  showAutomationDeleteConfirm = false;\n  automationPendingDelete: any = null;\n\n  openDeleteAutomationConfirm(automation: any, event?: Event) {\n    if (event) { event.preventDefault(); event.stopPropagation(); }\n    this.automationPendingDelete = automation;\n    this.showAutomationDeleteConfirm = true;\n  }\n\n  cancelDeleteAutomation() {\n    this.showAutomationDeleteConfirm = false;\n    this.automationPendingDelete = null;\n  }\n\n  async confirmDeleteAutomation() {\n    if (!this.automationPendingDelete) return;\n    try {\n      const pending = this.automationPendingDelete as any;\n      const autoId = pending?.id || pending?.docId || (pending?.path ? String(pending.path).split('/').pop() : null);\n      if (!autoId) {\n        console.error('Automa√ß√£o sem id para exclus√£o:', pending);\n        this.toast.error('N√£o foi poss√≠vel identificar esta automa√ß√£o. Atualize a p√°gina e tente novamente.');\n        return;\n      }\n      await this.firestoreService.deleteAutomation(this.ownerId, this.boardId, autoId);\n      this.toast.success('Automa√ß√£o exclu√≠da.');\n    } catch (error) {\n      console.error('Erro ao excluir automa√ß√£o:', error);\n      this.toast.error('Erro ao excluir automa√ß√£o.');\n    } finally {\n      this.cancelDeleteAutomation();\n    }\n  }\n\n\n  toggleAutomation(automation: any) {\n    this.toggleAutomationStatus(automation.id, automation.active);\n  }\n\n\n  getActionsCount(actions: any[]): number {\n    return actions ? actions.length : 0;\n  }\n\n  getValidAutomations(): any[] {\n    return this.automations.filter(automation => \n      automation && \n      automation.name && \n      automation.name.trim() !== '' &&\n      automation.name !== 'Automa√ß√£o sem nome'\n    );\n  }\n\n  async cleanupInvalidAutomations() {\n    const invalidAutomations = this.automations.filter(automation => \n      !automation || \n      !automation.name || \n      automation.name.trim() === '' ||\n      automation.name === 'Automa√ß√£o sem nome'\n    );\n\n    if (invalidAutomations.length > 0) {\n      \n      for (const invalidAutomation of invalidAutomations) {\n        if (invalidAutomation.id) {\n          try {\n            await this.firestoreService.deleteAutomation(this.ownerId, this.boardId, invalidAutomation.id);\n          } catch (error) {\n            console.error('Erro ao remover automa√ß√£o inv√°lida:', error);\n          }\n        }\n      }\n    }\n  }\n\n  // M√©todos para Templates\n  createTemplate() {\n    this.templateModal.showCreateModal();\n  }\n\n  editTemplate(template: any) {\n    this.templateModal.showEditModal(template);\n  }\n\n  async deleteTemplate(template: any) {\n    if (confirm('Tem certeza que deseja excluir este template?')) {\n      try {\n        await this.firestoreService.deleteEmailTemplate(this.ownerId, this.boardId, template.id);\n        console.log('Template exclu√≠do com sucesso!');\n      } catch (error) {\n        console.error('Erro ao excluir template:', error);\n      }\n    }\n  }\n\n  onTemplateSaved() {\n    // Template foi salvo ou modal foi fechado - n√£o precisa fazer nada\n    // O modal j√° se fechou internamente\n  }\n\n  // Vari√°veis para o modal de automa√ß√£o\n  showAutomationModal = false;\n  selectedAutomation: any = null;\n\n  // Vari√°veis para o modal de hist√≥rico\n  showHistoryModal = false;\n  selectedAutomationForHistory: any = null;\n\n  // M√©todos para Automa√ß√µes\n  createAutomation(event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    console.log('=== BOT√ÉO NOVA AUTOMA√á√ÉO CLICADO ===');\n    \n    this.selectedAutomation = null;\n    this.showAutomationModal = true;\n  }\n\n  editAutomation(automation: any, event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    \n    // Passar c√≥pia profunda para evitar duplica√ß√£o/efeitos colaterais no array\n    this.selectedAutomation = JSON.parse(JSON.stringify(automation));\n    this.showAutomationModal = true;\n  }\n\n  onCloseAutomationModal() {\n    this.showAutomationModal = false;\n    this.selectedAutomation = null;\n  }\n\n  async onSaveAutomation(automationData: any) {\n    try {\n      // Sanitizar payload: remover id e campos undefined\n      const sanitize = (obj: any) => {\n        const out: any = {};\n        Object.keys(obj || {}).forEach(k => {\n          const v = (obj as any)[k];\n          if (v !== undefined) out[k] = v;\n        });\n        return out;\n      };\n      const payload: any = sanitize({ ...automationData });\n      delete payload.id;\n      if (Array.isArray(payload.actions)) {\n        payload.actions = payload.actions.map((a: any) => sanitize(a));\n      }\n\n      if (automationData.id) {\n        // Editando automa√ß√£o existente\n        await this.firestoreService.updateAutomation(this.ownerId, this.boardId, automationData.id, payload);\n      } else {\n        // Criando nova automa√ß√£o\n        await this.firestoreService.createAutomation(this.ownerId, this.boardId, payload);\n      }\n      this.toast.success('Automa√ß√£o salva com sucesso.');\n      this.onCloseAutomationModal();\n    } catch (error) {\n      console.error('Erro ao salvar automa√ß√£o:', error);\n      this.toast.error('Erro ao salvar automa√ß√£o. Tente novamente.');\n    }\n  }\n\n  showAutomationHistory(automation: any, event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    \n    this.selectedAutomationForHistory = automation;\n    this.showHistoryModal = true;\n  }\n\n  onCloseHistoryModal() {\n    this.showHistoryModal = false;\n    this.selectedAutomationForHistory = null;\n  }\n\n  // Outbox Methods\n  async clearOutbox() {\n    if (confirm('Deseja excluir todos os emails da caixa de sa√≠da? Esta a√ß√£o n√£o pode ser desfeita.')) {\n      try {\n        // Buscar e excluir todos os emails do outbox\n        await this.firestoreService.clearOutboxEmails(this.ownerId, this.boardId);\n        console.log('‚úÖ Caixa de sa√≠da limpa com sucesso');\n      } catch (error) {\n        console.error('‚ùå Erro ao limpar caixa de sa√≠da:', error);\n        alert('Erro ao limpar caixa de sa√≠da. Tente novamente.');\n      }\n    }\n  }\n\n  // Filter Methods\n  onFilterQueryChange(query: string) {\n    this.filterQuery = query;\n    this.applyFilters();\n  }\n\n  toggleAdvancedFilters() {\n    this.showAdvancedFilters = !this.showAdvancedFilters;\n  }\n\n  getDynamicFilterCount(): number {\n    return Object.keys(this.dynamicFilters).filter(key => \n      this.dynamicFilters[key] && this.dynamicFilters[key] !== ''\n    ).length;\n  }\n\n  // API Methods\n  copyToClipboard(text: string) {\n    navigator.clipboard.writeText(text).then(() => {\n      console.log('Texto copiado:', text);\n      // Aqui voc√™ pode adicionar uma notifica√ß√£o de sucesso se quiser\n    }).catch(err => {\n      console.error('Erro ao copiar texto:', err);\n    });\n  }\n\n}\n\n","<app-main-layout>\n\n  <!-- Loading State -->\n  <div *ngIf=\"isLoading\" class=\"flex justify-center items-center py-20\">\n    <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n  </div>\n\n  <!-- Tabs Navigation with Search -->\n  <nav *ngIf=\"!isLoading\" class=\"bg-white px-4 md:px-8 border-b border-gray-200 sticky top-0 z-30\">\n    <div class=\"flex justify-between items-center\">\n      <!-- Left side: Back Button and Search -->\n      <div class=\"flex items-center space-x-4\">\n        <div class=\"flex items-center space-x-3\">\n          <!-- Back Button -->\n          <button \n            (click)=\"goToDashboard()\"\n            class=\"text-gray-500 hover:text-gray-700 p-1 rounded hover:bg-gray-100 transition-colors\">\n            <i class=\"fas fa-arrow-left\"></i>\n          </button>\n          \n          <!-- Search Field - Compact -->\n          <div class=\"relative\" *ngIf=\"activeTab === 'kanban'\">\n            <input \n              type=\"text\" \n              [(ngModel)]=\"filterQuery\"\n              (ngModelChange)=\"onFilterQueryChange($event)\"\n              placeholder=\"Pesquisar...\"\n              class=\"w-64 pl-8 pr-10 py-1.5 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\n            <i class=\"fas fa-search absolute left-2.5 top-1/2 transform -translate-y-1/2 text-gray-400 text-xs\"></i>\n            \n            <!-- Filter Button Inside Search -->\n            <button \n              (click)=\"toggleAdvancedFilters()\"\n              class=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-1 hover:bg-gray-100 rounded transition-colors\"\n              [class.text-blue-600]=\"showAdvancedFilters\"\n              [class.bg-blue-50]=\"showAdvancedFilters\">\n              <i class=\"fas fa-filter text-xs\"></i>\n              <span *ngIf=\"hasActiveFilters()\" class=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-3 h-3 flex items-center justify-center\" style=\"font-size: 8px;\">\n                {{ getDynamicFilterCount() + (filterOnlyMine ? 1 : 0) }}\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Center: Tab Navigation -->\n      <div class=\"hidden md:flex space-x-8\">\n        <button\n          *ngFor=\"let tab of tabs\"\n          (click)=\"switchTab(tab.id)\"\n          class=\"py-4 px-1 border-b-2 font-medium text-sm transition-colors duration-200\"\n          [class.border-blue-500]=\"activeTab === tab.id\"\n          [class.text-blue-600]=\"activeTab === tab.id\"\n          [class.border-transparent]=\"activeTab !== tab.id\"\n          [class.text-gray-500]=\"activeTab !== tab.id\"\n          [class.hover:text-gray-700]=\"activeTab !== tab.id\">\n          <i class=\"fas {{ tab.icon }} mr-2\"></i>\n          {{ tab.name }}\n        </button>\n      </div>\n\n      <!-- Right side: Clear Filters Button -->\n      <div class=\"hidden md:flex items-center space-x-2\">\n        <button \n          *ngIf=\"hasActiveFilters() && activeTab === 'kanban'\"\n          (click)=\"clearFilters()\"\n          class=\"px-2 py-1 bg-red-100 hover:bg-red-200 text-red-700 border border-red-300 rounded text-xs transition-colors\">\n          <i class=\"fas fa-times mr-1\"></i>\n          Limpar\n        </button>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Advanced Filters Modal -->\n  <div *ngIf=\"showAdvancedFilters && activeTab === 'kanban'\" \n       class=\"fixed top-20 left-4 w-full max-w-lg bg-white rounded-xl shadow-xl border border-gray-200 z-[9999]\">\n    <div class=\"p-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <h3 class=\"text-lg font-semibold text-gray-900\">Filtros Avan√ßados</h3>\n        <button \n          (click)=\"toggleAdvancedFilters()\"\n          class=\"text-gray-400 hover:text-gray-600\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n      \n      <!-- Quick Filter: Show Only Mine -->\n      <div class=\"mb-6 p-3 bg-gray-50 rounded-lg\">\n        <label class=\"flex items-center space-x-2 cursor-pointer\">\n          <input \n            type=\"checkbox\" \n            [(ngModel)]=\"filterOnlyMine\"\n            (ngModelChange)=\"toggleOnlyMine()\"\n            class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\">\n          <span class=\"text-sm text-gray-700 font-medium\">Mostrar apenas meus registros</span>\n        </label>\n      </div>\n      \n      <!-- Dynamic Filter Fields -->\n      <div *ngIf=\"availableFilterFields.length > 0\" class=\"space-y-4\">\n        <h4 class=\"text-sm font-medium text-gray-700 mb-3\">Filtros Din√¢micos</h4>\n        \n        <div *ngFor=\"let field of availableFilterFields\" class=\"space-y-2\">\n          <label class=\"block text-sm font-medium text-gray-700\">\n            {{ field.label }}\n          </label>\n          \n          <!-- Text/Email/Tel/Number Fields -->\n          <input \n            *ngIf=\"field.type === 'text' || field.type === 'email' || field.type === 'tel' || field.type === 'number' || field.type === 'cnpj' || field.type === 'cpf'\"\n            [type]=\"field.type === 'number' ? 'number' : 'text'\"\n            [value]=\"dynamicFilters[field.name] || ''\"\n            (input)=\"setDynamicFilter(field.name, $any($event.target).value)\"\n            [placeholder]=\"'Filtrar por ' + field.label.toLowerCase()\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\n          \n          <!-- Date Fields -->\n          <input \n            *ngIf=\"field.type === 'date'\"\n            type=\"date\"\n            [value]=\"dynamicFilters[field.name] || ''\"\n            (input)=\"setDynamicFilter(field.name, $any($event.target).value)\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\n          \n          <!-- Select/Radio Fields -->\n          <select \n            *ngIf=\"field.type === 'select' || field.type === 'radio'\"\n            [value]=\"dynamicFilters[field.name] || ''\"\n            (change)=\"setDynamicFilter(field.name, $any($event.target).value)\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\n            <option value=\"\">Todos</option>\n            <option *ngFor=\"let option of getFieldOptions(field)\" [value]=\"option\">\n              {{ option }}\n            </option>\n          </select>\n          \n          <!-- Temperatura Field -->\n          <select \n            *ngIf=\"field.type === 'temperatura'\"\n            [value]=\"dynamicFilters[field.name] || ''\"\n            (change)=\"setDynamicFilter(field.name, $any($event.target).value)\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\n            <option value=\"\">Todas as temperaturas</option>\n            <option value=\"Quente\">üî• Quente</option>\n            <option value=\"Morno\">üå°Ô∏è Morno</option>\n            <option value=\"Frio\">‚ùÑÔ∏è Frio</option>\n          </select>\n          \n          <!-- Checkbox Fields -->\n          <div *ngIf=\"field.type === 'checkbox'\" class=\"flex items-center space-x-2\">\n            <input \n              type=\"checkbox\"\n              [checked]=\"dynamicFilters[field.name] === true\"\n              (change)=\"setDynamicFilter(field.name, $any($event.target).checked)\"\n              class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\">\n            <span class=\"text-sm text-gray-700\">Apenas marcados</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- No Fields Available -->\n      <div *ngIf=\"availableFilterFields.length === 0\" class=\"text-center py-6\">\n        <i class=\"fas fa-filter text-gray-300 text-3xl mb-3\"></i>\n        <p class=\"text-gray-500 text-sm\">\n          Nenhum campo configurado para filtros.<br>\n          Configure campos com \"Mostrar em filtros\" ativado no formul√°rio.\n        </p>\n      </div>\n      \n      <!-- Action Buttons -->\n      <div class=\"flex justify-end space-x-3 mt-6 pt-4 border-t border-gray-200\">\n        <button \n          (click)=\"clearFilters()\"\n          class=\"px-4 py-2 text-gray-600 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\">\n          Limpar\n        </button>\n        <button \n          (click)=\"toggleAdvancedFilters()\"\n          class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\">\n          Aplicar\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Desktop Kanban Board Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'kanban'\" class=\"kanban-board desktop-board\">\n    <div \n      *ngFor=\"let column of columns\" \n      class=\"kanban-column\"\n      [style.background-color]=\"'#e2e8f0'\">\n      \n      <!-- Column Header -->\n      <div \n        class=\"kanban-column-header\"\n        [style.border-top-color]=\"getColumnBorderColor(column)\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <h3 class=\"font-semibold text-gray-800\">{{ column.name }}</h3>\n            <span class=\"ml-2 bg-gray-200 text-gray-600 text-xs px-2 py-1 rounded-full\">\n              {{ getLeadsForColumn(column.id!).length }}\n            </span>\n            <span *ngIf=\"getAutomationCount(column.id!) > 0\" class=\"ml-2 inline-flex items-center text-xs px-2 py-1 rounded-full bg-yellow-100 text-yellow-800\" title=\"Automa√ß√µes ativas nesta fase\">\n              <i class=\"fas fa-bolt mr-1\"></i>{{ getAutomationCount(column.id!) }}\n            </span>\n          </div>\n          \n          \n        </div>\n      </div>\n\n      <!-- Cards Container -->\n      <div \n        class=\"kanban-cards\"\n        cdkDropList\n        [id]=\"'column-' + column.id\"\n        [cdkDropListData]=\"displayedLeadsByColumn[column.id!] || []\"\n        [cdkDropListConnectedTo]=\"getColumnConnectedTo()\"\n        (cdkDropListDropped)=\"onLeadDrop($event)\">\n        \n        <div \n          *ngFor=\"let lead of (displayedLeadsByColumn[column.id!] || []); trackBy: trackByLeadId\" \n          class=\"bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200 cursor-pointer mb-3 p-4 border-l-4\"\n          [class]=\"getSlaStatus(lead).borderClass || getLeadPriorityClass(lead)\"\n          cdkDrag\n          [cdkDragDisabled]=\"!cardMoveEnabled\"\n          [cdkDragData]=\"lead.id\"\n          (cdkDragStarted)=\"onLeadDragStarted()\"\n          (cdkDragEnded)=\"onLeadDragEnded()\"\n          (click)=\"onCardClick(lead, $event)\">\n          \n          <!-- Card Header -->\n          <div class=\"flex items-start justify-between mb-3\">\n            <div class=\"flex-1 min-w-0\">\n              <h4 class=\"font-semibold text-gray-900 text-sm truncate mb-1\">\n                {{ getCompanyName(lead) }}\n              </h4>\n              <div *ngIf=\"getCnpj(lead)\" class=\"text-xs text-gray-500\">\n                CNPJ: {{ getCnpj(lead) }}\n              </div>\n            </div>\n            <!-- Removido badge fixa de temperatura (passar√° a exibir via showInCard como √≠cone) -->\n          </div>\n\n          <!-- Campos configurados para exibir no card -->\n          <div class=\"space-y-2 mb-3\">\n            <div *ngFor=\"let item of getCardFieldsForLead(lead)\" class=\"text-xs\">\n              <!-- Outros campos: exibir normal (temperatura vai para o rodap√©) -->\n              <div *ngIf=\"item.type !== 'temperatura'\">\n                <div class=\"font-medium text-gray-600 mb-0.5\">{{ item.label }}</div>\n                <div class=\"text-gray-900 truncate\">{{ item.value }}</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- SLA Status -->\n          <div *ngIf=\"getSlaStatus(lead).text\" class=\"mb-3\">\n            <div class=\"flex items-center text-xs font-medium\"\n                 [class]=\"getSlaStatus(lead).colorClass\">\n              <i class=\"fas fa-clock w-3 h-3 mr-1\"></i>\n              <span>{{ getSlaStatus(lead).text }}</span>\n            </div>\n          </div>\n\n          <!-- Temperatura (sempre vis√≠vel se existir) -->\n          <div *ngIf=\"getTemperatureGlobalItem(lead) as temp\" class=\"mb-3\">\n            <div class=\"flex items-center text-xs font-medium\">\n              <span [ngClass]=\"{\n                'bg-red-500': temp.value === 'Quente',\n                'bg-yellow-500': temp.value === 'Morno', \n                'bg-blue-500': temp.value === 'Frio'\n              }\" class=\"w-2 h-2 rounded-full mr-1\"></span>\n              <span>{{ temp.value }}</span>\n            </div>\n          </div>\n\n          <!-- Card Footer -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center gap-3 text-xs text-gray-500\">\n              <!-- Coment√°rios count -->\n              <div class=\"flex items-center\" *ngIf=\"lead.historyCommentsCount as c\"><i class=\"far fa-comment mr-1\"></i><span>{{ c || 0 }}</span></div>\n              <!-- Anexos count -->\n              <div class=\"flex items-center\" *ngIf=\"lead.attachmentsCount as a\"><i class=\"fas fa-paperclip mr-1\"></i><span>{{ a || 0 }}</span></div>\n            </div>\n            <div class=\"flex items-center text-xs text-gray-500\">\n              <i class=\"far fa-calendar-alt w-3 h-3 mr-1\"></i>\n              <span>{{ formatDateTime(lead.createdAt) }}</span>\n            </div>\n          </div>\n\n          <!-- Description/Notes Preview -->\n          <div *ngIf=\"lead.fields?.['description']\" class=\"mt-2 pt-2 border-t border-gray-100\">\n            <p class=\"text-xs text-gray-600 line-clamp-2\">\n              {{ lead.fields['description'] }}\n            </p>\n          </div>\n        </div>\n\n        <!-- Empty State -->\n        <div *ngIf=\"getLeadsForColumn(column.id!).length === 0\" \n             class=\"text-center py-6 text-gray-400\">\n          <i class=\"fas fa-inbox text-2xl mb-2\"></i>\n          <p class=\"text-sm\">Nenhum registro nesta fase</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bot√£o flutuante √∫nico: Novo registro -->\n  <button \n    *ngIf=\"!isLoading && activeTab === 'kanban'\"\n    (click)=\"showCreateLeadModal()\"\n    class=\"fixed left-4 bottom-4 z-40 bg-green-500 hover:bg-green-600 text-white px-4 py-3 rounded-full shadow-lg flex items-center gap-2\">\n    <i class=\"fas fa-plus\"></i>\n    Novo registro\n  </button>\n\n  <!-- Initial Form Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'initial-form'\" class=\"p-4 md:p-8\">\n    <div class=\"max-w-4xl mx-auto\">\n      <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Formul√°rio inicial do quadro</h2>\n\n      <app-visual-form-builder\n        [fields]=\"initialFormFields\"\n        (fieldsChanged)=\"onInitialFieldsChanged($event)\">\n      </app-visual-form-builder>\n\n      <div class=\"flex justify-end mt-6\">\n        <button class=\"px-4 py-2 text-white rounded-lg\" [style.background-color]=\"getPrimaryColor()\" (click)=\"saveInitialForm()\">\n          Salvar\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Configura√ß√£o de formul√°rio da fase removida daqui; usar √≠cone na pr√≥pria coluna -->\n\n  <!-- Empty State - No Columns -->\n  <div *ngIf=\"!isLoading && activeTab === 'kanban' && columns.length === 0\" class=\"text-center py-20\">\n    <div class=\"max-w-md mx-auto\">\n      <i class=\"fas fa-columns text-6xl text-gray-300 mb-4\"></i>\n      <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Nenhuma coluna encontrada</h3>\n      <p class=\"text-gray-600\">\n        Este quadro ainda n√£o possui colunas configuradas.\n      </p>\n    </div>\n  </div>\n\n  <!-- Templates Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'templates'\" class=\"p-4 md:p-8\">\n    <div class=\"max-w-4xl mx-auto\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">Templates de Email</h2>\n        <button (click)=\"createTemplate()\" class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\">\n          <i class=\"fas fa-plus mr-2\"></i>\n          Novo Template\n        </button>\n      </div>\n      \n      <!-- Lista de Templates -->\n      <div *ngIf=\"emailTemplates.length > 0\" class=\"grid gap-4\">\n        <div \n          *ngFor=\"let template of emailTemplates\" \n          class=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\n          <div class=\"flex items-start justify-between\">\n            <div class=\"flex-1\">\n              <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">\n                {{ template.name || 'Template sem nome' }}\n              </h3>\n              <p class=\"text-sm text-gray-600 mb-3\">\n                <strong>Assunto:</strong> {{ template.subject || 'Sem assunto' }}\n              </p>\n              <p class=\"text-xs text-gray-500 mb-4\">\n                <strong>Para:</strong> {{ template.recipients || 'N√£o especificado' }}\n              </p>\n              <div class=\"flex items-center text-xs text-gray-500 space-x-4\">\n                <span>\n                  <i class=\"far fa-calendar-alt mr-1\"></i>\n                  Criado em {{ formatDate(template.createdAt) }}\n                </span>\n                <span *ngIf=\"template.updatedAt\">\n                  <i class=\"fas fa-edit mr-1\"></i>\n                  Atualizado em {{ formatDate(template.updatedAt) }}\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"flex items-center space-x-2 ml-4\">\n              <button \n                (click)=\"editTemplate(template)\"\n                class=\"text-blue-600 hover:text-blue-800 px-3 py-1 text-sm font-medium\">\n                <i class=\"fas fa-edit mr-1\"></i>\n                Editar\n              </button>\n              <button \n                (click)=\"deleteTemplate(template)\"\n                class=\"text-red-600 hover:text-red-800 px-3 py-1 text-sm font-medium\">\n                <i class=\"fas fa-trash mr-1\"></i>\n                Excluir\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Empty State -->\n      <div *ngIf=\"emailTemplates.length === 0\" class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"text-center py-12 text-gray-500\">\n          <i class=\"fas fa-envelope text-6xl mb-4\"></i>\n          <h3 class=\"text-xl font-semibold mb-2\">Nenhum template encontrado</h3>\n          <p>Crie templates personalizados para automa√ß√µes de email</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Automations Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'automations'\" class=\"p-4 md:p-8\">\n    <div class=\"max-w-4xl mx-auto\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">Automa√ß√µes</h2>\n        <button (click)=\"createAutomation($event)\" class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\">\n          <i class=\"fas fa-plus mr-2\"></i>\n          Nova Automa√ß√£o\n        </button>\n      </div>\n      \n      <!-- Lista de Automa√ß√µes -->\n      <div *ngIf=\"getValidAutomations().length > 0\" class=\"grid gap-4\">\n        <div \n          *ngFor=\"let automation of getValidAutomations()\" \n          class=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\n          <div class=\"flex items-start justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center mb-2\">\n                <h3 class=\"text-lg font-semibold text-gray-900 mr-3\">\n                  {{ automation.name }}\n                </h3>\n                <span \n                  class=\"px-2 py-1 text-xs font-medium rounded-full\"\n                  [class.bg-green-100]=\"automation.active\"\n                  [class.text-green-800]=\"automation.active\"\n                  [class.bg-red-100]=\"!automation.active\"\n                  [class.text-red-800]=\"!automation.active\">\n                  {{ automation.active ? 'Ativa' : 'Inativa' }}\n                </span>\n              </div>\n              \n              <div class=\"space-y-2 mb-4\">\n                <p class=\"text-sm text-gray-600\">\n                  <i class=\"fas fa-bolt mr-2\"></i>\n                  <strong>Gatilho:</strong> {{ getTriggerDescription(automation.trigger) }}\n                </p>\n                <p class=\"text-sm text-gray-600\">\n                  <i class=\"fas fa-play mr-2\"></i>\n                  <strong>A√ß√µes:</strong> {{ getActionsCount(automation.actions) }} a√ß√£o(√µes) configurada(s)\n                </p>\n              </div>\n              \n              <div class=\"flex items-center text-xs text-gray-500 space-x-4\">\n                <span>\n                  <i class=\"far fa-calendar-alt mr-1\"></i>\n                  Criada em {{ formatDate(automation.createdAt) }}\n                </span>\n                <span *ngIf=\"automation.lastExecuted\">\n                  <i class=\"fas fa-play mr-1\"></i>\n                  √öltima execu√ß√£o: {{ formatDate(automation.lastExecuted) }}\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"flex items-center space-x-2 ml-4\">\n              <button \n                (click)=\"showAutomationHistory(automation, $event)\"\n                class=\"text-gray-500 hover:text-blue-600 px-3 py-1 text-sm font-medium\"\n                title=\"Ver Hist√≥rico\">\n                <i class=\"fas fa-history mr-1\"></i>\n                Hist√≥rico\n              </button>\n              <button \n                (click)=\"editAutomation(automation, $event)\"\n                class=\"text-blue-600 hover:text-blue-800 px-3 py-1 text-sm font-medium\">\n                <i class=\"fas fa-edit mr-1\"></i>\n                Editar\n              </button>\n              <button \n                (click)=\"toggleAutomation(automation)\"\n                class=\"px-3 py-1 text-sm font-medium\"\n                [class.text-red-600]=\"automation.active\"\n                [class.hover:text-red-800]=\"automation.active\"\n                [class.text-green-600]=\"!automation.active\"\n                [class.hover:text-green-800]=\"!automation.active\">\n                <i class=\"fas mr-1\" [class.fa-pause]=\"automation.active\" [class.fa-play]=\"!automation.active\"></i>\n                {{ automation.active ? 'Pausar' : 'Ativar' }}\n              </button>\n              <button \n                (click)=\"openDeleteAutomationConfirm(automation, $event)\"\n                class=\"text-red-600 hover:text-red-800 px-3 py-1 text-sm font-medium\">\n                <i class=\"fas fa-trash mr-1\"></i>\n                Excluir\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Empty State -->\n      <div *ngIf=\"getValidAutomations().length === 0\" class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"text-center py-12 text-gray-500\">\n          <i class=\"fas fa-cogs text-6xl mb-4\"></i>\n          <h3 class=\"text-xl font-semibold mb-2\">Nenhuma automa√ß√£o encontrada</h3>\n          <p>Configure automa√ß√µes para disparar a√ß√µes quando leads mudarem de fase</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Flow Tab - Novo Editor Simplificado -->\n  <div *ngIf=\"!isLoading && activeTab === 'flow'\" class=\"p-4 md:p-8\">\n    <div class=\"w-full mx-auto\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">Fluxo de Transi√ß√µes</h2>\n        <div class=\"flex items-center gap-2\">\n          <button (click)=\"showCreateColumnModal()\" class=\"bg-gray-400 hover:bg-gray-500 text-white px-4 py-2 rounded-lg font-medium transition-colors\" title=\"Nova fase\">\n            <i class=\"fas fa-plus mr-2\"></i>\n            Nova Fase\n          </button>\n          <button (click)=\"saveFlowConfig()\" class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\">\n            <i class=\"fas fa-save mr-2\"></i>\n            Salvar Fluxo\n          </button>\n        </div>\n      </div>\n\n      <!-- Lista horizontal de fases com reordena√ß√£o -->\n      <div class=\"relative w-full\">\n        <div #flowScroller class=\"flow-scroll\">\n          <div cdkDropList [cdkDropListData]=\"flowOrder\" (cdkDropListDropped)=\"onFlowReorder($event)\" (cdkDropListEntered)=\"onDragEntered()\" (cdkDropListExited)=\"onDragExited()\" class=\"inline-flex items-center gap-6 p-2 whitespace-nowrap min-w-max flow-row w-max\">\n          <ng-container *ngFor=\"let phaseId of flowOrder; let i = index\">\n          <!-- Phase card -->\n          <div cdkDrag (cdkDragStarted)=\"onDragStarted(phaseId)\" (cdkDragEnded)=\"onDragEnded(phaseId)\" class=\"min-w-[300px] max-w-[340px] flow-phase-card cursor-pointer\" [attr.id]=\"'phase-'+phaseId\" [style.--phase-color]=\"getColumnById(phaseId)?.color || '#94a3b8'\" (click)=\"onPhaseCardClick(phaseId, $event)\">\n            <div class=\"px-3 py-2 bg-gray-50 rounded-t-lg flex items-center justify-between\">\n              <div class=\"font-medium text-gray-800 truncate\">{{ getColumnById(phaseId)?.name }}</div>\n              <div class=\"flex items-center gap-2\">\n                <button \n                  *ngIf=\"i > 0\" \n                  (click)=\"movePhaseUp(i, $event)\" \n                  class=\"p-1 text-gray-400 hover:text-blue-600 transition-colors\"\n                  title=\"Mover para esquerda\">\n                  <i class=\"fas fa-chevron-left text-xs\"></i>\n                </button>\n                <button \n                  *ngIf=\"i < flowOrder.length - 1\" \n                  (click)=\"movePhaseDown(i, $event)\" \n                  class=\"p-1 text-gray-400 hover:text-blue-600 transition-colors\"\n                  title=\"Mover para direita\">\n                  <i class=\"fas fa-chevron-right text-xs\"></i>\n                </button>\n                <i class=\"fas fa-grip-vertical text-gray-400\" cdkDragHandle title=\"Arraste para reordenar\"></i>\n              </div>\n            </div>\n            <div class=\"p-3 text-sm space-y-3\">\n              <div *ngIf=\"hasOutgoingConnections(phaseId); else noConnections\" class=\"pt-0\">\n                <div class=\"text-xs text-gray-500 mb-1\">Conex√µes:</div>\n                <div class=\"space-y-1\">\n                  <div *ngFor=\"let e of getOutgoingConnections(phaseId)\" class=\"flex items-center justify-between text-xs\">\n                    <span class=\"truncate\">{{ getEdgeArrow(e) }} {{ getColumnById(e.toId)?.name || e.toId }}</span>\n                    <button class=\"text-red-600 hover:text-red-700\" (click)=\"removeEdge(e); $event.stopPropagation()\" title=\"Remover\">\n                      <i class=\"fas fa-xmark\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <ng-template #noConnections>\n                <div class=\"text-xs text-gray-400\">Sem conex√µes para esta fase</div>\n              </ng-template>\n\n              <!-- Footer action row: form, automations, connection -->\n              <div class=\"pt-2 border-t border-gray-100 flex items-center justify-end gap-3 text-base\">\n                <button class=\"text-blue-600 hover:text-blue-700\" title=\"Formul√°rio da fase\" (click)=\"showColumnForm(getColumnById(phaseId)!); $event.stopPropagation()\">\n                  <i class=\"fas fa-list-check\"></i>\n                </button>\n                <button class=\"text-purple-600 hover:text-purple-700\" title=\"Automa√ß√µes da fase\" (click)=\"openPhaseAutomations(phaseId); $event.stopPropagation()\">\n                  <i class=\"fas fa-gears\"></i>\n                </button>\n                <button *ngIf=\"!pendingFromId\" class=\"text-indigo-600 hover:text-indigo-700\" title=\"Iniciar conex√£o\" (click)=\"beginEdge(phaseId); $event.stopPropagation()\">\n                  <i class=\"fas fa-circle-dot\"></i>\n                </button>\n                <button *ngIf=\"pendingFromId && pendingFromId!==phaseId\" class=\"text-indigo-600 hover:text-indigo-700\" title=\"Conectar aqui\" (click)=\"completeEdge(phaseId); $event.stopPropagation()\">\n                  <i class=\"fas fa-bullseye\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Connector removed -->\n          </ng-container>\n        </div>\n        </div>\n        <!-- custom persistent scrollbar outside the scroller -->\n        <div class=\"flow-custombar mt-1\" #flowCustomBar (mousedown)=\"onFlowBarPointerDown($event)\" (touchstart)=\"onFlowBarTouchStart($event)\">\n          <div class=\"flow-thumb\" [style.width.%]=\"flowThumbPercent\" [style.left.%]=\"flowThumbLeftPercent\"></div>\n        </div>\n      </div>\n\n      <!-- Automations drawer inside Flow -->\n      <div *ngIf=\"selectedPhaseIdForAutomations\" class=\"mt-4 p-4 border rounded-lg bg-white shadow\">\n        <div class=\"flex justify-between items-center mb-3\">\n          <div class=\"font-semibold\">Automa√ß√µes da fase: {{ getColumnById(selectedPhaseIdForAutomations!)?.name }}</div>\n          <button class=\"text-gray-600 hover:text-gray-900\" (click)=\"closePhaseAutomations()\"><i class=\"fas fa-times\"></i></button>\n        </div>\n        <div class=\"space-y-2\">\n          <div *ngFor=\"let a of getAutomationsForPhase(selectedPhaseIdForAutomations!)\" class=\"p-3 border rounded\">\n            <div class=\"flex justify-between items-center\">\n              <div>\n                <div class=\"font-medium\">{{ a.name || 'Automa√ß√£o sem nome' }}</div>\n                <div class=\"text-xs text-gray-500\">Trigger: {{ getTriggerDescription(a) }}</div>\n              </div>\n              <div class=\"flex items-center gap-2\">\n                <label class=\"text-xs flex items-center gap-1\">\n                  <input type=\"checkbox\" [checked]=\"a.active\" (change)=\"toggleAutomation(a)\" /> Ativa\n                </label>\n                <button class=\"text-blue-600 text-sm\" (click)=\"editAutomation(a)\">Editar</button>\n                <button class=\"text-red-600 text-sm\" (click)=\"openDeleteAutomationConfirm(a, $event)\">Excluir</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"pt-2\">\n            <button class=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded text-sm\" (click)=\"createAutomationForPhase(selectedPhaseIdForAutomations!)\">\n              <i class=\"fas fa-plus mr-1\"></i> Nova automa√ß√£o nesta fase\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal de confirma√ß√£o de exclus√£o de automa√ß√£o -->\n  <div *ngIf=\"showAutomationDeleteConfirm\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[60]\" (click)=\"cancelDeleteAutomation()\">\n    <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md p-6\" (click)=\"$event.stopPropagation()\">\n      <h3 class=\"text-lg font-bold text-gray-900 mb-2\">Excluir automa√ß√£o</h3>\n      <p class=\"text-sm text-gray-600 mb-6\">Tem certeza que deseja excluir a automa√ß√£o\n        <strong>{{ automationPendingDelete?.name || 'sem nome' }}</strong>? Esta a√ß√£o n√£o pode ser desfeita.</p>\n      <div class=\"flex justify-end gap-3\">\n        <button class=\"px-4 py-2 rounded-lg border border-gray-300\" (click)=\"cancelDeleteAutomation()\">Cancelar</button>\n        <button class=\"px-4 py-2 rounded-lg bg-red-600 text-white\" (click)=\"confirmDeleteAutomation()\">Excluir</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Reports Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'reports'\">\n    <app-reports \n      [boardId]=\"boardId\" \n      [ownerId]=\"ownerId\">\n    </app-reports>\n  </div>\n\n  <!-- Outbox/Caixa de Sa√≠da Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'outbox'\" class=\"p-4 md:p-8\">\n    <div class=\"max-w-6xl mx-auto\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">Caixa de Sa√≠da</h2>\n        <div class=\"flex space-x-2\">\n          <button \n            (click)=\"clearOutbox()\"\n            class=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\">\n            <i class=\"fas fa-trash mr-2\"></i>\n            Limpar\n          </button>\n        </div>\n      </div>\n      \n      <div class=\"bg-white rounded-lg shadow\">\n        <!-- Tabs de status de email -->\n        <div class=\"border-b border-gray-200\">\n          <nav class=\"flex space-x-8 px-6\">\n            <button \n              *ngFor=\"let status of emailStatuses\"\n              (click)=\"activeEmailStatus = status.id\"\n              class=\"py-4 px-1 border-b-2 font-medium text-sm transition-colors duration-200\"\n              [class.border-blue-500]=\"activeEmailStatus === status.id\"\n              [class.text-blue-600]=\"activeEmailStatus === status.id\"\n              [class.border-transparent]=\"activeEmailStatus !== status.id\"\n              [class.text-gray-500]=\"activeEmailStatus !== status.id\">\n              {{ status.name }}\n              <span class=\"ml-2 bg-gray-200 text-gray-600 text-xs px-2 py-1 rounded-full\">\n                {{ status.count }}\n              </span>\n            </button>\n          </nav>\n        </div>\n\n        <!-- Lista de emails -->\n        <div class=\"p-6\">\n          <div *ngIf=\"getFilteredEmails().length === 0\" class=\"text-center py-12 text-gray-500\">\n            <i class=\"fas fa-paper-plane text-6xl mb-4\"></i>\n            <h3 class=\"text-xl font-semibold mb-2\">Nenhum email encontrado</h3>\n            <p>Emails enviados aparecer√£o aqui</p>\n          </div>\n\n          <div *ngIf=\"getFilteredEmails().length > 0\" class=\"space-y-4\">\n            <div \n              *ngFor=\"let email of getFilteredEmails()\" \n              class=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex-1\">\n                  <div class=\"flex items-center space-x-3\">\n                    <div \n                      class=\"w-3 h-3 rounded-full\"\n                      [class.bg-yellow-400]=\"!email.delivery || email.delivery.state === 'PENDING'\"\n                      [class.bg-green-400]=\"email.delivery?.state === 'SUCCESS'\"\n                      [class.bg-red-400]=\"email.delivery?.state === 'ERROR'\">\n                    </div>\n                    <h4 class=\"font-medium text-gray-900\">{{ email.subject || 'Sem assunto' }}</h4>\n                    <span \n                      class=\"px-2 py-1 text-xs rounded-full\"\n                      [class.bg-yellow-100]=\"!email.delivery || email.delivery.state === 'PENDING'\"\n                      [class.text-yellow-800]=\"!email.delivery || email.delivery.state === 'PENDING'\"\n                      [class.bg-green-100]=\"email.delivery?.state === 'SUCCESS'\"\n                      [class.text-green-800]=\"email.delivery?.state === 'SUCCESS'\"\n                      [class.bg-red-100]=\"email.delivery?.state === 'ERROR'\"\n                      [class.text-red-800]=\"email.delivery?.state === 'ERROR'\">\n                      {{ getEmailStatusLabel(email) }}\n                    </span>\n                  </div>\n                  <div class=\"mt-2 flex items-center space-x-4 text-sm text-gray-500\">\n                    <span><i class=\"fas fa-envelope mr-1\"></i>Para: {{ email.to }}</span>\n                    <span><i class=\"fas fa-clock mr-1\"></i>{{ formatDateTime(getEmailDisplayDate(email)) }}</span>\n                  </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <button \n                    (click)=\"viewEmail(email)\"\n                    class=\"text-blue-600 hover:text-blue-800\">\n                    <i class=\"fas fa-eye\"></i>\n                  </button>\n                  <button \n                    *ngIf=\"email.delivery?.state === 'ERROR' || !email.delivery\"\n                    (click)=\"retryEmail(email)\"\n                    class=\"text-green-600 hover:text-green-800\">\n                    <i class=\"fas fa-redo\"></i>\n                  </button>\n                  <button \n                    (click)=\"openOutboxDeleteConfirm(email, $event)\"\n                    class=\"text-red-600 hover:text-red-800\">\n                    <i class=\"fas fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal de confirma√ß√£o de exclus√£o da mensagem (Outbox) -->\n  <div *ngIf=\"showOutboxDeleteConfirm\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[60]\" (click)=\"cancelOutboxDelete()\">\n    <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md p-6\" (click)=\"$event.stopPropagation()\">\n      <h3 class=\"text-lg font-bold text-gray-900 mb-2\">Excluir mensagem</h3>\n      <p class=\"text-sm text-gray-600 mb-6\">Tem certeza que deseja excluir esta mensagem da Caixa de Sa√≠da? Esta a√ß√£o n√£o pode ser desfeita.</p>\n      <div class=\"flex justify-end gap-3\">\n        <button class=\"px-4 py-2 rounded-lg border border-gray-300\" (click)=\"cancelOutboxDelete()\">Cancelar</button>\n        <button class=\"px-4 py-2 rounded-lg bg-red-600 text-white\" (click)=\"confirmOutboxDelete()\">Excluir</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- API Tab -->\n  <div *ngIf=\"!isLoading && activeTab === 'api'\" class=\"p-4 md:p-8\">\n    <div class=\"max-w-4xl mx-auto\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">Configura√ß√£o da API</h2>\n        <div class=\"flex items-center space-x-2\">\n          <span class=\"text-sm text-gray-600\">Status:</span>\n          <span class=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\">\n            <i class=\"fas fa-check-circle mr-1\"></i>Ativa\n          </span>\n        </div>\n      </div>\n      \n      <!-- Endpoint -->\n      <div class=\"bg-white rounded-lg shadow mb-6\">\n        <div class=\"p-6 border-b border-gray-200\">\n          <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">\n            <i class=\"fas fa-link mr-2 text-blue-500\"></i>Endpoint para Novos Leads\n          </h3>\n          <p class=\"text-sm text-gray-600 mb-4\">\n            Use este endpoint para enviar novos leads diretamente para o seu kanban via API REST.\n          </p>\n          \n          <div class=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm font-medium text-gray-700\">URL do Endpoint:</span>\n              <button \n                (click)=\"copyToClipboard(apiEndpoint)\"\n                class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                <i class=\"fas fa-copy mr-1\"></i>Copiar\n              </button>\n            </div>\n            <code class=\"bg-blue-50 text-blue-800 text-sm p-2 rounded border block\">\n              {{ apiEndpoint }}\n            </code>\n          </div>\n        </div>\n        \n        <!-- Token de Autentica√ß√£o -->\n        <div class=\"p-6 border-b border-gray-200\">\n          <h4 class=\"text-md font-semibold text-gray-900 mb-2\">\n            <i class=\"fas fa-key mr-2 text-yellow-500\"></i>Token de Autentica√ß√£o\n          </h4>\n          <p class=\"text-sm text-gray-600 mb-3\">\n            Inclua este token no header <code class=\"bg-gray-100 px-1 rounded\">Authorization</code> de suas requisi√ß√µes.\n          </p>\n          \n          <div class=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm font-medium text-gray-700\">Bearer Token:</span>\n              <button \n                (click)=\"copyToClipboard(apiToken)\"\n                class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                <i class=\"fas fa-copy mr-1\"></i>Copiar\n              </button>\n            </div>\n            <code class=\"bg-yellow-50 text-yellow-800 text-sm p-2 rounded border block font-mono\">\n              {{ apiToken }}\n            </code>\n          </div>\n        </div>\n        \n        <!-- Exemplo de Requisi√ß√£o -->\n        <div class=\"p-6\">\n          <h4 class=\"text-md font-semibold text-gray-900 mb-2\">\n            <i class=\"fas fa-code mr-2 text-green-500\"></i>Exemplo de Requisi√ß√£o\n          </h4>\n          <p class=\"text-sm text-gray-600 mb-3\">\n            Exemplo de como enviar um novo lead via POST request:\n          </p>\n          \n          <div class=\"bg-gray-900 text-gray-100 rounded-lg p-4 overflow-x-auto\">\n            <pre class=\"text-sm\"><code>POST {{ apiEndpoint }}\nContent-Type: application/json\nAuthorization: Bearer {{ apiToken }}\n\n{{ apiExampleJson }}</code></pre>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Webhooks -->\n      <div class=\"bg-white rounded-lg shadow mb-6\">\n        <div class=\"p-6 border-b border-gray-200\">\n          <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">\n            <i class=\"fas fa-broadcast-tower mr-2 text-purple-500\"></i>Webhooks (Em breve)\n          </h3>\n          <p class=\"text-sm text-gray-600\">\n            Receba notifica√ß√µes quando leads mudarem de fase, forem criados ou atualizados.\n          </p>\n        </div>\n        \n        <div class=\"p-6\">\n          <div class=\"text-center py-8 text-gray-500\">\n            <i class=\"fas fa-construction text-4xl mb-3\"></i>\n            <h4 class=\"font-semibold mb-2\">Funcionalidade em Desenvolvimento</h4>\n            <p class=\"text-sm\">Webhooks estar√£o dispon√≠veis em breve para integra√ß√£o avan√ßada.</p>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Documenta√ß√£o -->\n      <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <h3 class=\"text-lg font-semibold text-blue-900 mb-3\">\n          <i class=\"fas fa-book mr-2\"></i>Documenta√ß√£o da API\n        </h3>\n        <div class=\"space-y-3 text-sm text-blue-800\">\n          <div class=\"flex items-start space-x-3\">\n            <i class=\"fas fa-check-circle mt-0.5 text-blue-600\"></i>\n            <div>\n              <strong>M√©todo:</strong> POST para criar novos leads\n            </div>\n          </div>\n          <div class=\"flex items-start space-x-3\">\n            <i class=\"fas fa-check-circle mt-0.5 text-blue-600\"></i>\n            <div>\n              <strong>Content-Type:</strong> application/json obrigat√≥rio\n            </div>\n          </div>\n          <div class=\"flex items-start space-x-3\">\n            <i class=\"fas fa-check-circle mt-0.5 text-blue-600\"></i>\n            <div>\n              <strong>Autentica√ß√£o:</strong> Bearer token no header Authorization\n            </div>\n          </div>\n          <div class=\"flex items-start space-x-3\">\n            <i class=\"fas fa-check-circle mt-0.5 text-blue-600\"></i>\n            <div>\n              <strong>Campos obrigat√≥rios:</strong> companyName, contactName, contactEmail\n            </div>\n          </div>\n          <div class=\"flex items-start space-x-3\">\n            <i class=\"fas fa-check-circle mt-0.5 text-blue-600\"></i>\n            <div>\n              <strong>Resposta de sucesso:</strong> Status 201 com dados do lead criado\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Mobile board: stages list + cards feed -->\n  <div *ngIf=\"!isLoading && activeTab === 'kanban'\" class=\"mobile-board\">\n    <div class=\"p-4 space-y-3\">\n      <!-- Mobile filters -->\n      <div class=\"relative\">\n        <div class=\"flex gap-2 overflow-x-auto pb-2\">\n          <div class=\"relative flex-1 max-w-xs\">\n            <input\n              type=\"text\"\n              placeholder=\"Buscar nos cards...\"\n              [(ngModel)]=\"filterQuery\"\n              (input)=\"applyFilters()\"\n              class=\"w-full pl-8 pr-10 py-2 border border-gray-300 rounded-full text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 focus:bg-white\"\n              [class.border-blue-300]=\"filterQuery\"\n              [class.bg-white]=\"filterQuery\">\n            \n            <i class=\"fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xs\"></i>\n            \n            <!-- Bot√£o de filtros no mobile -->\n            <button \n              (click)=\"showAdvancedFilters = !showAdvancedFilters\"\n              class=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-1 rounded-full hover:bg-gray-100 transition-colors\"\n              [class.bg-blue-50]=\"hasActiveFilters() || showAdvancedFilters\"\n              [class.text-blue-600]=\"hasActiveFilters() || showAdvancedFilters\"\n              [class.text-gray-400]=\"!hasActiveFilters() && !showAdvancedFilters\">\n              <i class=\"fas fa-sliders-h text-xs\"></i>\n              <span *ngIf=\"getActiveDynamicFiltersCount() > 0 || filterOnlyMine\" \n                    class=\"absolute -top-1 -right-1 bg-blue-500 text-white rounded-full w-3 h-3 flex items-center justify-center text-xs\">\n                {{ (filterOnlyMine ? 1 : 0) + getActiveDynamicFiltersCount() }}\n              </span>\n            </button>\n            \n            <button \n              *ngIf=\"filterQuery\"\n              (click)=\"filterQuery = ''; applyFilters()\"\n              class=\"absolute right-8 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 p-1\">\n              <i class=\"fas fa-times text-xs\"></i>\n            </button>\n          </div>\n          \n          <button *ngIf=\"hasActiveFilters()\" \n                  (click)=\"clearFilters()\" \n                  class=\"px-3 py-2 bg-red-100 text-red-700 rounded-full text-sm hover:bg-red-200 transition-colors flex items-center gap-1\">\n            <i class=\"fas fa-times\"></i>\n          Limpar\n        </button>\n      </div>\n      \n      <!-- Filtros Avan√ßados (Campos Din√¢micos) -->\n      <div *ngIf=\"showAdvancedFilters && availableFilterFields.length > 0\" \n           class=\"bg-gray-50 rounded-lg p-4 space-y-3 border\">\n        <div class=\"flex items-center justify-between\">\n          <h4 class=\"text-sm font-medium text-gray-700 flex items-center gap-2\">\n            <i class=\"fas fa-filter text-purple-600\"></i>\n            Filtros por Campos\n          </h4>\n          <button (click)=\"showAdvancedFilters = false\" \n                  class=\"text-gray-400 hover:text-gray-600 p-1\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"grid grid-cols-1 gap-3\">\n          <div *ngFor=\"let field of availableFilterFields\" \n               class=\"flex items-center gap-3\">\n            <label class=\"text-sm text-gray-600 min-w-0 flex-1\">\n              {{ field.label }}\n            </label>\n            \n            <!-- Campo de texto/email/tel -->\n            <input *ngIf=\"field.type === 'text' || field.type === 'email' || field.type === 'tel'\"\n                   type=\"text\"\n                   [placeholder]=\"'Filtrar por ' + field.label.toLowerCase()\"\n                   [value]=\"getDynamicFilterValue(field.name)\"\n                   (input)=\"setDynamicFilter(field.name, $event.target.value)\"\n                   class=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\n            \n            <!-- Campo de n√∫mero -->\n            <input *ngIf=\"field.type === 'number'\"\n                   type=\"number\"\n                   [placeholder]=\"'Filtrar por ' + field.label.toLowerCase()\"\n                   [value]=\"getDynamicFilterValue(field.name)\"\n                   (input)=\"setDynamicFilter(field.name, $event.target.value)\"\n                   class=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\n            \n            <!-- Campo de data -->\n            <input *ngIf=\"field.type === 'date'\"\n                   type=\"date\"\n                   [value]=\"getDynamicFilterValue(field.name)\"\n                   (change)=\"setDynamicFilter(field.name, $event.target.value)\"\n                   class=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\n            \n            <!-- Checkbox -->\n            <label *ngIf=\"field.type === 'checkbox'\" \n                   class=\"flex items-center gap-2 flex-1\">\n              <input type=\"checkbox\"\n                     [checked]=\"getDynamicFilterValue(field.name)\"\n                     (change)=\"setDynamicFilter(field.name, $event.target.checked)\"\n                     class=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\">\n              <span class=\"text-sm text-gray-600\">Apenas marcados</span>\n            </label>\n            \n            <!-- Select/Radio/Temperatura (dropdown com op√ß√µes) -->\n            <select *ngIf=\"field.type === 'select' || field.type === 'radio' || field.type === 'temperatura'\"\n                    [value]=\"getDynamicFilterValue(field.name)\"\n                    (change)=\"onDynamicFilterChange(field.name, $event)\"\n                    class=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\n              <option value=\"\">Todos</option>\n              <option *ngFor=\"let option of getFieldOptions(field)\" [value]=\"option\">\n                {{ option }}\n              </option>\n            </select>\n            \n            <!-- Bot√£o para remover filtro espec√≠fico -->\n            <button *ngIf=\"getDynamicFilterValue(field.name)\"\n                    (click)=\"removeDynamicFilter(field.name)\"\n                    class=\"p-1 text-red-400 hover:text-red-600 transition-colors\">\n              <i class=\"fas fa-times text-xs\"></i>\n            </button>\n          </div>\n        </div>\n        \n        <div *ngIf=\"getActiveDynamicFiltersCount() > 0\" \n             class=\"text-xs text-purple-600 flex items-center gap-1 pt-2 border-t\">\n          <i class=\"fas fa-info-circle\"></i>\n          <span>{{ getActiveDynamicFiltersCount() }} filtro(s) ativo(s) por campos</span>\n        </div>\n      </div>\n      \n      <!-- Filter status indicator -->\n      <div *ngIf=\"hasActiveFilters()\" class=\"mt-2 text-xs text-blue-600 flex items-center gap-1\">\n        <i class=\"fas fa-filter\"></i>\n        <span>Filtros ativos</span>\n        <span class=\"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full\">\n          {{ (filterQuery ? 1 : 0) + (filterOnlyMine ? 1 : 0) + getActiveDynamicFiltersCount() }}\n        </span>\n      </div>\n\n      <!-- Stages as accordion list -->\n      <div class=\"space-y-2\">\n        <div *ngFor=\"let column of columns\" class=\"rounded-2xl border border-gray-200 bg-white\">\n          <button (click)=\"toggleMobileColumn(column.id!)\" class=\"w-full px-4 py-3 flex items-center justify-between\">\n            <div class=\"flex items-center gap-3\">\n              <span class=\"inline-block w-3 h-3 rounded-full\" [style.background-color]=\"column.color || '#22c55e'\"></span>\n              <div class=\"font-semibold text-gray-800\">{{ column.name }}</div>\n            </div>\n            <div class=\"flex items-center gap-2\">\n              <span class=\"text-sm text-gray-500\">{{ getLeadsForColumn(column.id!).length }}</span>\n              <i class=\"fas\" [class.fa-chevron-down]=\"!isMobileColumnOpen(column.id!)\" [class.fa-chevron-up]=\"isMobileColumnOpen(column.id!)\"></i>\n            </div>\n          </button>\n          <div *ngIf=\"isMobileColumnOpen(column.id!)\" class=\"px-4 pb-4\">\n            <div class=\"space-y-3\">\n              <div *ngFor=\"let lead of getLeadsForColumn(column.id!)\" class=\"bg-white rounded-xl border border-gray-100 p-4 shadow-sm\">\n                <div class=\"text-base font-bold text-gray-900 mb-1\">{{ lead.fields['companyName'] || 'Sem t√≠tulo' }}</div>\n                <div class=\"text-[13px] text-gray-500 mb-2\" *ngIf=\"getLeadResponsibleName(lead)\">\n                  {{ getLeadResponsibleName(lead) }}\n                </div>\n                <div class=\"text-sm text-gray-700\" *ngIf=\"lead.fields?.['contactName']\">\n                  <span class=\"uppercase tracking-wide text-gray-400 text-[11px]\">NOME DO CONTATO</span><br>\n                  {{ lead.fields['contactName'] }}\n                </div>\n                <div class=\"mt-3 flex items-center gap-5 text-xs text-gray-500\">\n                  <div class=\"flex items-center gap-1\"><i class=\"far fa-comment\"></i> 1</div>\n                  <div class=\"flex items-center gap-1\"><i class=\"far fa-clock text-orange-400\"></i> {{ getDaysSince(lead.createdAt) }}d</div>\n                  <div class=\"flex items-center gap-1\"><i class=\"fas fa-history text-blue-500\"></i> {{ getDaysSince(lead.movedToCurrentColumnAt) }}d</div>\n                  <div class=\"flex items-center gap-1\" *ngIf=\"getLeadDueDateLabel(lead)\"><i class=\"far fa-calendar-check text-green-500\"></i> {{ getLeadDueDateLabel(lead) }}</div>\n                </div>\n              </div>\n              <div *ngIf=\"getLeadsForColumn(column.id!).length === 0\" class=\"text-center text-gray-400 text-sm py-2\">Nenhum registro nesta fase</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Cards feed (pipefy-like) -->\n      <div class=\"mt-4 space-y-3\">\n        <div *ngFor=\"let lead of leads\" class=\"bg-white rounded-2xl border border-gray-200 p-4 shadow-sm\">\n          <div class=\"text-base font-bold text-gray-900 mb-1\">{{ lead.fields['companyName'] || 'Sem t√≠tulo' }}</div>\n          <div class=\"text-[13px] text-gray-500 mb-2\" *ngIf=\"getLeadResponsibleName(lead)\">\n            {{ getLeadResponsibleName(lead) }}\n          </div>\n          <div class=\"text-sm text-gray-700\" *ngIf=\"lead.fields?.['contactName']\">\n            <span class=\"uppercase tracking-wide text-gray-400 text-[11px]\">NOME DO CONTATO</span><br>\n            {{ lead.fields['contactName'] }}\n          </div>\n          <div class=\"mt-3 flex items-center gap-5 text-xs text-gray-500\">\n            <div class=\"flex items-center gap-1\"><i class=\"far fa-comment\"></i> 1</div>\n            <div class=\"flex items-center gap-1\"><i class=\"far fa-clock text-orange-400\"></i> {{ getDaysSince(lead.createdAt) }}d</div>\n            <div class=\"flex items-center gap-1\"><i class=\"fas fa-history text-blue-500\"></i> {{ getDaysSince(lead.movedToCurrentColumnAt) }}d</div>\n            <div class=\"flex items-center gap-1\" *ngIf=\"getLeadDueDateLabel(lead)\"><i class=\"far fa-calendar-check text-green-500\"></i> {{ getLeadDueDateLabel(lead) }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Sticky bottom action -->\n    <div class=\"fixed bottom-4 inset-x-4 z-40 md:hidden\">\n      <button (click)=\"showCreateLeadModal()\" class=\"w-full h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-2xl font-semibold shadow-lg flex items-center justify-center gap-2\">\n        <span class=\"inline-flex w-6 h-6 items-center justify-center bg-blue-700/60 rounded-full\"><i class=\"fas fa-plus text-xs\"></i></span>\n        Novo lead\n      </button>\n    </div>\n  </div> <!-- closes mobile-board -->\n  </div>\n</app-main-layout>\n\n<!-- Modal de Lead -->\n<app-lead-modal \n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  [columns]=\"columns\"\n  (leadCreated)=\"onLeadCreated()\"\n  (leadUpdated)=\"onLeadUpdated()\"\n  (closeModal)=\"onLeadUpdated()\">\n</app-lead-modal>\n\n<!-- Modal de Coluna -->\n<app-column-modal \n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  [columns]=\"columns\"\n  (columnCreated)=\"onColumnCreated()\"\n  (columnUpdated)=\"onColumnUpdated()\"\n  (columnDeleted)=\"onColumnDeleted()\"\n  (closeModal)=\"onColumnUpdated()\">\n</app-column-modal>\n\n<!-- Modal de Formul√°rio da Fase -->\n<app-phase-form-modal \n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  (formConfigSaved)=\"onPhaseFormConfigSaved()\"\n  (closeModal)=\"onPhaseFormConfigSaved()\">\n</app-phase-form-modal>\n\n<!-- Modal de Detalhes do Lead -->\n<app-lead-detail-modal \n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  [columns]=\"columns\"\n  [users]=\"users\"\n  (leadUpdated)=\"onLeadUpdated()\"\n  (leadDeleted)=\"onLeadDeleted()\"\n  (closeModal)=\"onLeadUpdated()\">\n</app-lead-detail-modal>\n\n<!-- Modal de Template -->\n<app-template-modal \n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  (templateSaved)=\"onTemplateSaved()\"\n  (closeModal)=\"onTemplateSaved()\">\n</app-template-modal>\n\n<!-- Modal de Automa√ß√£o -->\n<app-automation-modal\n  *ngIf=\"showAutomationModal\"\n  [isVisible]=\"showAutomationModal\"\n  [automation]=\"selectedAutomation\"\n  [phases]=\"columns\"\n  [allowedTriggerTypes]=\"selectedPhaseIdForAutomations ? getAllowedTriggerTypesForPhase(selectedPhaseIdForAutomations) : null\"\n  [fixedPhaseId]=\"selectedPhaseIdForAutomations || null\"\n  [allowedTransitions]=\"flowConfig.allowed || {}\"\n  [emailTemplates]=\"emailTemplates\"\n  [users]=\"users\"\n  (closeModalEvent)=\"onCloseAutomationModal()\"\n  (saveAutomation)=\"onSaveAutomation($event)\">\n</app-automation-modal>\n\n<!-- Modal de Hist√≥rico de Automa√ß√£o -->\n<app-automation-history-modal\n  [isVisible]=\"showHistoryModal\"\n  [automationId]=\"selectedAutomationForHistory?.id || ''\"\n  [automationName]=\"selectedAutomationForHistory?.name || ''\"\n  [ownerId]=\"ownerId\"\n  [boardId]=\"boardId\"\n  [leads]=\"leads\"\n  (closeModalEvent)=\"onCloseHistoryModal()\">\n</app-automation-history-modal>  "],"mappings":"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","names":["ref","movedTs","moved","daysPassed","ref","RtlScrollAxisType","_ViewRepeaterOperation","document","window","ref","importantProperties","item","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","isTouchEvent","ref","_c0","_c0","_c1","_c1","_c2","_c0","_c0","_c2","_c1","map"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,26]}