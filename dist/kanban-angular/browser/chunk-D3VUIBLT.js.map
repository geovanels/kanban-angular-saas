{
  "version": 3,
  "sources": ["src/app/components/user-management/user-management.component.ts", "src/app/components/user-management/user-management.component.html"],
  "sourcesContent": ["import { Component, inject, signal, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CompanyService } from '../../services/company.service';\nimport { AuthService } from '../../services/auth.service';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { CompanyUser, Company } from '../../models/company.model';\nimport { ConfigHeaderComponent } from '../config-header/config-header.component';\nimport { MainLayoutComponent } from '../main-layout/main-layout.component';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ConfigHeaderComponent, MainLayoutComponent],\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss']\n})\nexport class UserManagementComponent implements OnInit {\n  private companyService = inject(CompanyService);\n  private authService = inject(AuthService);\n  private subdomainService = inject(SubdomainService);\n\n  users = signal<CompanyUser[]>([]);\n  currentCompany = signal<Company | null>(null);\n  currentUser = signal<any>(null);\n  isLoading = signal(false);\n  \n  // Invite user form\n  showInviteForm = signal(false);\n  inviteEmail = signal('');\n  inviteRole = signal<'admin' | 'manager' | 'user'>('user');\n  inviteLoading = signal(false);\n  inviteError = signal<string | null>(null);\n  inviteSuccess = signal<string | null>(null);\n\n\n  async ngOnInit() {\n    await this.ensureCompanyContext();\n    await this.loadUserData();\n    \n    // Primeiro, tentar sincronizar o usuário atual com a empresa\n    await this.forceAddCurrentUser();\n    \n    // Depois carregar todos os usuários\n    await this.loadCompanyUsers();\n  }\n\n\n  private async forceAddCurrentUser() {\n    const currentUser = this.authService.getCurrentUser();\n    const company = this.currentCompany();\n    \n    console.log('Force adding current user - User:', currentUser?.email, 'Company:', company?.name, 'ID:', company?.id);\n    \n    if (!currentUser || !company || !currentUser.email || !company.id) {\n      console.log('Missing data for force add user');\n      return;\n    }\n\n    try {\n      // Verificar se usuário já existe antes de adicionar\n      const existingUsers = await this.companyService.getCompanyUsers(company.id);\n      const userExists = existingUsers.some(u => u.email === currentUser.email);\n      \n      console.log('User already exists in company:', userExists);\n      \n      if (!userExists) {\n        // Determinar role baseado no email do proprietário\n        const role = currentUser.email === company.ownerEmail ? 'admin' : 'user';\n        console.log('Adding user with role:', role);\n        \n        // Forçar adição do usuário à empresa\n        await this.companyService.addUserToCompany(company.id, currentUser.email, role);\n        console.log('User added successfully');\n      }\n    } catch (error) {\n      console.error('Error in forceAddCurrentUser:', error);\n    }\n  }\n\n  private async syncCurrentUserToCompany() {\n    const currentUser = this.authService.getCurrentUser();\n    const company = this.currentCompany();\n    \n    if (!currentUser || !company || !currentUser.email) return;\n\n    try {\n      // Verificar se o usuário atual já está na lista da empresa\n      const existingUser = this.users().find(u => u.email === currentUser.email);\n      \n      if (!existingUser) {\n        // Determinar role baseado no email do proprietário\n        const role = currentUser.email === company.ownerEmail ? 'admin' : 'user';\n        \n        // Adicionar usuário à empresa\n        await this.companyService.addUserToCompany(company.id!, currentUser.email, role);\n        \n        // Recarregar lista\n        await this.loadCompanyUsers();\n      }\n    } catch (error) {\n      console.error('Erro ao sincronizar usuário atual:', error);\n    }\n  }\n\n  private async loadUserData() {\n    const company = this.subdomainService.getCurrentCompany();\n    const user = this.authService.getCurrentUser();\n    \n    this.currentCompany.set(company);\n    this.currentUser.set(user);\n  }\n\n  private async ensureCompanyContext() {\n    let company = this.subdomainService.getCurrentCompany();\n    if (!company) {\n      try {\n        company = await this.subdomainService.initializeFromSubdomain();\n      } catch {}\n    }\n    if (!company) {\n      const currentUser = this.authService.getCurrentUser();\n      if (currentUser?.email) {\n        try {\n          const found = await this.companyService.getCompanyByUserEmail(currentUser.email);\n          if (found) {\n            this.subdomainService.setCurrentCompany(found);\n            this.currentCompany.set(found);\n          }\n        } catch {}\n      }\n    } else {\n      this.currentCompany.set(company);\n    }\n  }\n\n  private async loadCompanyUsers() {\n    let company = this.currentCompany();\n    \n    if (!company || !company.id) {\n      await this.ensureCompanyContext();\n      company = this.currentCompany();\n      if (!company || !company.id) return;\n    }\n\n    this.isLoading.set(true);\n    try {\n      let users = await this.companyService.getCompanyUsers(company.id);\n      \n      // Se falhou por permissões, criar usuário fake baseado no usuário atual\n      if (users.length === 0) {\n        const currentUser = this.authService.getCurrentUser();\n        console.log('No users found, current user:', currentUser);\n        \n        if (currentUser && currentUser.email) {\n          // Criar usuário para mostrar na interface enquanto não temos acesso ao Firestore\n          const role: 'admin' | 'manager' | 'user' = currentUser.email === company.ownerEmail ? 'admin' : 'user';\n          const fakeUser = {\n            uid: currentUser.uid,\n            email: currentUser.email,\n            displayName: currentUser.displayName || this.extractNameFromEmail(currentUser.email),\n            role: role,\n            permissions: [],\n            joinedAt: new Date(),\n            photoURL: currentUser.photoURL,\n            emailVerified: currentUser.emailVerified\n          };\n          \n          users = [fakeUser];\n          \n          // Tentar adicionar no background (sem aguardar)\n          this.companyService.addUserToCompany(\n            company.id, \n            currentUser.email, \n            fakeUser.role\n          ).catch(() => {\n            // Erro silencioso\n          });\n        }\n      }\n      \n      // Enriquecer dados dos usuários com informações do Firebase Auth se disponível\n      const enrichedUsers = users.map((user) => {\n        try {\n          // Tentar obter dados adicionais do Firebase Auth se o usuário estiver logado\n          const currentUser = this.authService.getCurrentUser();\n          if (currentUser && currentUser.email === user.email) {\n            return {\n              ...user,\n              displayName: currentUser.displayName || user.displayName || this.extractNameFromEmail(user.email),\n              photoURL: currentUser.photoURL,\n              emailVerified: currentUser.emailVerified,\n              uid: currentUser.uid\n            };\n          }\n          \n          // Para outros usuários, usar dados disponíveis e inferir nome do email se necessário\n          return {\n            ...user,\n            displayName: user.displayName || this.extractNameFromEmail(user.email)\n          };\n        } catch (error) {\n          console.warn('Erro ao enriquecer dados do usuário:', user.email, error);\n          return {\n            ...user,\n            displayName: user.displayName || this.extractNameFromEmail(user.email)\n          };\n        }\n      });\n      \n      this.users.set(enrichedUsers);\n    } catch (error) {\n      console.error('Erro ao carregar usuários:', error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  private extractNameFromEmail(email: string): string {\n    const localPart = email.split('@')[0];\n    // Converter pontos e underscores em espaços e capitalizar\n    return localPart\n      .replace(/[._]/g, ' ')\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n  }\n\n  async inviteUser() {\n    const email = this.inviteEmail().trim();\n    const role = this.inviteRole();\n    const company = this.currentCompany();\n\n    if (!email || !company) return;\n\n    // Validar email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      this.inviteError.set('Email inválido');\n      return;\n    }\n\n    // Verificar se usuário já existe\n    const existingUser = this.users().find(u => u.email === email);\n    if (existingUser) {\n      this.inviteError.set('Este usuário já faz parte da empresa');\n      return;\n    }\n\n    this.inviteLoading.set(true);\n    this.inviteError.set(null);\n    this.inviteSuccess.set(null);\n\n    try {\n      await this.companyService.addUserToCompany(company.id!, email, role);\n      \n      this.inviteSuccess.set(`Convite enviado para ${email}`);\n      this.inviteEmail.set('');\n      this.inviteRole.set('user');\n      \n      // Recarregar lista de usuários\n      await this.loadCompanyUsers();\n      \n      // Esconder formulário após sucesso\n      setTimeout(() => {\n        this.showInviteForm.set(false);\n        this.inviteSuccess.set(null);\n      }, 2000);\n      \n    } catch (error: any) {\n      console.error('Erro ao convidar usuário:', error);\n      \n      let errorMessage = 'Erro ao enviar convite. Tente novamente.';\n      \n      if (error?.message) {\n        if (error.message.includes('Configuração SMTP')) {\n          errorMessage = `❌ ${error.message}. Configure o SMTP na seção de configurações antes de enviar convites.`;\n        } else if (error.message.includes('email de convite')) {\n          errorMessage = error.message;\n        } else {\n          errorMessage = `Erro: ${error.message}`;\n        }\n      }\n      \n      this.inviteError.set(errorMessage);\n    } finally {\n      this.inviteLoading.set(false);\n    }\n  }\n\n  async removeUser(userEmail: string) {\n    const company = this.currentCompany();\n    const currentUser = this.currentUser();\n    \n    if (!company || !currentUser) return;\n    \n    // Não permitir remover a si mesmo\n    if (userEmail === currentUser.email) {\n      alert('Você não pode remover a si mesmo. Use a opção \"Excluir Empresa\" se deseja sair.');\n      return;\n    }\n\n    if (!confirm(`Deseja remover o usuário ${userEmail} da empresa?`)) {\n      return;\n    }\n\n    this.isLoading.set(true);\n    try {\n      await this.companyService.removeUserFromCompany(company.id!, userEmail);\n      await this.loadCompanyUsers();\n    } catch (error) {\n      console.error('Erro ao remover usuário:', error);\n      alert('Erro ao remover usuário. Tente novamente.');\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  async changeUserRole(userEmail: string, newRole: 'admin' | 'manager' | 'user') {\n    const company = this.currentCompany();\n    if (!company) return;\n\n    this.isLoading.set(true);\n    try {\n      // Atualizar role do usuário\n      await this.companyService.updateUserRole(company.id!, userEmail, newRole);\n      await this.loadCompanyUsers();\n    } catch (error) {\n      console.error('Erro ao alterar função do usuário:', error);\n      alert('Erro ao alterar função do usuário. Tente novamente.');\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  async resendInvite(userEmail: string) {\n    const company = this.currentCompany();\n    if (!company) return;\n\n    try {\n      // Re-adicionar o usuário à empresa (que funciona como reenviar convite)\n      const user = this.users().find(u => u.email === userEmail);\n      if (user) {\n        await this.companyService.addUserToCompany(company.id!, userEmail, user.role);\n        alert(`Convite reenviado para ${userEmail}`);\n      }\n    } catch (error) {\n      console.error('Erro ao reenviar convite:', error);\n      alert('Erro ao reenviar convite. Tente novamente.');\n    }\n  }\n\n  canManageUsers(): boolean {\n    const currentUser = this.currentUser();\n    const company = this.currentCompany();\n    \n    if (!currentUser || !company) return false;\n    \n    // Verificar se é o proprietário da empresa (sempre pode gerenciar)\n    if (company.ownerEmail === currentUser.email) {\n      return true;\n    }\n    \n    // Se os usuários já foram carregados, verificar role\n    if (this.users().length > 0) {\n      const userInCompany = this.users().find(u => u.email === currentUser.email);\n      return userInCompany?.role === 'admin';\n    }\n    \n    // Se ainda não carregou os usuários, assumir que pode gerenciar\n    // (será refinado quando os dados carregarem)\n    return true;\n  }\n\n\n  showInviteFormToggle() {\n    this.showInviteForm.set(!this.showInviteForm());\n    this.inviteError.set(null);\n    this.inviteSuccess.set(null);\n    this.inviteEmail.set('');\n  }\n\n\n  getRoleLabel(role: string): string {\n    switch (role) {\n      case 'admin': return 'Administrador';\n      case 'manager': return 'Gerente';\n      case 'user': return 'Usuário';\n      default: return role;\n    }\n  }\n\n  getRoleBadgeClass(role: string): string {\n    switch (role) {\n      case 'admin': return 'badge-danger';\n      case 'manager': return 'badge-warning';\n      case 'user': return 'badge-info';\n      default: return 'badge-secondary';\n    }\n  }\n\n  getPrimaryColor(): string {\n    const company = this.subdomainService.getCurrentCompany();\n    return company?.primaryColor || company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n}", "<app-main-layout>\n  <app-config-header title=\"Gerenciar Usuários\">\n    @if (canManageUsers()) {\n      <button \n        class=\"text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\n        [style.background-color]=\"getPrimaryColor()\"\n        (click)=\"showInviteFormToggle()\"\n        [disabled]=\"inviteLoading()\">\n        <i class=\"fas fa-plus mr-1\"></i>\n        Convidar Usuário\n      </button>\n    }\n  </app-config-header>\n\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <div class=\"p-6\">\n        <!-- Invite Form -->\n        @if (showInviteForm()) {\n          <div class=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div class=\"flex items-center mb-3\">\n              <i class=\"fas fa-info-circle text-blue-500 mr-2\"></i>\n              <strong class=\"text-blue-800\">Convidar Usuário</strong>\n            </div>\n            <p class=\"text-blue-700 text-sm mb-4\">O usuário receberá um email de convite para se juntar à empresa.</p>\n\n            @if (inviteSuccess()) {\n              <div class=\"mb-4 p-3 bg-green-50 border border-green-200 rounded text-green-800\">\n                <i class=\"fas fa-check-circle mr-2\"></i>\n                {{ inviteSuccess() }}\n              </div>\n            }\n\n            @if (inviteError()) {\n              <div class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded text-red-800\">\n                <i class=\"fas fa-exclamation-circle mr-2\"></i>\n                {{ inviteError() }}\n              </div>\n            }\n\n            <form (submit)=\"inviteUser(); $event.preventDefault()\" class=\"space-y-4\">\n              <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div class=\"md:col-span-2\">\n                  <label class=\"block text-sm font-medium text-gray-700 mb-1\">Email do Usuário *</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    [value]=\"inviteEmail()\"\n                    (input)=\"inviteEmail.set($any($event.target).value)\"\n                    placeholder=\"usuario@exemplo.com\"\n                    required>\n                </div>\n                \n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-1\">Função</label>\n                  <select\n                    name=\"role\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    [value]=\"inviteRole()\"\n                    (change)=\"inviteRole.set($any($event.target).value)\">\n                    <option value=\"user\">Usuário</option>\n                    <option value=\"manager\">Gerente</option>\n                    <option value=\"admin\">Administrador</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div class=\"flex space-x-3\">\n                <button\n                  type=\"submit\"\n                  class=\"text-white px-4 py-2 rounded-md text-sm font-medium transition-colors disabled:opacity-50\"\n                  [style.background-color]=\"getPrimaryColor()\"\n                  [disabled]=\"inviteLoading() || !inviteEmail().trim()\">\n                  @if (inviteLoading()) {\n                    <i class=\"fas fa-spinner fa-spin mr-1\"></i>\n                    Enviando...\n                  } @else {\n                    <i class=\"fas fa-paper-plane mr-1\"></i>\n                    Enviar Convite\n                  }\n                </button>\n                \n                <button\n                  type=\"button\"\n                  class=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n                  (click)=\"showInviteForm.set(false)\">\n                  <i class=\"fas fa-times mr-1\"></i>\n                  Cancelar\n                </button>\n              </div>\n            </form>\n          </div>\n        }\n\n        <!-- Loading State -->\n        @if (isLoading()) {\n          <div class=\"text-center py-8\">\n            <i class=\"fas fa-spinner fa-spin text-2xl text-gray-400 mb-4\"></i>\n            <p class=\"text-gray-600\">Carregando usuários...</p>\n          </div>\n        }\n\n        <!-- Empty State -->\n        @else if (users().length === 0) {\n          <div class=\"text-center py-8\">\n            <i class=\"fas fa-users text-4xl text-gray-300 mb-4\"></i>\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-2\">Nenhum usuário encontrado</h5>\n            <p class=\"text-gray-600 mb-4\">Convide usuários para colaborar na sua empresa.</p>\n            @if (canManageUsers()) {\n              <button \n                class=\"text-white px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n                [style.background-color]=\"getPrimaryColor()\"\n                (click)=\"showInviteFormToggle()\">\n                <i class=\"fas fa-plus mr-1\"></i>\n                Convidar Primeiro Usuário\n              </button>\n            }\n          </div>\n        }\n\n        <!-- Users Table -->\n        @else {\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200\">\n              <thead class=\"bg-gray-50\">\n                <tr>\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Usuário</th>\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Função</th>\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Membro desde</th>\n                  <th class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Ações</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white divide-y divide-gray-200\">\n                @for (user of users(); track user.email) {\n                  <tr class=\"hover:bg-gray-50\">\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                      <div class=\"flex items-center\">\n                        <div class=\"flex-shrink-0 h-10 w-10\">\n                          @if (user.displayName) {\n                            <div class=\"h-10 w-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n                              {{ user.displayName.charAt(0).toUpperCase() }}\n                            </div>\n                          } @else {\n                            <i class=\"fas fa-user-circle text-2xl text-gray-400\"></i>\n                          }\n                        </div>\n                        <div class=\"ml-4\">\n                          <div class=\"text-sm font-medium text-gray-900\">\n                            {{ user.displayName || 'Usuário sem nome' }}\n                          </div>\n                          @if (user.email === currentUser()?.email) {\n                            <span class=\"text-xs text-blue-600 font-medium\">(Você)</span>\n                          }\n                          @if (user.email === currentCompany()?.ownerEmail) {\n                            <span class=\"text-xs text-purple-600 font-medium\">(Proprietário)</span>\n                          }\n                        </div>\n                      </div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                      <div class=\"text-sm text-gray-900\">{{ user.email }}</div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                      @if (canManageUsers() && user.email !== currentCompany()?.ownerEmail) {\n                        <select\n                          class=\"text-sm border border-gray-300 rounded px-2 py-1 focus:ring-blue-500 focus:border-blue-500\"\n                          [value]=\"user.role\"\n                          [disabled]=\"isLoading()\"\n                          (change)=\"changeUserRole(user.email, $any($event.target).value)\">\n                          <option value=\"user\">Usuário</option>\n                          <option value=\"manager\">Gerente</option>\n                          <option value=\"admin\">Administrador</option>\n                        </select>\n                      } @else {\n                        <span [class]=\"getRoleBadgeClass(user.role)\">\n                          {{ getRoleLabel(user.role) }}\n                        </span>\n                      }\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                      <span class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\n                        Ativo\n                      </span>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {{ (user.joinedAt?.toLocaleDateString('pt-BR')) || 'Data não disponível' }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      @if (canManageUsers() && user.email !== currentUser()?.email && user.email !== currentCompany()?.ownerEmail) {\n                        <div class=\"flex space-x-2 justify-end\">\n                          <button\n                            class=\"text-blue-600 hover:text-blue-800 text-sm\"\n                            (click)=\"resendInvite(user.email)\"\n                            [disabled]=\"isLoading()\">\n                            <i class=\"fas fa-envelope mr-1\"></i>\n                            Reenviar\n                          </button>\n                          <button\n                            class=\"text-red-600 hover:text-red-800 text-sm\"\n                            (click)=\"removeUser(user.email)\"\n                            [disabled]=\"isLoading()\">\n                            <i class=\"fas fa-trash mr-1\"></i>\n                            Remover\n                          </button>\n                        </div>\n                      }\n                    </td>\n                  </tr>\n                }\n              </tbody>\n            </table>\n          </div>\n        }\n      </div>\n    </div>\n\n  </div>\n</app-main-layout>\n\n"],
  "mappings": "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",
  "names": []
}
