{
  "version": 3,
  "sources": ["src/app/components/invite-accept/invite-accept.component.ts", "src/app/components/invite-accept/invite-accept.component.html"],
  "sourcesContent": ["import { Component, inject, signal, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CompanyService } from '../../services/company.service';\nimport { AuthService } from '../../services/auth.service';\nimport { SubdomainService } from '../../services/subdomain.service';\nimport { Company } from '../../models/company.model';\n\n@Component({\n  selector: 'app-invite-accept',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './invite-accept.component.html',\n  styleUrls: ['./invite-accept.component.scss']\n})\nexport class InviteAcceptComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private companyService = inject(CompanyService);\n  private authService = inject(AuthService);\n  private subdomainService = inject(SubdomainService);\n\n  // State\n  inviteToken = signal<string | null>(null);\n  companyId = signal<string | null>(null);\n  company = signal<Company | null>(null);\n  userEmail = signal<string | null>(null);\n  loading = signal(false);\n  error = signal<string | null>(null);\n  success = signal(false);\n\n  // Form\n  displayName = signal('');\n  password = signal('');\n  confirmPassword = signal('');\n\n  async ngOnInit() {\n    const token = this.route.snapshot.queryParamMap.get('token');\n    const email = this.route.snapshot.queryParamMap.get('email');\n    const companyId = this.route.snapshot.queryParamMap.get('companyId');\n    \n    if (!token || !email || !companyId) {\n      this.error.set('Link de convite inv√°lido ou expirado.');\n      return;\n    }\n\n    this.inviteToken.set(token);\n    this.userEmail.set(email);\n    this.companyId.set(companyId);\n    \n    // Extrair nome do email para pr√©-preencher o campo\n    this.displayName.set(this.extractNameFromEmail(email));\n\n    // Buscar empresa pelo ID\n    await this.loadCompanyFromInvite(companyId);\n  }\n\n  private extractNameFromEmail(email: string): string {\n    const name = email.split('@')[0];\n    return name\n      .split(/[._-]/)\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n  }\n\n  private async loadCompanyFromInvite(companyId: string) {\n    this.loading.set(true);\n    try {\n      console.log('üîç Debug - Carregando empresa pelo ID:', companyId);\n      \n      // Buscar empresa diretamente pelo ID (sem precisar de permiss√µes especiais)\n      const company = await this.companyService.getCompany(companyId);\n      \n      if (company) {\n        console.log('üè¢ Debug - Empresa encontrada:', company.name);\n        this.company.set(company);\n        this.subdomainService.setCurrentCompany(company);\n        \n        // Tentar carregar o nome do usu√°rio do convite\n        await this.loadUserNameFromInvite(companyId);\n      } else {\n        console.log('‚ùå Debug - Empresa n√£o encontrada');\n        this.error.set('Empresa n√£o encontrada. O convite pode estar expirado.');\n        return;\n      }\n      \n      console.log('‚úÖ Debug - Formul√°rio de aceita√ß√£o pronto');\n      \n    } catch (error) {\n      console.error('‚ùå Debug - Erro ao carregar empresa:', error);\n      this.error.set('Erro ao carregar informa√ß√µes da empresa.');\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  private async loadUserNameFromInvite(companyId: string) {\n    try {\n      const email = this.userEmail();\n      if (!email) return;\n\n      console.log('üë§ Debug - Tentando carregar nome do usu√°rio do convite...');\n      const companyUser = await this.companyService.getCompanyUser(companyId, email);\n      \n      if (companyUser && companyUser.displayName) {\n        console.log('‚úÖ Debug - Nome encontrado no convite:', companyUser.displayName);\n        this.displayName.set(companyUser.displayName);\n      } else {\n        console.log('‚ÑπÔ∏è Debug - Nome n√£o encontrado no convite, usando extra√ß√£o do email');\n        // Manter o nome extra√≠do do email como fallback\n      }\n    } catch (error) {\n      console.log('‚ö†Ô∏è Debug - Erro ao carregar nome do convite (usando fallback):', error);\n      // Se der erro, mant√©m o nome extra√≠do do email\n    }\n  }\n\n  async acceptInvite() {\n    const email = this.userEmail();\n    const name = this.displayName().trim();\n    const pwd = this.password().trim();\n    const confirmPwd = this.confirmPassword().trim();\n    const token = this.inviteToken();\n\n    console.log('üîç Debug Form - Validando campos:', { \n      email: !!email, \n      name: !!name && name.length > 0, \n      pwd: !!pwd && pwd.length > 0, \n      confirmPwd: !!confirmPwd && confirmPwd.length > 0,\n      token: !!token \n    });\n\n    if (!email || !name || !pwd || !confirmPwd || !token) {\n      this.error.set('Todos os campos s√£o obrigat√≥rios.');\n      return;\n    }\n\n    if (pwd.length < 6) {\n      this.error.set('A senha deve ter pelo menos 6 caracteres.');\n      return;\n    }\n\n    if (pwd !== confirmPwd) {\n      this.error.set('As senhas n√£o conferem.');\n      return;\n    }\n\n    this.loading.set(true);\n    this.error.set(null);\n\n    try {\n      console.log('üîê Debug - Tentando criar conta do usu√°rio...');\n      // Tentar criar conta do usu√°rio\n      let result = await this.authService.signUpWithEmail(email, pwd, name);\n      \n      // Se o email j√° estiver em uso, tentar fazer login\n      if (!result.success && result.error?.includes('email-already-in-use')) {\n        console.log('üë§ Debug - Email j√° existe, tentando fazer login...');\n        result = await this.authService.signInWithEmail(email, pwd);\n        \n        if (!result.success) {\n          throw new Error('Email j√° cadastrado. Verifique sua senha ou fa√ßa login normalmente.');\n        }\n        \n        console.log('‚úÖ Debug - Login realizado com sucesso');\n      } else if (!result.success) {\n        throw new Error(result.error);\n      }\n      \n      console.log('‚úÖ Debug - Conta criada ou login realizado, processando convite...');\n      \n      // Primeiro, tentar processar o convite diretamente\n      const companyId = this.companyId();\n      if (!companyId) {\n        throw new Error('ID da empresa n√£o encontrado.');\n      }\n\n      const company = this.company();\n      if (company) {\n        // Definir empresa no servi√ßo de subdom√≠nio\n        this.subdomainService.setCurrentCompany(company);\n        console.log('‚úÖ Debug - Empresa definida no contexto');\n      }\n\n      // Tentar processar o convite imediatamente\n      console.log('üîÑ Debug - Tentando processar convite imediatamente...');\n      const inviteProcessed = await this.authService.processPendingInvite(companyId, email, token);\n      \n      if (inviteProcessed) {\n        console.log('‚úÖ Debug - Convite processado com sucesso imediatamente');\n      } else {\n        // Se n√£o conseguir processar imediatamente, salvar para tentar depois\n        console.log('üíæ Debug - Salvando convite para processamento posterior...');\n        const inviteData = {\n          companyId: companyId,\n          email: email,\n          token: token,\n          timestamp: Date.now()\n        };\n        localStorage.setItem('pendingInvite', JSON.stringify(inviteData));\n      }\n\n      console.log('üéâ Debug - Convite aceito com sucesso!');\n      this.success.set(true);\n      \n      // Redirecionar para o dashboard ap√≥s 2 segundos\n      setTimeout(() => {\n        this.router.navigate(['/dashboard']);\n      }, 2000);\n\n    } catch (error: any) {\n      console.error('‚ùå Debug - Erro ao aceitar convite:', error);\n      \n      let errorMessage = 'Erro ao aceitar convite. Tente novamente.';\n      if (error?.code) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            errorMessage = 'Este email j√° est√° em uso. Fa√ßa login em vez disso.';\n            break;\n          case 'auth/weak-password':\n            errorMessage = 'A senha √© muito fraca. Use pelo menos 6 caracteres.';\n            break;\n          case 'auth/invalid-email':\n            errorMessage = 'Email inv√°lido.';\n            break;\n          default:\n            errorMessage = error.message || errorMessage;\n        }\n      }\n      \n      this.error.set(errorMessage);\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  getPrimaryColor(): string {\n    const company = this.company();\n    return company?.primaryColor || company?.brandingConfig?.primaryColor || '#3B82F6';\n  }\n}", "<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 pb-16\">\n  <div class=\"max-w-md w-full space-y-8\">\n    <!-- Header -->\n    <div class=\"text-center\">\n      <div *ngIf=\"company()?.brandingConfig?.logo\" class=\"flex justify-center mb-4\">\n        <img [src]=\"company()!.brandingConfig!.logo\" [alt]=\"company()!.name\" class=\"h-12 w-auto\">\n      </div>\n      <h2 class=\"text-3xl font-extrabold text-gray-900 mb-2\">\n        Aceitar Convite\n      </h2>\n      <p *ngIf=\"company()\" class=\"text-sm text-gray-600\">\n        Voc√™ foi convidado para participar da <strong>{{ company()!.name }}</strong>\n      </p>\n    </div>\n\n    <!-- Loading -->\n    <div *ngIf=\"loading() && !error() && !success()\" class=\"text-center\">\n      <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n      <p class=\"mt-2 text-sm text-gray-600\">Carregando...</p>\n    </div>\n\n    <!-- Error -->\n    <div *ngIf=\"error()\" class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{{ error() }}</p>\n        </div>\n      </div>\n      \n      <div class=\"mt-4 text-center\">\n        <button \n          (click)=\"goToLogin()\"\n          class=\"text-sm text-red-600 hover:text-red-500 underline\">\n          Ir para Login\n        </button>\n      </div>\n    </div>\n\n    <!-- Success -->\n    <div *ngIf=\"success()\" class=\"bg-green-50 border border-green-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-green-800\">\n            Convite aceito com sucesso! Redirecionando para o dashboard...\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form -->\n    <form *ngIf=\"!loading() && !error() && !success() && company()\" (ngSubmit)=\"acceptInvite()\" class=\"mt-8 space-y-6\">\n      <div class=\"space-y-4\">\n        <!-- Email (readonly) -->\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Email\n          </label>\n          <input \n            type=\"email\" \n            [value]=\"userEmail()\" \n            readonly \n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-50 text-gray-500 cursor-not-allowed focus:outline-none\">\n        </div>\n\n        <!-- Nome -->\n        <div>\n          <label for=\"displayName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Nome completo\n          </label>\n          <input \n            id=\"displayName\"\n            name=\"displayName\"\n            type=\"text\" \n            [ngModel]=\"displayName()\" \n            (ngModelChange)=\"displayName.set($event)\"\n            required\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n        </div>\n\n        <!-- Senha -->\n        <div>\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Senha\n          </label>\n          <input \n            id=\"password\"\n            name=\"password\"\n            type=\"password\" \n            [ngModel]=\"password()\" \n            (ngModelChange)=\"password.set($event)\"\n            required\n            minlength=\"6\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n          <p class=\"mt-1 text-sm text-gray-500\">M√≠nimo de 6 caracteres</p>\n        </div>\n\n        <!-- Confirmar Senha -->\n        <div>\n          <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n            Confirmar senha\n          </label>\n          <input \n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\" \n            [ngModel]=\"confirmPassword()\" \n            (ngModelChange)=\"confirmPassword.set($event)\"\n            required\n            minlength=\"6\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n        </div>\n      </div>\n\n      <!-- Submit Button -->\n      <div>\n        <button \n          type=\"submit\" \n          [disabled]=\"loading()\"\n          [style.background-color]=\"getPrimaryColor()\"\n          class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n          \n          <span *ngIf=\"loading()\" class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n            <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n          </span>\n          \n          {{ loading() ? 'Criando conta...' : 'Aceitar convite e criar conta' }}\n        </button>\n      </div>\n\n      <!-- Login Link -->\n      <div class=\"text-center\">\n        <p class=\"text-sm text-gray-600\">\n          J√° possui uma conta? \n          <button \n            type=\"button\"\n            (click)=\"goToLogin()\"\n            class=\"font-medium text-blue-600 hover:text-blue-500\">\n            Fazer login\n          </button>\n        </p>\n      </div>\n    </form>\n  </div>\n</div>\n\n<!-- Footer -->\n<div class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-3\">\n  <div class=\"text-center\">\n    <p class=\"text-xs text-gray-500\">\n      Powered by <strong class=\"text-gray-700\">TaskBoard</strong> - Sistema de Gest√£o Kanban\n    </p>\n  </div>\n</div>"],
  "mappings": "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",
  "names": []
}
