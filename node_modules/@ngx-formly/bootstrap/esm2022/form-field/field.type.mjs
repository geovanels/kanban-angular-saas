import { Directive, Optional, ViewChild } from '@angular/core';
import { FieldType as CoreFieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
export class FieldType extends CoreFieldType {
    set content(templateRef) {
        if (templateRef && this.hostContainerRef) {
            this.hostContainerRef.createEmbeddedView(templateRef);
        }
    }
    constructor(hostContainerRef) {
        super();
        this.hostContainerRef = hostContainerRef;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FieldType, deps: [{ token: i0.ViewContainerRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: FieldType, viewQueries: [{ propertyName: "content", first: true, predicate: ["fieldTypeTemplate"], descendants: true, static: true }], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FieldType, decorators: [{
            type: Directive
        }], ctorParameters: () => [{ type: i0.ViewContainerRef, decorators: [{
                    type: Optional
                }] }], propDecorators: { content: [{
                type: ViewChild,
                args: ['fieldTypeTemplate', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy91aS9ib290c3RyYXAvZm9ybS1maWVsZC9zcmMvZmllbGQudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBZSxTQUFTLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSxTQUFTLElBQUksYUFBYSxFQUFxQixNQUFNLGtCQUFrQixDQUFDOztBQUdqRixNQUFNLE9BQWdCLFNBQTJELFNBQVEsYUFBZ0I7SUFDdkcsSUFBc0QsT0FBTyxDQUFDLFdBQTZCO1FBQ3pGLElBQUksV0FBVyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1lBQ3pDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4RCxDQUFDO0lBQ0gsQ0FBQztJQUVELFlBQWdDLGdCQUFtQztRQUNqRSxLQUFLLEVBQUUsQ0FBQztRQURzQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQW1CO0lBRW5FLENBQUM7K0dBVG1CLFNBQVM7bUdBQVQsU0FBUzs7NEZBQVQsU0FBUztrQkFEOUIsU0FBUzs7MEJBUUssUUFBUTt5Q0FOaUMsT0FBTztzQkFBNUQsU0FBUzt1QkFBQyxtQkFBbUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsLCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgYXMgQ29yZUZpZWxkVHlwZSwgRm9ybWx5RmllbGRDb25maWcgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRmllbGRUeXBlPEYgZXh0ZW5kcyBGb3JtbHlGaWVsZENvbmZpZyA9IEZvcm1seUZpZWxkQ29uZmlnPiBleHRlbmRzIENvcmVGaWVsZFR5cGU8Rj4ge1xuICBAVmlld0NoaWxkKCdmaWVsZFR5cGVUZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlIH0pIHNldCBjb250ZW50KHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgaWYgKHRlbXBsYXRlUmVmICYmIHRoaXMuaG9zdENvbnRhaW5lclJlZikge1xuICAgICAgdGhpcy5ob3N0Q29udGFpbmVyUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0ZW1wbGF0ZVJlZik7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgcHJpdmF0ZSBob3N0Q29udGFpbmVyUmVmPzogVmlld0NvbnRhaW5lclJlZikge1xuICAgIHN1cGVyKCk7XG4gIH1cbn1cbiJdfQ==